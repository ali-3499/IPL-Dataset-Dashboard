<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Yuzvendra Chahal' caption='Top 10 Bowlers' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='9.'>
        <calculation class='tableau' formula='9.' />
        <aliases>
          <alias key='1.' value='Lasith Malinga' />
          <alias key='2.' value='Amit Mishra' />
          <alias key='3.' value='Dwayne Bravo' />
          <alias key='4.' value='Piyush Chawla' />
          <alias key='5.' value='Harbhajan Singh' />
          <alias key='6.' value='Ravichandran Ashwin' />
          <alias key='7.' value='Bhuvneshwar Kumar' />
          <alias key='8.' value='Sunil Narine' />
          <alias key='9.' value='Yuzvendra Chahal' />
          <alias key='10.' value='Ravindra Jadeja' />
        </aliases>
        <members>
          <member alias='Lasith Malinga' value='1.' />
          <member alias='Amit Mishra' value='2.' />
          <member alias='Dwayne Bravo' value='3.' />
          <member alias='Piyush Chawla' value='4.' />
          <member alias='Harbhajan Singh' value='5.' />
          <member alias='Ravichandran Ashwin' value='6.' />
          <member alias='Bhuvneshwar Kumar' value='7.' />
          <member alias='Sunil Narine' value='8.' />
          <member alias='Yuzvendra Chahal' value='9.' />
          <member alias='Ravindra Jadeja' value='10.' />
        </members>
      </column>
      <column alias='Shikhar Dhawan' caption='Select Batsman' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='2'>
        <calculation class='tableau' formula='2' />
        <aliases>
          <alias key='1' value='Virat Kohli' />
          <alias key='2' value='Shikhar Dhawan' />
          <alias key='3' value='Rohit Sharma' />
          <alias key='4' value='Suresh Raina' />
          <alias key='5' value='David Warner' />
          <alias key='6' value='AB de Villiers' />
          <alias key='7' value='Chris Gayle' />
          <alias key='8' value='Mahendra Singh Dhoni' />
          <alias key='9' value='Robin Uthappa' />
          <alias key='10' value='Gautam Gambhir' />
        </aliases>
        <members>
          <member alias='Virat Kohli' value='1' />
          <member alias='Shikhar Dhawan' value='2' />
          <member alias='Rohit Sharma' value='3' />
          <member alias='Suresh Raina' value='4' />
          <member alias='David Warner' value='5' />
          <member alias='AB de Villiers' value='6' />
          <member alias='Chris Gayle' value='7' />
          <member alias='Mahendra Singh Dhoni' value='8' />
          <member alias='Robin Uthappa' value='9' />
          <member alias='Gautam Gambhir' value='10' />
        </members>
      </column>
    </datasource>
    <datasource caption='matches' inline='true' name='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches' name='textscan.0bmtnnx115sqk01564cpq0es9cgx'>
            <connection class='textscan' directory='C:/Users/acer/Downloads/IPL' filename='matches.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[deliveries].[id]' />
              <expression op='[matches].[id]' />
            </expression>
          </clause>
          <relation connection='textscan.0bmtnnx115sqk01564cpq0es9cgx' name='deliveries' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='integer' name='over' ordinal='2' />
              <column datatype='integer' name='ball' ordinal='3' />
              <column datatype='string' name='batsman' ordinal='4' />
              <column datatype='string' name='non_striker' ordinal='5' />
              <column datatype='string' name='bowler' ordinal='6' />
              <column datatype='integer' name='batsman_runs' ordinal='7' />
              <column datatype='integer' name='extra_runs' ordinal='8' />
              <column datatype='integer' name='total_runs' ordinal='9' />
              <column datatype='integer' name='non_boundary' ordinal='10' />
              <column datatype='integer' name='is_wicket' ordinal='11' />
              <column datatype='string' name='dismissal_kind' ordinal='12' />
              <column datatype='string' name='player_dismissed' ordinal='13' />
              <column datatype='string' name='fielder' ordinal='14' />
              <column datatype='string' name='extras_type' ordinal='15' />
              <column datatype='string' name='batting_team' ordinal='16' />
              <column datatype='string' name='bowling_team' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0bmtnnx115sqk01564cpq0es9cgx' name='matches' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='player_of_match' ordinal='3' />
              <column datatype='string' name='venue' ordinal='4' />
              <column datatype='integer' name='neutral_venue' ordinal='5' />
              <column datatype='string' name='team1' ordinal='6' />
              <column datatype='string' name='team2' ordinal='7' />
              <column datatype='string' name='toss_winner' ordinal='8' />
              <column datatype='string' name='toss_decision' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='string' name='result' ordinal='11' />
              <column datatype='real' name='result_margin' ordinal='12' />
              <column datatype='string' name='method' ordinal='13' />
              <column datatype='string' name='umpire1' ordinal='14' />
              <column datatype='string' name='umpire2' ordinal='15' />
              <column datatype='integer' name='is_playoff' ordinal='16' />
              <column datatype='integer' name='is_eliminator' ordinal='17' />
              <column datatype='integer' name='is_qualifier' ordinal='18' />
              <column datatype='integer' name='is_final' ordinal='19' />
              <column datatype='string' name='home_of' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[deliveries].[id]' />
              <expression op='[matches].[id]' />
            </expression>
          </clause>
          <relation connection='textscan.0bmtnnx115sqk01564cpq0es9cgx' name='deliveries' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='integer' name='over' ordinal='2' />
              <column datatype='integer' name='ball' ordinal='3' />
              <column datatype='string' name='batsman' ordinal='4' />
              <column datatype='string' name='non_striker' ordinal='5' />
              <column datatype='string' name='bowler' ordinal='6' />
              <column datatype='integer' name='batsman_runs' ordinal='7' />
              <column datatype='integer' name='extra_runs' ordinal='8' />
              <column datatype='integer' name='total_runs' ordinal='9' />
              <column datatype='integer' name='non_boundary' ordinal='10' />
              <column datatype='integer' name='is_wicket' ordinal='11' />
              <column datatype='string' name='dismissal_kind' ordinal='12' />
              <column datatype='string' name='player_dismissed' ordinal='13' />
              <column datatype='string' name='fielder' ordinal='14' />
              <column datatype='string' name='extras_type' ordinal='15' />
              <column datatype='string' name='batting_team' ordinal='16' />
              <column datatype='string' name='bowling_team' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0bmtnnx115sqk01564cpq0es9cgx' name='matches' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='player_of_match' ordinal='3' />
              <column datatype='string' name='venue' ordinal='4' />
              <column datatype='integer' name='neutral_venue' ordinal='5' />
              <column datatype='string' name='team1' ordinal='6' />
              <column datatype='string' name='team2' ordinal='7' />
              <column datatype='string' name='toss_winner' ordinal='8' />
              <column datatype='string' name='toss_decision' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='string' name='result' ordinal='11' />
              <column datatype='real' name='result_margin' ordinal='12' />
              <column datatype='string' name='method' ordinal='13' />
              <column datatype='string' name='umpire1' ordinal='14' />
              <column datatype='string' name='umpire2' ordinal='15' />
              <column datatype='integer' name='is_playoff' ordinal='16' />
              <column datatype='integer' name='is_eliminator' ordinal='17' />
              <column datatype='integer' name='is_qualifier' ordinal='18' />
              <column datatype='integer' name='is_final' ordinal='19' />
              <column datatype='string' name='home_of' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[ball]' value='[deliveries].[ball]' />
          <map key='[batsman]' value='[deliveries].[batsman]' />
          <map key='[batsman_runs]' value='[deliveries].[batsman_runs]' />
          <map key='[batting_team]' value='[deliveries].[batting_team]' />
          <map key='[bowler]' value='[deliveries].[bowler]' />
          <map key='[bowling_team]' value='[deliveries].[bowling_team]' />
          <map key='[city]' value='[matches].[city]' />
          <map key='[date]' value='[matches].[date]' />
          <map key='[dismissal_kind]' value='[deliveries].[dismissal_kind]' />
          <map key='[extra_runs]' value='[deliveries].[extra_runs]' />
          <map key='[extras_type]' value='[deliveries].[extras_type]' />
          <map key='[fielder]' value='[deliveries].[fielder]' />
          <map key='[home_of]' value='[matches].[home_of]' />
          <map key='[id (matches.csv)]' value='[matches].[id]' />
          <map key='[id]' value='[deliveries].[id]' />
          <map key='[inning]' value='[deliveries].[inning]' />
          <map key='[is_eliminator]' value='[matches].[is_eliminator]' />
          <map key='[is_final]' value='[matches].[is_final]' />
          <map key='[is_playoff]' value='[matches].[is_playoff]' />
          <map key='[is_qualifier]' value='[matches].[is_qualifier]' />
          <map key='[is_wicket]' value='[deliveries].[is_wicket]' />
          <map key='[method]' value='[matches].[method]' />
          <map key='[neutral_venue]' value='[matches].[neutral_venue]' />
          <map key='[non_boundary]' value='[deliveries].[non_boundary]' />
          <map key='[non_striker]' value='[deliveries].[non_striker]' />
          <map key='[over]' value='[deliveries].[over]' />
          <map key='[player_dismissed]' value='[deliveries].[player_dismissed]' />
          <map key='[player_of_match]' value='[matches].[player_of_match]' />
          <map key='[result]' value='[matches].[result]' />
          <map key='[result_margin]' value='[matches].[result_margin]' />
          <map key='[team1]' value='[matches].[team1]' />
          <map key='[team2]' value='[matches].[team2]' />
          <map key='[toss_decision]' value='[matches].[toss_decision]' />
          <map key='[toss_winner]' value='[matches].[toss_winner]' />
          <map key='[total_runs]' value='[deliveries].[total_runs]' />
          <map key='[umpire1]' value='[matches].[umpire1]' />
          <map key='[umpire2]' value='[matches].[umpire2]' />
          <map key='[venue]' value='[matches].[venue]' />
          <map key='[winner]' value='[matches].[winner]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_boundary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[non_boundary]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>non_boundary</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_wicket</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_wicket]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>is_wicket</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extras_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extras_type]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>extras_type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (matches.csv)]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral_venue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[neutral_venue]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>neutral_venue</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[result_margin]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>result_margin</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_playoff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_playoff]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>is_playoff</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_eliminator</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_eliminator]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>is_eliminator</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_qualifier</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_qualifier]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>is_qualifier</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_final</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_final]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>is_final</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_of</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_of]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>home_of</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Match Outcome' datatype='string' name='[Calculation_733242334195023872]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [toss_winner]=[winner] THEN &apos;Match and Toss Won &apos; ELSE &apos;Match lost inspite of Toss Win&apos; END' />
      </column>
      <column caption='economy' datatype='real' name='[Calculation_980095889844977667]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([batsman_runs])/[Calculation_980095889848758277]' />
      </column>
      <column caption='Over' datatype='real' name='[Calculation_980095889848758277]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([ball])/6' />
      </column>
      <column datatype='string' name='[Toss Decision (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[toss_decision]' new-bin='true'>
          <bin default-name='true' value='&quot;bat&quot;'>
            <value>&quot;bat&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;field&quot;'>
            <value>&quot;field&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Home Of' datatype='string' name='[home_of]' role='dimension' type='nominal' />
      <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Is Eliminator' datatype='integer' name='[is_eliminator]' role='measure' type='quantitative' />
      <column caption='Is Final' datatype='integer' name='[is_final]' role='measure' type='quantitative' />
      <column caption='Is Playoff' datatype='integer' name='[is_playoff]' role='measure' type='quantitative' />
      <column caption='Is Qualifier' datatype='integer' name='[is_qualifier]' role='measure' type='quantitative' />
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal' />
      <column caption='Neutral Venue' datatype='integer' name='[neutral_venue]' role='measure' type='quantitative' />
      <column datatype='string' name='[over (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[over]' new-bin='true' />
      </column>
      <column datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Result Margin' datatype='real' name='[result_margin]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_733242334195023872]' derivation='None' name='[none:Calculation_733242334195023872:nk]' pivot='key' type='nominal' />
      <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Toss Decision (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;field&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_733242334195023872:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Match and Toss Won &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Match lost inspite of Toss Win&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:toss_decision:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;field&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='matches.csv_9B0EB92BE6A24AB0B137CEC18748D2E4'>
            <properties context=''>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[deliveries].[id]' />
                    <expression op='[matches].[id]' />
                  </expression>
                </clause>
                <relation connection='textscan.0bmtnnx115sqk01564cpq0es9cgx' name='deliveries' table='[deliveries#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='integer' name='inning' ordinal='1' />
                    <column datatype='integer' name='over' ordinal='2' />
                    <column datatype='integer' name='ball' ordinal='3' />
                    <column datatype='string' name='batsman' ordinal='4' />
                    <column datatype='string' name='non_striker' ordinal='5' />
                    <column datatype='string' name='bowler' ordinal='6' />
                    <column datatype='integer' name='batsman_runs' ordinal='7' />
                    <column datatype='integer' name='extra_runs' ordinal='8' />
                    <column datatype='integer' name='total_runs' ordinal='9' />
                    <column datatype='integer' name='non_boundary' ordinal='10' />
                    <column datatype='integer' name='is_wicket' ordinal='11' />
                    <column datatype='string' name='dismissal_kind' ordinal='12' />
                    <column datatype='string' name='player_dismissed' ordinal='13' />
                    <column datatype='string' name='fielder' ordinal='14' />
                    <column datatype='string' name='extras_type' ordinal='15' />
                    <column datatype='string' name='batting_team' ordinal='16' />
                    <column datatype='string' name='bowling_team' ordinal='17' />
                  </columns>
                </relation>
                <relation connection='textscan.0bmtnnx115sqk01564cpq0es9cgx' name='matches' table='[matches#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='string' name='city' ordinal='1' />
                    <column datatype='date' name='date' ordinal='2' />
                    <column datatype='string' name='player_of_match' ordinal='3' />
                    <column datatype='string' name='venue' ordinal='4' />
                    <column datatype='integer' name='neutral_venue' ordinal='5' />
                    <column datatype='string' name='team1' ordinal='6' />
                    <column datatype='string' name='team2' ordinal='7' />
                    <column datatype='string' name='toss_winner' ordinal='8' />
                    <column datatype='string' name='toss_decision' ordinal='9' />
                    <column datatype='string' name='winner' ordinal='10' />
                    <column datatype='string' name='result' ordinal='11' />
                    <column datatype='real' name='result_margin' ordinal='12' />
                    <column datatype='string' name='method' ordinal='13' />
                    <column datatype='string' name='umpire1' ordinal='14' />
                    <column datatype='string' name='umpire2' ordinal='15' />
                    <column datatype='integer' name='is_playoff' ordinal='16' />
                    <column datatype='integer' name='is_eliminator' ordinal='17' />
                    <column datatype='integer' name='is_qualifier' ordinal='18' />
                    <column datatype='integer' name='is_final' ordinal='19' />
                    <column datatype='string' name='home_of' ordinal='20' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='deliveries' inline='true' name='federated.0kphudx0f8udkw1bmt7y71554wk7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deliveries' name='textscan.1ptx2n10cet77w16p4o2l12xgjm1'>
            <connection class='textscan' directory='C:/Users/acer/Downloads/IPL' filename='deliveries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[deliveries.csv].[id]' />
              <expression op='[matches.csv].[id]' />
            </expression>
          </clause>
          <relation connection='textscan.1ptx2n10cet77w16p4o2l12xgjm1' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='integer' name='over' ordinal='2' />
              <column datatype='integer' name='ball' ordinal='3' />
              <column datatype='string' name='batsman' ordinal='4' />
              <column datatype='string' name='non_striker' ordinal='5' />
              <column datatype='string' name='bowler' ordinal='6' />
              <column datatype='integer' name='batsman_runs' ordinal='7' />
              <column datatype='integer' name='extra_runs' ordinal='8' />
              <column datatype='integer' name='total_runs' ordinal='9' />
              <column datatype='integer' name='non_boundary' ordinal='10' />
              <column datatype='integer' name='is_wicket' ordinal='11' />
              <column datatype='string' name='dismissal_kind' ordinal='12' />
              <column datatype='string' name='player_dismissed' ordinal='13' />
              <column datatype='string' name='fielder' ordinal='14' />
              <column datatype='string' name='extras_type' ordinal='15' />
              <column datatype='string' name='batting_team' ordinal='16' />
              <column datatype='string' name='bowling_team' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.1ptx2n10cet77w16p4o2l12xgjm1' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='player_of_match' ordinal='3' />
              <column datatype='string' name='venue' ordinal='4' />
              <column datatype='integer' name='neutral_venue' ordinal='5' />
              <column datatype='string' name='team1' ordinal='6' />
              <column datatype='string' name='team2' ordinal='7' />
              <column datatype='string' name='toss_winner' ordinal='8' />
              <column datatype='string' name='toss_decision' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='string' name='result' ordinal='11' />
              <column datatype='real' name='result_margin' ordinal='12' />
              <column datatype='string' name='method' ordinal='13' />
              <column datatype='string' name='umpire1' ordinal='14' />
              <column datatype='string' name='umpire2' ordinal='15' />
              <column datatype='integer' name='is_playoff' ordinal='16' />
              <column datatype='integer' name='is_eliminator' ordinal='17' />
              <column datatype='integer' name='is_qualifier' ordinal='18' />
              <column datatype='integer' name='is_final' ordinal='19' />
              <column datatype='string' name='home_of' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[deliveries.csv].[id]' />
              <expression op='[matches.csv].[id]' />
            </expression>
          </clause>
          <relation connection='textscan.1ptx2n10cet77w16p4o2l12xgjm1' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='integer' name='over' ordinal='2' />
              <column datatype='integer' name='ball' ordinal='3' />
              <column datatype='string' name='batsman' ordinal='4' />
              <column datatype='string' name='non_striker' ordinal='5' />
              <column datatype='string' name='bowler' ordinal='6' />
              <column datatype='integer' name='batsman_runs' ordinal='7' />
              <column datatype='integer' name='extra_runs' ordinal='8' />
              <column datatype='integer' name='total_runs' ordinal='9' />
              <column datatype='integer' name='non_boundary' ordinal='10' />
              <column datatype='integer' name='is_wicket' ordinal='11' />
              <column datatype='string' name='dismissal_kind' ordinal='12' />
              <column datatype='string' name='player_dismissed' ordinal='13' />
              <column datatype='string' name='fielder' ordinal='14' />
              <column datatype='string' name='extras_type' ordinal='15' />
              <column datatype='string' name='batting_team' ordinal='16' />
              <column datatype='string' name='bowling_team' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.1ptx2n10cet77w16p4o2l12xgjm1' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='player_of_match' ordinal='3' />
              <column datatype='string' name='venue' ordinal='4' />
              <column datatype='integer' name='neutral_venue' ordinal='5' />
              <column datatype='string' name='team1' ordinal='6' />
              <column datatype='string' name='team2' ordinal='7' />
              <column datatype='string' name='toss_winner' ordinal='8' />
              <column datatype='string' name='toss_decision' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='string' name='result' ordinal='11' />
              <column datatype='real' name='result_margin' ordinal='12' />
              <column datatype='string' name='method' ordinal='13' />
              <column datatype='string' name='umpire1' ordinal='14' />
              <column datatype='string' name='umpire2' ordinal='15' />
              <column datatype='integer' name='is_playoff' ordinal='16' />
              <column datatype='integer' name='is_eliminator' ordinal='17' />
              <column datatype='integer' name='is_qualifier' ordinal='18' />
              <column datatype='integer' name='is_final' ordinal='19' />
              <column datatype='string' name='home_of' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[ball]' value='[deliveries.csv].[ball]' />
          <map key='[batsman]' value='[deliveries.csv].[batsman]' />
          <map key='[batsman_runs]' value='[deliveries.csv].[batsman_runs]' />
          <map key='[batting_team]' value='[deliveries.csv].[batting_team]' />
          <map key='[bowler]' value='[deliveries.csv].[bowler]' />
          <map key='[bowling_team]' value='[deliveries.csv].[bowling_team]' />
          <map key='[city]' value='[matches.csv].[city]' />
          <map key='[date]' value='[matches.csv].[date]' />
          <map key='[dismissal_kind]' value='[deliveries.csv].[dismissal_kind]' />
          <map key='[extra_runs]' value='[deliveries.csv].[extra_runs]' />
          <map key='[extras_type]' value='[deliveries.csv].[extras_type]' />
          <map key='[fielder]' value='[deliveries.csv].[fielder]' />
          <map key='[home_of]' value='[matches.csv].[home_of]' />
          <map key='[id (matches.csv)]' value='[matches.csv].[id]' />
          <map key='[id]' value='[deliveries.csv].[id]' />
          <map key='[inning]' value='[deliveries.csv].[inning]' />
          <map key='[is_eliminator]' value='[matches.csv].[is_eliminator]' />
          <map key='[is_final]' value='[matches.csv].[is_final]' />
          <map key='[is_playoff]' value='[matches.csv].[is_playoff]' />
          <map key='[is_qualifier]' value='[matches.csv].[is_qualifier]' />
          <map key='[is_wicket]' value='[deliveries.csv].[is_wicket]' />
          <map key='[method]' value='[matches.csv].[method]' />
          <map key='[neutral_venue]' value='[matches.csv].[neutral_venue]' />
          <map key='[non_boundary]' value='[deliveries.csv].[non_boundary]' />
          <map key='[non_striker]' value='[deliveries.csv].[non_striker]' />
          <map key='[over]' value='[deliveries.csv].[over]' />
          <map key='[player_dismissed]' value='[deliveries.csv].[player_dismissed]' />
          <map key='[player_of_match]' value='[matches.csv].[player_of_match]' />
          <map key='[result]' value='[matches.csv].[result]' />
          <map key='[result_margin]' value='[matches.csv].[result_margin]' />
          <map key='[team1]' value='[matches.csv].[team1]' />
          <map key='[team2]' value='[matches.csv].[team2]' />
          <map key='[toss_decision]' value='[matches.csv].[toss_decision]' />
          <map key='[toss_winner]' value='[matches.csv].[toss_winner]' />
          <map key='[total_runs]' value='[deliveries.csv].[total_runs]' />
          <map key='[umpire1]' value='[matches.csv].[umpire1]' />
          <map key='[umpire2]' value='[matches.csv].[umpire2]' />
          <map key='[venue]' value='[matches.csv].[venue]' />
          <map key='[winner]' value='[matches.csv].[winner]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_boundary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[non_boundary]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_boundary</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_wicket</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_wicket]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_wicket</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extras_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extras_type]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extras_type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (matches.csv)]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neutral_venue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[neutral_venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>neutral_venue</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[result_margin]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result_margin</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_playoff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_playoff]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_playoff</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_eliminator</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_eliminator]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_eliminator</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_qualifier</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_qualifier]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_qualifier</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_final</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_final]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>is_final</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_of</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_of]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>home_of</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hyderabad' datatype='string' name='[Batting Team (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[batting_team]' new-bin='true'>
          <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
            <value>&quot;Deccan Chargers&quot;</value>
            <value>&quot;Sunrisers Hyderabad&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Bowling Team (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[bowling_team]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
            <value>&quot;Deccan Chargers&quot;</value>
            <value>&quot;Sunrisers Hyderabad&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Dismissed' datatype='boolean' name='[Calculation_464715207107805185]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2]==1 THEN&#13;&#10;[player_dismissed]=&quot;Virat Kohli&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==2 THEN&#13;&#10;[player_dismissed]=&quot;Shikhar Dhawan&quot; &#13;&#10;ELSEIF  [Parameters].[Parameter 2]==3 THEN&#13;&#10;[player_dismissed]=&quot;Rohit Sharma&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==4 THEN&#13;&#10;[player_dismissed]=&quot;Suresh Raina&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==5 THEN&#13;&#10;[batsman]=&quot;David Warner&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==6 THEN&#13;&#10;[player_dismissed]=&quot;AB de Villiers&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==7 THEN&#13;&#10;[player_dismissed]=&quot;Chris Gayle&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==8 THEN&#13;&#10;[player_dismissed]=&quot;Mahendra Singh Dhoni&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==9 THEN&#13;&#10;[player_dismissed]=&quot;Robin Uthappa&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==10 THEN&#13;&#10;[player_dismissed]=&quot;Gautam Gambhir&quot;&#13;&#10;END' />
      </column>
      <column caption='Power Play' datatype='string' name='[Calculation_473722405725405184]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [over]=1 &#13;&#10;or [over]= 2 &#13;&#10;or [over]= 3 &#13;&#10;or [over]= 4 &#13;&#10;or [over]= 5 &#13;&#10;or [over]= 6 &#13;&#10;THEN &apos;POWER PLAY&apos;&#13;&#10;ELSE &apos;NON POWER PLAY&apos;&#13;&#10;END' />
      </column>
      <column caption='Strike Rate' datatype='real' name='[Calculation_495395979474903040]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([batsman_runs])/COUNT([ball])*100' />
      </column>
      <column caption='Batsman Selection' datatype='boolean' name='[Calculation_555068674582396928]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2]==1 THEN&#13;&#10;[batsman]=&quot;Virat Kohli&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==2 THEN&#13;&#10;[batsman]=&quot;Shikhar Dhawan&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==3 THEN&#13;&#10;[batsman]=&quot;Rohit Sharma&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==4 THEN&#13;&#10;[batsman]=&quot;Suresh Raina&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==5 THEN&#13;&#10;[batsman]=&quot;David Warner&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==6 THEN&#13;&#10;[batsman]=&quot;AB de Villiers&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==7 THEN&#13;&#10;[batsman]=&quot;Chris Gayle&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==8 THEN&#13;&#10;[batsman]=&quot;Mahendra Singh Dhoni&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==9 THEN&#13;&#10;[batsman]=&quot;Robin Uthappa&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==10 THEN&#13;&#10;[batsman]=&quot;Gautam Gambhir&quot;&#13;&#10;END' />
      </column>
      <column caption='No of times dismissed' datatype='integer' name='[Calculation_907193870136819713]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [player_dismissed]==[batsman] &#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Average of Batsmen' datatype='real' name='[Calculation_907193870136991747]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([batsman_runs]) / SUM([Calculation_907193870136819713])' />
      </column>
      <column caption='Top 10 bowlers selection' datatype='boolean' name='[Calculation_907193870151974916]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Parameters].[Parameter 1] ==1 THEN&#13;&#10;[bowler]=&quot;Lasith Malinga&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==2 THEN&#13;&#10;[bowler]= &quot;Amit Mishra&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==3 THEN&#13;&#10;[bowler]=&quot;Dwayne Bravo&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==4 THEN&#13;&#10;[bowler]=&quot;Piyush Chawla&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==5 THEN&#13;&#10;[bowler]=&quot;Harbhajan Singh&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==6 THEN&#13;&#10;[bowler]=&quot;Ravichandran Ashwin&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==7 THEN&#13;&#10;[bowler]=&quot;Bhuvaneshwar Kumar&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==8 THEN&#13;&#10;[bowler]=&quot;Sunil Narine&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==9 THEN&#13;&#10;[bowler]= &quot;Yuzvendra Chahal&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==10 THEN&#13;&#10;[bowler]=&quot;Ravindra Jadeja&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Over (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[over]' new-bin='true'>
          <bin default-name='true' value='&quot;0&quot;'>
            <value>0</value>
          </bin>
          <bin default-name='true' value='&quot;1&quot;'>
            <value>1</value>
          </bin>
          <bin default-name='true' value='&quot;10&quot;'>
            <value>10</value>
          </bin>
          <bin default-name='true' value='&quot;11&quot;'>
            <value>11</value>
          </bin>
          <bin default-name='true' value='&quot;12&quot;'>
            <value>12</value>
          </bin>
          <bin default-name='true' value='&quot;13&quot;'>
            <value>13</value>
          </bin>
          <bin default-name='true' value='&quot;14&quot;'>
            <value>14</value>
          </bin>
          <bin default-name='true' value='&quot;15&quot;'>
            <value>15</value>
          </bin>
          <bin default-name='true' value='&quot;16&quot;'>
            <value>16</value>
          </bin>
          <bin default-name='true' value='&quot;17&quot;'>
            <value>17</value>
          </bin>
          <bin default-name='true' value='&quot;18&quot;'>
            <value>18</value>
          </bin>
          <bin default-name='true' value='&quot;19&quot;'>
            <value>19</value>
          </bin>
          <bin default-name='true' value='&quot;2&quot;'>
            <value>2</value>
          </bin>
          <bin default-name='true' value='&quot;3&quot;'>
            <value>3</value>
          </bin>
          <bin default-name='true' value='&quot;4&quot;'>
            <value>4</value>
          </bin>
          <bin default-name='true' value='&quot;5&quot;'>
            <value>5</value>
          </bin>
          <bin default-name='true' value='&quot;6&quot;'>
            <value>6</value>
          </bin>
          <bin default-name='true' value='&quot;7&quot;'>
            <value>7</value>
          </bin>
          <bin default-name='true' value='&quot;8&quot;'>
            <value>8</value>
          </bin>
          <bin default-name='true' value='&quot;9&quot;'>
            <value>9</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Extras Type' datatype='string' name='[extras_type]' role='dimension' type='nominal' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Home Of' datatype='string' name='[home_of]' role='dimension' type='nominal' />
      <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Eliminator' datatype='integer' name='[is_eliminator]' role='measure' type='quantitative' />
      <column caption='Is Final' datatype='integer' name='[is_final]' role='measure' type='quantitative' />
      <column caption='Is Playoff' datatype='integer' name='[is_playoff]' role='measure' type='quantitative' />
      <column caption='Is Qualifier' datatype='integer' name='[is_qualifier]' role='measure' type='quantitative' />
      <column caption='Is Wicket' datatype='integer' name='[is_wicket]' role='measure' type='quantitative' />
      <column caption='Method' datatype='string' name='[method]' role='dimension' type='nominal' />
      <column caption='Neutral Venue' datatype='integer' name='[neutral_venue]' role='measure' type='quantitative' />
      <column caption='Non Boundary' datatype='integer' name='[non_boundary]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Result Margin' datatype='real' name='[result_margin]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_907193870151974916]' derivation='None' name='[none:Calculation_907193870151974916:nk]' pivot='key' type='nominal' />
      <column-instance column='[batsman_runs]' derivation='None' name='[none:batsman_runs:ok]' pivot='key' type='ordinal' />
      <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
      <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
      <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
      <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Batting Team,Bowler,Bowling Team)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:batting_team:nk]' />
          <groupfilter function='level-members' level='[none:bowler:nk]' />
          <groupfilter function='level-members' level='[none:bowling_team:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='193470' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:batsman_runs:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Over (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;9&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;18&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batting_team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pune Warriors India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_907193870151974916:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:bowling_team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pune Warriors India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:dismissal_kind:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bowled&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;run out&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;lbw&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;stumped&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;obstructing the field&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;caught and bowled&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;hit wicket&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;caught&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;retired hurt&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Yuzvendra Chahal' caption='Top 10 Bowlers' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='9.'>
          <calculation class='tableau' formula='9.' />
          <aliases>
            <alias key='1.' value='Lasith Malinga' />
            <alias key='2.' value='Amit Mishra' />
            <alias key='3.' value='Dwayne Bravo' />
            <alias key='4.' value='Piyush Chawla' />
            <alias key='5.' value='Harbhajan Singh' />
            <alias key='6.' value='Ravichandran Ashwin' />
            <alias key='7.' value='Bhuvneshwar Kumar' />
            <alias key='8.' value='Sunil Narine' />
            <alias key='9.' value='Yuzvendra Chahal' />
            <alias key='10.' value='Ravindra Jadeja' />
          </aliases>
        </column>
        <column alias='Shikhar Dhawan' caption='Select Batsman' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
          <aliases>
            <alias key='1' value='Virat Kohli' />
            <alias key='2' value='Shikhar Dhawan' />
            <alias key='3' value='Rohit Sharma' />
            <alias key='4' value='Suresh Raina' />
            <alias key='5' value='David Warner' />
            <alias key='6' value='AB de Villiers' />
            <alias key='7' value='Chris Gayle' />
            <alias key='8' value='Mahendra Singh Dhoni' />
            <alias key='9' value='Robin Uthappa' />
            <alias key='10' value='Gautam Gambhir' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deliveries.csv' id='deliveries.csv_0605A0F9E7EB4E4897EDEE100C63FF8E'>
            <properties context=''>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[deliveries.csv].[id]' />
                    <expression op='[matches.csv].[id]' />
                  </expression>
                </clause>
                <relation connection='textscan.1ptx2n10cet77w16p4o2l12xgjm1' name='deliveries.csv' table='[deliveries#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='integer' name='inning' ordinal='1' />
                    <column datatype='integer' name='over' ordinal='2' />
                    <column datatype='integer' name='ball' ordinal='3' />
                    <column datatype='string' name='batsman' ordinal='4' />
                    <column datatype='string' name='non_striker' ordinal='5' />
                    <column datatype='string' name='bowler' ordinal='6' />
                    <column datatype='integer' name='batsman_runs' ordinal='7' />
                    <column datatype='integer' name='extra_runs' ordinal='8' />
                    <column datatype='integer' name='total_runs' ordinal='9' />
                    <column datatype='integer' name='non_boundary' ordinal='10' />
                    <column datatype='integer' name='is_wicket' ordinal='11' />
                    <column datatype='string' name='dismissal_kind' ordinal='12' />
                    <column datatype='string' name='player_dismissed' ordinal='13' />
                    <column datatype='string' name='fielder' ordinal='14' />
                    <column datatype='string' name='extras_type' ordinal='15' />
                    <column datatype='string' name='batting_team' ordinal='16' />
                    <column datatype='string' name='bowling_team' ordinal='17' />
                  </columns>
                </relation>
                <relation connection='textscan.1ptx2n10cet77w16p4o2l12xgjm1' name='matches.csv' table='[matches#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='string' name='city' ordinal='1' />
                    <column datatype='date' name='date' ordinal='2' />
                    <column datatype='string' name='player_of_match' ordinal='3' />
                    <column datatype='string' name='venue' ordinal='4' />
                    <column datatype='integer' name='neutral_venue' ordinal='5' />
                    <column datatype='string' name='team1' ordinal='6' />
                    <column datatype='string' name='team2' ordinal='7' />
                    <column datatype='string' name='toss_winner' ordinal='8' />
                    <column datatype='string' name='toss_decision' ordinal='9' />
                    <column datatype='string' name='winner' ordinal='10' />
                    <column datatype='string' name='result' ordinal='11' />
                    <column datatype='real' name='result_margin' ordinal='12' />
                    <column datatype='string' name='method' ordinal='13' />
                    <column datatype='string' name='umpire1' ordinal='14' />
                    <column datatype='string' name='umpire2' ordinal='15' />
                    <column datatype='integer' name='is_playoff' ordinal='16' />
                    <column datatype='integer' name='is_eliminator' ordinal='17' />
                    <column datatype='integer' name='is_qualifier' ordinal='18' />
                    <column datatype='integer' name='is_final' ordinal='19' />
                    <column datatype='string' name='home_of' ordinal='20' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0t5dlyy0flbxcm1c0hdm90c92iyq'>
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' target='federated.0kphudx0f8udkw1bmt7y71554wk7'>
      <column-mapping>
        <map key='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:id:ok]' value='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:id:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='#of wickets taken'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>#of Wickets taken  by &lt;</run>
            <run bold='true' fontcolor='#000000'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#000000'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Yuzvendra Chahal' caption='Top 10 Bowlers' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='9.'>
              <calculation class='tableau' formula='9.' />
              <aliases>
                <alias key='1.' value='Lasith Malinga' />
                <alias key='2.' value='Amit Mishra' />
                <alias key='3.' value='Dwayne Bravo' />
                <alias key='4.' value='Piyush Chawla' />
                <alias key='5.' value='Harbhajan Singh' />
                <alias key='6.' value='Ravichandran Ashwin' />
                <alias key='7.' value='Bhuvneshwar Kumar' />
                <alias key='8.' value='Sunil Narine' />
                <alias key='9.' value='Yuzvendra Chahal' />
                <alias key='10.' value='Ravindra Jadeja' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Top 10 bowlers selection' datatype='boolean' name='[Calculation_907193870151974916]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Parameters].[Parameter 1] ==1 THEN&#13;&#10;[bowler]=&quot;Lasith Malinga&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==2 THEN&#13;&#10;[bowler]= &quot;Amit Mishra&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==3 THEN&#13;&#10;[bowler]=&quot;Dwayne Bravo&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==4 THEN&#13;&#10;[bowler]=&quot;Piyush Chawla&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==5 THEN&#13;&#10;[bowler]=&quot;Harbhajan Singh&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==6 THEN&#13;&#10;[bowler]=&quot;Ravichandran Ashwin&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==7 THEN&#13;&#10;[bowler]=&quot;Bhuvaneshwar Kumar&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==8 THEN&#13;&#10;[bowler]=&quot;Sunil Narine&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==9 THEN&#13;&#10;[bowler]= &quot;Yuzvendra Chahal&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==10 THEN&#13;&#10;[bowler]=&quot;Ravindra Jadeja&quot;&#13;&#10;END' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[id (matches.csv)]' derivation='CountD' name='[ctd:id (matches.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_907193870151974916]' derivation='None' name='[none:Calculation_907193870151974916:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]'>
            <groupfilter function='member' level='[none:Calculation_907193870151974916:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:id (matches.csv):qk]' />
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk] * [federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:id:qk])</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{9335D764-5C7E-472A-B7C3-39E49F1F9037}' />
    </worksheet>
    <worksheet name='Average of Batsman Against Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='No of times dismissed' datatype='integer' name='[Calculation_907193870136819713]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [player_dismissed]==[batsman] &#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Average of Batsmen' datatype='real' name='[Calculation_907193870136991747]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs]) / SUM([Calculation_907193870136819713])' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_907193870136991747]' derivation='User' name='[usr:Calculation_907193870136991747:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Yuvraj Singh&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</cols>
      </table>
      <simple-id uuid='{A4E85DE3-8916-4C1E-B3A1-816BE3805EC5}' />
    </worksheet>
    <worksheet name='Best Batsman In terms of Average In Overs'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='No of times dismissed' datatype='integer' name='[Calculation_907193870136819713]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [player_dismissed]==[batsman] &#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Average of Batsmen' datatype='real' name='[Calculation_907193870136991747]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs]) / SUM([Calculation_907193870136819713])' />
            </column>
            <column datatype='string' name='[Over (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[over]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='true' value='&quot;1&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='true' value='&quot;10&quot;'>
                  <value>10</value>
                </bin>
                <bin default-name='true' value='&quot;11&quot;'>
                  <value>11</value>
                </bin>
                <bin default-name='true' value='&quot;12&quot;'>
                  <value>12</value>
                </bin>
                <bin default-name='true' value='&quot;13&quot;'>
                  <value>13</value>
                </bin>
                <bin default-name='true' value='&quot;14&quot;'>
                  <value>14</value>
                </bin>
                <bin default-name='true' value='&quot;15&quot;'>
                  <value>15</value>
                </bin>
                <bin default-name='true' value='&quot;16&quot;'>
                  <value>16</value>
                </bin>
                <bin default-name='true' value='&quot;17&quot;'>
                  <value>17</value>
                </bin>
                <bin default-name='true' value='&quot;18&quot;'>
                  <value>18</value>
                </bin>
                <bin default-name='true' value='&quot;19&quot;'>
                  <value>19</value>
                </bin>
                <bin default-name='true' value='&quot;2&quot;'>
                  <value>2</value>
                </bin>
                <bin default-name='true' value='&quot;3&quot;'>
                  <value>3</value>
                </bin>
                <bin default-name='true' value='&quot;4&quot;'>
                  <value>4</value>
                </bin>
                <bin default-name='true' value='&quot;5&quot;'>
                  <value>5</value>
                </bin>
                <bin default-name='true' value='&quot;6&quot;'>
                  <value>6</value>
                </bin>
                <bin default-name='true' value='&quot;7&quot;'>
                  <value>7</value>
                </bin>
                <bin default-name='true' value='&quot;8&quot;'>
                  <value>8</value>
                </bin>
                <bin default-name='true' value='&quot;9&quot;'>
                  <value>9</value>
                </bin>
              </calculation>
            </column>
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_907193870136991747]' derivation='User' name='[usr:Calculation_907193870136991747:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Over (group)]' member='&quot;0&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;6&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Aakash Chopra&quot;' function='range' level='[none:batsman:nk]' to='&quot;Lendl Simmons&quot;' />
              <groupfilter from='&quot;Liam Plunkett&quot;' function='range' level='[none:batsman:nk]' to='&quot;Rinku Singh&quot;' />
              <groupfilter from='&quot;Rishi Dhawan&quot;' function='range' level='[none:batsman:nk]' to='&quot;Shreyas Gopal&quot;' />
              <groupfilter from='&quot;Shrikant Wagh&quot;' function='range' level='[none:batsman:nk]' to='&quot;Zaheer Khan&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' filter-group='7'>
            <groupfilter expression='COUNT([ball]) &gt; 50' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Delhi Capitals&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]'>
            <groupfilter function='level-members' level='[none:bowling_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]</cols>
      </table>
      <simple-id uuid='{B6736DAF-C570-436A-9A77-AC91C0FE2EB3}' />
    </worksheet>
    <worksheet name='Best Bowlers In Terms Of Wickets In Overs'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' />
          </datasources>
          <datasource-dependencies datasource='federated.0t5dlyy0flbxcm1c0hdm90c92iyq'>
            <column datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column-instance column='[id (matches.csv)]' derivation='Count' name='[cnt:id (matches.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[is_wicket]' role='measure' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[over (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[over]' new-bin='true' />
            </column>
            <column datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[is_wicket]' derivation='Sum' name='[sum:is_wicket:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]'>
            <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:bowling_team:nk]' member='&quot;Delhi Capitals&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]' filter-group='9'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[over (group)]' member='&quot;0&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;6&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[sum:is_wicket:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[cnt:id (matches.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]</rows>
        <cols>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[sum:is_wicket:qk]</cols>
      </table>
      <simple-id uuid='{F033F499-8F4A-4C50-8951-2BE8B5F9B22A}' />
    </worksheet>
    <worksheet name='Best Death Batsmen for team per season'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Best Batsmen In Terms on Strike Rate in Overs  </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Strike Rate' datatype='real' name='[Calculation_495395979474903040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs])/COUNT([ball])*100' />
            </column>
            <column datatype='string' name='[Over (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[over]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='true' value='&quot;1&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='true' value='&quot;10&quot;'>
                  <value>10</value>
                </bin>
                <bin default-name='true' value='&quot;11&quot;'>
                  <value>11</value>
                </bin>
                <bin default-name='true' value='&quot;12&quot;'>
                  <value>12</value>
                </bin>
                <bin default-name='true' value='&quot;13&quot;'>
                  <value>13</value>
                </bin>
                <bin default-name='true' value='&quot;14&quot;'>
                  <value>14</value>
                </bin>
                <bin default-name='true' value='&quot;15&quot;'>
                  <value>15</value>
                </bin>
                <bin default-name='true' value='&quot;16&quot;'>
                  <value>16</value>
                </bin>
                <bin default-name='true' value='&quot;17&quot;'>
                  <value>17</value>
                </bin>
                <bin default-name='true' value='&quot;18&quot;'>
                  <value>18</value>
                </bin>
                <bin default-name='true' value='&quot;19&quot;'>
                  <value>19</value>
                </bin>
                <bin default-name='true' value='&quot;2&quot;'>
                  <value>2</value>
                </bin>
                <bin default-name='true' value='&quot;3&quot;'>
                  <value>3</value>
                </bin>
                <bin default-name='true' value='&quot;4&quot;'>
                  <value>4</value>
                </bin>
                <bin default-name='true' value='&quot;5&quot;'>
                  <value>5</value>
                </bin>
                <bin default-name='true' value='&quot;6&quot;'>
                  <value>6</value>
                </bin>
                <bin default-name='true' value='&quot;7&quot;'>
                  <value>7</value>
                </bin>
                <bin default-name='true' value='&quot;8&quot;'>
                  <value>8</value>
                </bin>
                <bin default-name='true' value='&quot;9&quot;'>
                  <value>9</value>
                </bin>
              </calculation>
            </column>
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_495395979474903040]' derivation='User' name='[usr:Calculation_495395979474903040:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Over (group)]' member='&quot;0&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[Over (group)]' member='&quot;6&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]'>
            <groupfilter expression='COUNT([ball]) &gt; 50' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter from='&quot;Aakash Chopra&quot;' function='range' level='[none:batsman:nk]' to='&quot;Chris Lynn&quot;' />
                <groupfilter from='&quot;Chris Woakes&quot;' function='range' level='[none:batsman:nk]' to='&quot;Zaheer Khan&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' filter-group='7'>
            <groupfilter expression='COUNT([ball]) &gt; 50' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Delhi Capitals&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]'>
            <groupfilter function='level-members' level='[none:bowling_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_495395979474903040:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_495395979474903040:qk]</cols>
      </table>
      <simple-id uuid='{71176A2F-B799-45C2-8EBE-88F377B7B426}' />
    </worksheet>
    <worksheet name='Franchises and Number of matches played by   &lt;Parameters.Top 10 Bowlers&gt;'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666' fontname='Tableau Medium' fontsize='12'>Franchises and Number of matches played by</run>
            <run bold='true' fontcolor='#666666' fontsize='12'>Æ  </run>
            <run bold='true' fontcolor='#000000'> &lt;[Parameters].[Parameter 1]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Yuzvendra Chahal' caption='Top 10 Bowlers' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='9.'>
              <calculation class='tableau' formula='9.' />
              <aliases>
                <alias key='1.' value='Lasith Malinga' />
                <alias key='2.' value='Amit Mishra' />
                <alias key='3.' value='Dwayne Bravo' />
                <alias key='4.' value='Piyush Chawla' />
                <alias key='5.' value='Harbhajan Singh' />
                <alias key='6.' value='Ravichandran Ashwin' />
                <alias key='7.' value='Bhuvneshwar Kumar' />
                <alias key='8.' value='Sunil Narine' />
                <alias key='9.' value='Yuzvendra Chahal' />
                <alias key='10.' value='Ravindra Jadeja' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Top 10 bowlers selection' datatype='boolean' name='[Calculation_907193870151974916]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Parameters].[Parameter 1] ==1 THEN&#13;&#10;[bowler]=&quot;Lasith Malinga&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==2 THEN&#13;&#10;[bowler]= &quot;Amit Mishra&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==3 THEN&#13;&#10;[bowler]=&quot;Dwayne Bravo&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==4 THEN&#13;&#10;[bowler]=&quot;Piyush Chawla&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==5 THEN&#13;&#10;[bowler]=&quot;Harbhajan Singh&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==6 THEN&#13;&#10;[bowler]=&quot;Ravichandran Ashwin&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==7 THEN&#13;&#10;[bowler]=&quot;Bhuvaneshwar Kumar&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==8 THEN&#13;&#10;[bowler]=&quot;Sunil Narine&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==9 THEN&#13;&#10;[bowler]= &quot;Yuzvendra Chahal&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==10 THEN&#13;&#10;[bowler]=&quot;Ravindra Jadeja&quot;&#13;&#10;END' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_dismissed]' derivation='CountD' name='[ctd:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_907193870151974916]' derivation='None' name='[none:Calculation_907193870151974916:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]'>
            <groupfilter function='member' level='[none:Calculation_907193870151974916:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]' />
              <size column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:id:qk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:id:qk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:player_dismissed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F0095BE6-F06D-433A-BB01-2FF214C1DBC0}' />
    </worksheet>
    <worksheet name='Judging the average of the all-time IPL Batsman'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='No of times dismissed' datatype='integer' name='[Calculation_907193870136819713]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [player_dismissed]==[batsman] &#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='Average of Batsmen' datatype='real' name='[Calculation_907193870136991747]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs]) / SUM([Calculation_907193870136819713])' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_907193870136991747]' derivation='User' name='[usr:Calculation_907193870136991747:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]'>
            <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]' included-values='in-range'>
            <min>29.600000000000001</min>
            <max>43.189999999999998</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' value='97' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk] + [federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk])</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</cols>
      </table>
      <simple-id uuid='{5CD0FC2D-295C-495A-B086-C3086D65C7E1}' />
    </worksheet>
    <worksheet name='Most Economical  Bowlers In Overs'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' />
          </datasources>
          <datasource-dependencies datasource='federated.0t5dlyy0flbxcm1c0hdm90c92iyq'>
            <column caption='economy' datatype='real' name='[Calculation_980095889844977667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs])/[Calculation_980095889848758277]' />
            </column>
            <column caption='Over' datatype='real' name='[Calculation_980095889848758277]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([ball])/6' />
            </column>
            <column datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[over (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[over]' new-bin='true' />
            </column>
            <column datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980095889844977667]' derivation='User' name='[usr:Calculation_980095889844977667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:batting_team:nk]'>
            <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]'>
            <groupfilter expression='COUNT([ball]) &gt; 100' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:bowler:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Dhawal Kulkarni&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Jagadeesha Suchith&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Jayant Yadav&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Kieron Pollard&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Mohit Sharma&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Rahul Chahar&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Rahul Tewatia&quot;' />
                  <groupfilter function='member' level='[none:bowler:nk]' member='&quot;Vijay Shankar&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:bowling_team:nk]' member='&quot;Delhi Capitals&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]' filter-group='9'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[over (group)]' member='&quot;0&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[over (group)]' member='&quot;6&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[usr:Calculation_980095889844977667:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:batting_team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[usr:Calculation_980095889844977667:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]</rows>
        <cols>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[usr:Calculation_980095889844977667:qk]</cols>
      </table>
      <simple-id uuid='{57E931C9-FF00-4190-BDED-41F6B8564388}' />
    </worksheet>
    <worksheet name='Over by Over Analysis For All Seasons'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true' underline='true'>Over By Over Summary for &lt;</run>
            <run bold='true' italic='true' underline='true'>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</run>
            <run bold='true' italic='true' underline='true'>&gt; in all Seasons</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column datatype='string' name='[Over (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[over]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='true' value='&quot;1&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='true' value='&quot;10&quot;'>
                  <value>10</value>
                </bin>
                <bin default-name='true' value='&quot;11&quot;'>
                  <value>11</value>
                </bin>
                <bin default-name='true' value='&quot;12&quot;'>
                  <value>12</value>
                </bin>
                <bin default-name='true' value='&quot;13&quot;'>
                  <value>13</value>
                </bin>
                <bin default-name='true' value='&quot;14&quot;'>
                  <value>14</value>
                </bin>
                <bin default-name='true' value='&quot;15&quot;'>
                  <value>15</value>
                </bin>
                <bin default-name='true' value='&quot;16&quot;'>
                  <value>16</value>
                </bin>
                <bin default-name='true' value='&quot;17&quot;'>
                  <value>17</value>
                </bin>
                <bin default-name='true' value='&quot;18&quot;'>
                  <value>18</value>
                </bin>
                <bin default-name='true' value='&quot;19&quot;'>
                  <value>19</value>
                </bin>
                <bin default-name='true' value='&quot;2&quot;'>
                  <value>2</value>
                </bin>
                <bin default-name='true' value='&quot;3&quot;'>
                  <value>3</value>
                </bin>
                <bin default-name='true' value='&quot;4&quot;'>
                  <value>4</value>
                </bin>
                <bin default-name='true' value='&quot;5&quot;'>
                  <value>5</value>
                </bin>
                <bin default-name='true' value='&quot;6&quot;'>
                  <value>6</value>
                </bin>
                <bin default-name='true' value='&quot;7&quot;'>
                  <value>7</value>
                </bin>
                <bin default-name='true' value='&quot;8&quot;'>
                  <value>8</value>
                </bin>
                <bin default-name='true' value='&quot;9&quot;'>
                  <value>9</value>
                </bin>
              </calculation>
            </column>
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[over]' derivation='Sum' name='[sum:over:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]'>
            <groupfilter function='member' level='[none:batting_team:nk]' member='&quot;Chennai Super Kings&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:total_runs:qk]' included-values='in-range'>
            <min>500</min>
            <max>2000</max>
          </filter>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:total_runs:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:over:qk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:total_runs:qk]' />
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A0D7F36F-A6B2-4915-B019-A5E4BDEB2895}' />
    </worksheet>
    <worksheet name='PowerPlay Analysis:How many runs from the total score have come from the powerplay? '>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Hyderabad' datatype='string' name='[Batting Team (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[batting_team]' new-bin='true'>
                <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
                  <value>&quot;Deccan Chargers&quot;</value>
                  <value>&quot;Sunrisers Hyderabad&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Power Play' datatype='string' name='[Calculation_473722405725405184]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [over]=1 &#13;&#10;or [over]= 2 &#13;&#10;or [over]= 3 &#13;&#10;or [over]= 4 &#13;&#10;or [over]= 5 &#13;&#10;or [over]= 6 &#13;&#10;THEN &apos;POWER PLAY&apos;&#13;&#10;ELSE &apos;NON POWER PLAY&apos;&#13;&#10;END' />
            </column>
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_473722405725405184]' derivation='None' name='[none:Calculation_473722405725405184:nk]' pivot='key' type='nominal' />
            <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' included-values='in-range'>
            <min>617</min>
            <max>21868</max>
          </filter>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_473722405725405184:nk] * [federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk])</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[Batting Team (group)]</cols>
      </table>
      <simple-id uuid='{9A336BA3-E335-4EA7-8D4A-D470DFF000F1}' />
    </worksheet>
    <worksheet name='Runs Scored by batsman'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Shikhar Dhawan' caption='Select Batsman' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
              <aliases>
                <alias key='1' value='Virat Kohli' />
                <alias key='2' value='Shikhar Dhawan' />
                <alias key='3' value='Rohit Sharma' />
                <alias key='4' value='Suresh Raina' />
                <alias key='5' value='David Warner' />
                <alias key='6' value='AB de Villiers' />
                <alias key='7' value='Chris Gayle' />
                <alias key='8' value='Mahendra Singh Dhoni' />
                <alias key='9' value='Robin Uthappa' />
                <alias key='10' value='Gautam Gambhir' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Batsman Selection' datatype='boolean' name='[Calculation_555068674582396928]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2]==1 THEN&#13;&#10;[batsman]=&quot;Virat Kohli&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==2 THEN&#13;&#10;[batsman]=&quot;Shikhar Dhawan&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==3 THEN&#13;&#10;[batsman]=&quot;Rohit Sharma&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==4 THEN&#13;&#10;[batsman]=&quot;Suresh Raina&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==5 THEN&#13;&#10;[batsman]=&quot;David Warner&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==6 THEN&#13;&#10;[batsman]=&quot;AB de Villiers&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==7 THEN&#13;&#10;[batsman]=&quot;Chris Gayle&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==8 THEN&#13;&#10;[batsman]=&quot;Mahendra Singh Dhoni&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==9 THEN&#13;&#10;[batsman]=&quot;Robin Uthappa&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==10 THEN&#13;&#10;[batsman]=&quot;Gautam Gambhir&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[batting_team]' derivation='Attribute' name='[attr:batting_team:nk]' pivot='key' type='nominal' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_555068674582396928]' derivation='None' name='[none:Calculation_555068674582396928:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]'>
            <groupfilter function='member' level='[none:Calculation_555068674582396928:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' />
              <tooltip column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[attr:batting_team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{630122A7-2381-4E1E-AD74-22DF6A0D3E42}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Count </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' />
          </datasources>
          <datasource-dependencies datasource='federated.0t5dlyy0flbxcm1c0hdm90c92iyq'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;Mumbai&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:toss_decision:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[ctd:id:qk]</rows>
        <cols>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:venue:nk]</cols>
      </table>
      <simple-id uuid='{B9AC2377-83E5-423E-B064-2067BDEC10A1}' />
    </worksheet>
    <worksheet name='Strike Rate For Top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Strike Rate For </run>
            <run bold='true' fontcolor='#000000'>&lt;[Parameters].[Parameter 2]&gt;</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Shikhar Dhawan' caption='Select Batsman' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
              <aliases>
                <alias key='1' value='Virat Kohli' />
                <alias key='2' value='Shikhar Dhawan' />
                <alias key='3' value='Rohit Sharma' />
                <alias key='4' value='Suresh Raina' />
                <alias key='5' value='David Warner' />
                <alias key='6' value='AB de Villiers' />
                <alias key='7' value='Chris Gayle' />
                <alias key='8' value='Mahendra Singh Dhoni' />
                <alias key='9' value='Robin Uthappa' />
                <alias key='10' value='Gautam Gambhir' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Strike Rate' datatype='real' name='[Calculation_495395979474903040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs])/COUNT([ball])*100' />
            </column>
            <column caption='Batsman Selection' datatype='boolean' name='[Calculation_555068674582396928]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2]==1 THEN&#13;&#10;[batsman]=&quot;Virat Kohli&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==2 THEN&#13;&#10;[batsman]=&quot;Shikhar Dhawan&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==3 THEN&#13;&#10;[batsman]=&quot;Rohit Sharma&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==4 THEN&#13;&#10;[batsman]=&quot;Suresh Raina&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==5 THEN&#13;&#10;[batsman]=&quot;David Warner&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==6 THEN&#13;&#10;[batsman]=&quot;AB de Villiers&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==7 THEN&#13;&#10;[batsman]=&quot;Chris Gayle&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==8 THEN&#13;&#10;[batsman]=&quot;Mahendra Singh Dhoni&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==9 THEN&#13;&#10;[batsman]=&quot;Robin Uthappa&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==10 THEN&#13;&#10;[batsman]=&quot;Gautam Gambhir&quot;&#13;&#10;END' />
            </column>
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_555068674582396928]' derivation='None' name='[none:Calculation_555068674582396928:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_495395979474903040]' derivation='User' name='[usr:Calculation_495395979474903040:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]'>
            <groupfilter function='member' level='[none:Calculation_555068674582396928:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_495395979474903040:qk]</cols>
      </table>
      <simple-id uuid='{6EAC283C-C197-4D88-BD81-B2E7306A95C8}' />
    </worksheet>
    <worksheet name='Strike Rate Of Batsmen Against Teams'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
          </datasources>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Strike Rate' datatype='real' name='[Calculation_495395979474903040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs])/COUNT([ball])*100' />
            </column>
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_495395979474903040]' derivation='User' name='[usr:Calculation_495395979474903040:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:batsman:nk]' member='&quot;Yuvraj Singh&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_495395979474903040:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_495395979474903040:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_495395979474903040:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_495395979474903040:qk]</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</cols>
      </table>
      <simple-id uuid='{E9315195-7A77-4362-91C7-32EFA9F13AE0}' />
    </worksheet>
    <worksheet name='Teams and #of matches played by &lt;Parameters.Select Batsman&gt;'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'><![CDATA[Teams and #of matches played by <]]></run>
            <run bold='true' fontcolor='#000000'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#000000'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Shikhar Dhawan' caption='Select Batsman' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
              <aliases>
                <alias key='1' value='Virat Kohli' />
                <alias key='2' value='Shikhar Dhawan' />
                <alias key='3' value='Rohit Sharma' />
                <alias key='4' value='Suresh Raina' />
                <alias key='5' value='David Warner' />
                <alias key='6' value='AB de Villiers' />
                <alias key='7' value='Chris Gayle' />
                <alias key='8' value='Mahendra Singh Dhoni' />
                <alias key='9' value='Robin Uthappa' />
                <alias key='10' value='Gautam Gambhir' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Batsman Selection' datatype='boolean' name='[Calculation_555068674582396928]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2]==1 THEN&#13;&#10;[batsman]=&quot;Virat Kohli&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==2 THEN&#13;&#10;[batsman]=&quot;Shikhar Dhawan&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==3 THEN&#13;&#10;[batsman]=&quot;Rohit Sharma&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==4 THEN&#13;&#10;[batsman]=&quot;Suresh Raina&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==5 THEN&#13;&#10;[batsman]=&quot;David Warner&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==6 THEN&#13;&#10;[batsman]=&quot;AB de Villiers&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==7 THEN&#13;&#10;[batsman]=&quot;Chris Gayle&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==8 THEN&#13;&#10;[batsman]=&quot;Mahendra Singh Dhoni&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==9 THEN&#13;&#10;[batsman]=&quot;Robin Uthappa&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==10 THEN&#13;&#10;[batsman]=&quot;Gautam Gambhir&quot;&#13;&#10;END' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_555068674582396928]' derivation='None' name='[none:Calculation_555068674582396928:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]'>
            <groupfilter function='member' level='[none:Calculation_555068674582396928:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' />
              <size column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[cnt:id:qk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:id:qk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' />
              <tooltip column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DED45AE9-CF51-4CF9-806E-D7936D942782}' />
    </worksheet>
    <worksheet name='Top 10 Bowlers Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Players dismissed by </run>
            <run bold='true' fontcolor='#000000'> &lt;[Parameters].[Parameter 1]&gt; </run>
            <run fontcolor='#000000'>along with their dismissal types</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Yuzvendra Chahal' caption='Top 10 Bowlers' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='9.'>
              <calculation class='tableau' formula='9.' />
              <aliases>
                <alias key='1.' value='Lasith Malinga' />
                <alias key='2.' value='Amit Mishra' />
                <alias key='3.' value='Dwayne Bravo' />
                <alias key='4.' value='Piyush Chawla' />
                <alias key='5.' value='Harbhajan Singh' />
                <alias key='6.' value='Ravichandran Ashwin' />
                <alias key='7.' value='Bhuvneshwar Kumar' />
                <alias key='8.' value='Sunil Narine' />
                <alias key='9.' value='Yuzvendra Chahal' />
                <alias key='10.' value='Ravindra Jadeja' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Top 10 bowlers selection' datatype='boolean' name='[Calculation_907193870151974916]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Parameters].[Parameter 1] ==1 THEN&#13;&#10;[bowler]=&quot;Lasith Malinga&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==2 THEN&#13;&#10;[bowler]= &quot;Amit Mishra&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==3 THEN&#13;&#10;[bowler]=&quot;Dwayne Bravo&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==4 THEN&#13;&#10;[bowler]=&quot;Piyush Chawla&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==5 THEN&#13;&#10;[bowler]=&quot;Harbhajan Singh&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==6 THEN&#13;&#10;[bowler]=&quot;Ravichandran Ashwin&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==7 THEN&#13;&#10;[bowler]=&quot;Bhuvaneshwar Kumar&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==8 THEN&#13;&#10;[bowler]=&quot;Sunil Narine&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==9 THEN&#13;&#10;[bowler]= &quot;Yuzvendra Chahal&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 1]==10 THEN&#13;&#10;[bowler]=&quot;Ravindra Jadeja&quot;&#13;&#10;END' />
            </column>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[player_dismissed]' derivation='CountD' name='[ctd:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_907193870151974916]' derivation='None' name='[none:Calculation_907193870151974916:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_dismissed]' derivation='None' name='[none:player_dismissed:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]'>
            <groupfilter function='member' level='[none:Calculation_907193870151974916:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]'>
            <groupfilter function='level-members' level='[none:bowler:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;bowled&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught and bowled&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;hit wicket&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;lbw&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;obstructing the field&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;retired hurt&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;run out&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;stumped&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:player_dismissed:nk]'>
            <groupfilter function='level-members' level='[none:player_dismissed:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:player_dismissed:nk]' direction='DESC' measure-to-sort-by='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:player_dismissed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:player_dismissed:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:player_dismissed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kphudx0f8udkw1bmt7y71554wk7].[none:player_dismissed:nk] / [federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk])</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:player_dismissed:qk]</cols>
      </table>
      <simple-id uuid='{8A6C3B46-CD65-4851-B03B-6F14F692665E}' />
    </worksheet>
    <worksheet name='Top bowlers who dismissed &lt;Parameters.Select Batsman&gt;'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Top bowlers who dismissed &lt;</run>
            <run bold='true' fontcolor='#000000'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#000000'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Shikhar Dhawan' caption='Select Batsman' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='2'>
              <calculation class='tableau' formula='2' />
              <aliases>
                <alias key='1' value='Virat Kohli' />
                <alias key='2' value='Shikhar Dhawan' />
                <alias key='3' value='Rohit Sharma' />
                <alias key='4' value='Suresh Raina' />
                <alias key='5' value='David Warner' />
                <alias key='6' value='AB de Villiers' />
                <alias key='7' value='Chris Gayle' />
                <alias key='8' value='Mahendra Singh Dhoni' />
                <alias key='9' value='Robin Uthappa' />
                <alias key='10' value='Gautam Gambhir' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
            <column caption='Dismissed' datatype='boolean' name='[Calculation_464715207107805185]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2]==1 THEN&#13;&#10;[player_dismissed]=&quot;Virat Kohli&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==2 THEN&#13;&#10;[player_dismissed]=&quot;Shikhar Dhawan&quot; &#13;&#10;ELSEIF  [Parameters].[Parameter 2]==3 THEN&#13;&#10;[player_dismissed]=&quot;Rohit Sharma&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==4 THEN&#13;&#10;[player_dismissed]=&quot;Suresh Raina&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==5 THEN&#13;&#10;[batsman]=&quot;David Warner&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==6 THEN&#13;&#10;[player_dismissed]=&quot;AB de Villiers&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==7 THEN&#13;&#10;[player_dismissed]=&quot;Chris Gayle&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==8 THEN&#13;&#10;[player_dismissed]=&quot;Mahendra Singh Dhoni&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==9 THEN&#13;&#10;[player_dismissed]=&quot;Robin Uthappa&quot;&#13;&#10;ELSEIF  [Parameters].[Parameter 2]==10 THEN&#13;&#10;[player_dismissed]=&quot;Gautam Gambhir&quot;&#13;&#10;END' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_464715207107805185]' derivation='None' name='[none:Calculation_464715207107805185:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_464715207107805185:nk]'>
            <groupfilter function='member' level='[none:Calculation_464715207107805185:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([player_dismissed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;bowled&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;caught and bowled&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;lbw&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;run out&quot;' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='&quot;stumped&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_464715207107805185:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]</column>
            <column>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' />
              <size column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' />
              <text column='[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk] / [federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk])</rows>
        <cols>[federated.0kphudx0f8udkw1bmt7y71554wk7].[ctd:id:qk]</cols>
      </table>
      <simple-id uuid='{87627D16-CF03-48EF-947D-4A6D29414E1F}' />
    </worksheet>
    <worksheet name='Toss outcome vs Match outcome (for each Ground/Venue)'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Toss Outcome vs Match Outcome for <]]></run>
            <run>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:venue:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' />
          </datasources>
          <datasource-dependencies datasource='federated.0t5dlyy0flbxcm1c0hdm90c92iyq'>
            <column caption='Match Outcome' datatype='string' name='[Calculation_733242334195023872]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [toss_winner]=[winner] THEN &apos;Match and Toss Won &apos; ELSE &apos;Match lost inspite of Toss Win&apos; END' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id (matches.csv)]' derivation='CountD' name='[ctd:id (matches.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id (Matches.Csv)' datatype='integer' name='[id (matches.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_733242334195023872]' derivation='None' name='[none:Calculation_733242334195023872:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;Mumbai&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:winner:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Chennai Super Kings&quot;' function='range' level='[none:winner:nk]' to='&quot;Mumbai Indians&quot;' />
              <groupfilter from='&quot;Pune Warriors India&quot;' function='range' level='[none:winner:nk]' to='&quot;Sunrisers Hyderabad&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:winner:nk]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:Calculation_733242334195023872:nk]' />
              <lod column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' />
              <text column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[ctd:id (matches.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:venue:nk]</rows>
        <cols>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[ctd:id (matches.csv):qk]</cols>
      </table>
      <simple-id uuid='{A512AEE3-BC47-4E83-A33F-157B81B35928}' />
    </worksheet>
    <worksheet name='Winning Analysis Based On Toss Decision'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What has each team done  in &lt;</run>
            <run>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]</run>
            <run>&gt; on winning the toss</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' />
          </datasources>
          <datasource-dependencies datasource='federated.0t5dlyy0flbxcm1c0hdm90c92iyq'>
            <column datatype='string' name='[Toss Decision (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[toss_decision]' new-bin='true'>
                <bin default-name='true' value='&quot;bat&quot;'>
                  <value>&quot;bat&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;field&quot;'>
                  <value>&quot;field&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[Toss Decision (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Toss Decision (group)]' member='&quot;bat&quot;' />
              <groupfilter function='member' level='[Toss Decision (group)]' member='&quot;field&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;Mumbai&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:winner:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Chennai Super Kings&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Deccan Chargers&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Delhi Capitals&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Gujarat Lions&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Kings XI Punjab&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Kochi Tuskers Kerala&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Kolkata Knight Riders&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Mumbai Indians&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Pune Warriors India&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Rajasthan Royals&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Rising Pune Supergiant&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Royal Challengers Bangalore&quot;' />
              <groupfilter function='member' level='[none:winner:nk]' member='&quot;Sunrisers Hyderabad&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:winner:nk]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[Toss Decision (group)]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</column>
            <column>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[Toss Decision (group)]' />
              <text column='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[Toss Decision (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[ctd:id:qk]</rows>
        <cols>([federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:winner:nk] / [federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[Toss Decision (group)])</cols>
      </table>
      <simple-id uuid='{BDDA4D9F-6D37-496A-8862-D0BDBA1141BA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Are Batsman Good Against Certain Teams?'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
      </datasources>
      <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
        <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
        <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Strike Rate Of Batsmen Against Teams' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Average of Batsman Against Team' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7625' id='8' mode='dropdown' name='Strike Rate Of Batsmen Against Teams' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='36' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='7625' id='8' mode='dropdown' name='Strike Rate Of Batsmen Against Teams' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Strike Rate Of Batsmen Against Teams' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Average of Batsman Against Team' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{71B1D1BE-DDC4-4AC2-9D7A-67CEB6B3F830}' />
    </dashboard>
    <dashboard name='Does Winning Toss Increase Chances Of winning?'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='matches' name='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' />
      </datasources>
      <datasource-dependencies datasource='federated.0t5dlyy0flbxcm1c0hdm90c92iyq'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88625' id='21' param='horz' type-v2='layout-flow' w='98400' x='800' y='10375'>
            <zone h='88625' id='5' type-v2='layout-basic' w='98400' x='800' y='10375'>
              <zone h='51152' id='3' name='Winning Analysis Based On Toss Decision' w='49200' x='800' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25348' id='19' name='Toss outcome vs Match outcome (for each Ground/Venue)' w='98400' x='800' y='61527'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12125' id='24' name='Toss outcome vs Match outcome (for each Ground/Venue)' pane-specification-id='0' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:Calculation_733242334195023872:nk]' type-v2='color' w='98400' x='800' y='86875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51152' id='32' name='Sheet 14' w='49200' x='50000' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='31' param='horz' type-v2='layout-flow' w='46800' x='800' y='1000'>
            <zone h='9375' id='22' mode='checkdropdown' name='Toss outcome vs Match outcome (for each Ground/Venue)' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]' type-v2='filter' w='16800' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9375' id='33' name='Sheet 14' pane-specification-id='0' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:toss_decision:nk]' type-v2='color' w='16800' x='17600' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='9375' id='23' mode='dropdown' name='Toss outcome vs Match outcome (for each Ground/Venue)' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' type-v2='filter' w='51600' x='47600' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='95' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='94' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='51152' id='3' is-fixed='true' name='Winning Analysis Based On Toss Decision' w='49200' x='800' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51152' id='32' is-fixed='true' name='Sheet 14' w='49200' x='50000' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='33' name='Sheet 14' pane-specification-id='0' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:toss_decision:nk]' type-v2='color' w='16800' x='17600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='22' mode='checkdropdown' name='Toss outcome vs Match outcome (for each Ground/Venue)' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]' type-v2='filter' w='16800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='23' mode='dropdown' name='Toss outcome vs Match outcome (for each Ground/Venue)' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' type-v2='filter' w='51600' x='47600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='195' h='25348' id='19' is-fixed='true' name='Toss outcome vs Match outcome (for each Ground/Venue)' w='98400' x='800' y='61527'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12125' id='24' name='Toss outcome vs Match outcome (for each Ground/Venue)' pane-specification-id='0' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:Calculation_733242334195023872:nk]' type-v2='color' w='98400' x='800' y='86875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0D629742-C3C2-4DC6-B1F9-504AB51379D0}' />
    </dashboard>
    <dashboard name='Player Analysis'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='deliveries' name='federated.0kphudx0f8udkw1bmt7y71554wk7' />
        <datasource caption='matches' name='federated.0t5dlyy0flbxcm1c0hdm90c92iyq' />
      </datasources>
      <datasource-dependencies datasource='federated.0kphudx0f8udkw1bmt7y71554wk7'>
        <column datatype='string' name='[Over (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[over]' new-bin='true'>
            <bin default-name='true' value='&quot;0&quot;'>
              <value>0</value>
            </bin>
            <bin default-name='true' value='&quot;1&quot;'>
              <value>1</value>
            </bin>
            <bin default-name='true' value='&quot;10&quot;'>
              <value>10</value>
            </bin>
            <bin default-name='true' value='&quot;11&quot;'>
              <value>11</value>
            </bin>
            <bin default-name='true' value='&quot;12&quot;'>
              <value>12</value>
            </bin>
            <bin default-name='true' value='&quot;13&quot;'>
              <value>13</value>
            </bin>
            <bin default-name='true' value='&quot;14&quot;'>
              <value>14</value>
            </bin>
            <bin default-name='true' value='&quot;15&quot;'>
              <value>15</value>
            </bin>
            <bin default-name='true' value='&quot;16&quot;'>
              <value>16</value>
            </bin>
            <bin default-name='true' value='&quot;17&quot;'>
              <value>17</value>
            </bin>
            <bin default-name='true' value='&quot;18&quot;'>
              <value>18</value>
            </bin>
            <bin default-name='true' value='&quot;19&quot;'>
              <value>19</value>
            </bin>
            <bin default-name='true' value='&quot;2&quot;'>
              <value>2</value>
            </bin>
            <bin default-name='true' value='&quot;3&quot;'>
              <value>3</value>
            </bin>
            <bin default-name='true' value='&quot;4&quot;'>
              <value>4</value>
            </bin>
            <bin default-name='true' value='&quot;5&quot;'>
              <value>5</value>
            </bin>
            <bin default-name='true' value='&quot;6&quot;'>
              <value>6</value>
            </bin>
            <bin default-name='true' value='&quot;7&quot;'>
              <value>7</value>
            </bin>
            <bin default-name='true' value='&quot;8&quot;'>
              <value>8</value>
            </bin>
            <bin default-name='true' value='&quot;9&quot;'>
              <value>9</value>
            </bin>
          </calculation>
        </column>
        <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
        <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
        <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0t5dlyy0flbxcm1c0hdm90c92iyq'>
        <column datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
        <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[over (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[over]' new-bin='true' />
        </column>
        <column datatype='integer' name='[over]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='91250' id='78' param='horz' type-v2='layout-flow' w='98400' x='800' y='7750'>
            <zone h='91250' id='73' type-v2='layout-basic' w='98400' x='800' y='7750'>
              <zone h='91250' id='54' param='horz' type-v2='layout-flow' w='98400' x='800' y='7750'>
                <zone h='91250' id='3' type-v2='layout-basic' w='98400' x='800' y='7750'>
                  <zone h='37712' id='44' name='Most Economical  Bowlers In Overs' w='49200' x='800' y='61288'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='4073' id='46' mode='dropdown' name='Most Economical  Bowlers In Overs' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]' type-v2='filter' w='49200' x='800' y='57215'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='0' id='71' type-v2='empty' w='98400' x='800' y='7750' />
                  <zone h='4075' id='47' mode='checkdropdown' name='Most Economical  Bowlers In Overs' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]' type-v2='filter' w='49200' x='50000' y='57215'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='37710' id='88' name='Best Bowlers In Terms Of Wickets In Overs' w='49200' x='50000' y='61290'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='6750' id='86' param='horz' type-v2='layout-flow' w='49200' x='800' y='1000'>
            <zone h='6750' id='84' mode='dropdown' name='Best Death Batsmen for team per season' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' type-v2='filter' w='49200' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='160' h='6750' id='77' is-fixed='true' param='vert' type-v2='layout-flow' w='49200' x='50000' y='1000'>
            <zone h='6750' id='85' mode='checkdropdown' name='Best Death Batsmen for team per season' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' type-v2='filter' w='49200' x='50000' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='47375' id='81' name='Best Death Batsmen for team per season' w='47800' x='500' y='7375' />
        <zone h='46500' id='87' name='Best Batsman In terms of Average In Overs' w='49000' x='49900' y='9375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='94' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='93' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6750' id='84' mode='dropdown' name='Best Death Batsmen for team per season' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' type-v2='filter' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6750' id='85' mode='checkdropdown' name='Best Death Batsmen for team per season' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' type-v2='filter' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47375' id='81' is-fixed='true' name='Best Death Batsmen for team per season' w='47800' x='500' y='7375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46500' id='87' is-fixed='true' name='Best Batsman In terms of Average In Overs' w='49000' x='49900' y='9375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4073' id='46' mode='dropdown' name='Most Economical  Bowlers In Overs' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]' type-v2='filter' w='49200' x='800' y='57215'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4075' id='47' mode='checkdropdown' name='Most Economical  Bowlers In Overs' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]' type-v2='filter' w='49200' x='50000' y='57215'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37712' id='44' is-fixed='true' name='Most Economical  Bowlers In Overs' w='49200' x='800' y='61288'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37710' id='88' is-fixed='true' name='Best Bowlers In Terms Of Wickets In Overs' w='49200' x='50000' y='61290'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9B1C968B-A588-4137-89CD-75102758A042}' />
    </dashboard>
    <dashboard name='Top 10 Batsmen Performance'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Shikhar Dhawan' caption='Select Batsman' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
          <aliases>
            <alias key='1' value='Virat Kohli' />
            <alias key='2' value='Shikhar Dhawan' />
            <alias key='3' value='Rohit Sharma' />
            <alias key='4' value='Suresh Raina' />
            <alias key='5' value='David Warner' />
            <alias key='6' value='AB de Villiers' />
            <alias key='7' value='Chris Gayle' />
            <alias key='8' value='Mahendra Singh Dhoni' />
            <alias key='9' value='Robin Uthappa' />
            <alias key='10' value='Gautam Gambhir' />
          </aliases>
          <members>
            <member alias='Virat Kohli' value='1' />
            <member alias='Shikhar Dhawan' value='2' />
            <member alias='Rohit Sharma' value='3' />
            <member alias='Suresh Raina' value='4' />
            <member alias='David Warner' value='5' />
            <member alias='AB de Villiers' value='6' />
            <member alias='Chris Gayle' value='7' />
            <member alias='Mahendra Singh Dhoni' value='8' />
            <member alias='Robin Uthappa' value='9' />
            <member alias='Gautam Gambhir' value='10' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='91000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='8000'>
            <zone h='91000' id='5' type-v2='layout-basic' w='98400' x='800' y='8000'>
              <zone h='40625' id='3' name='Runs Scored by batsman' w='49200' x='800' y='8000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39625' id='13' name='Top bowlers who dismissed &lt;Parameters.Select Batsman&gt;' w='86200' x='800' y='59375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10750' id='17' name='Strike Rate For Top 10' w='98400' x='800' y='48625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='95' h='39625' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12200' x='87000' y='59375'>
                <zone h='16875' id='14' name='Top bowlers who dismissed &lt;Parameters.Select Batsman&gt;' pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' type-v2='color' w='12200' x='87000' y='59375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='40625' id='18' name='Teams and #of matches played by &lt;Parameters.Select Batsman&gt;' w='49200' x='50000' y='8000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='7000' id='16' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='7000' id='9' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='110' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='109' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7000' id='9' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40625' id='3' is-fixed='true' name='Runs Scored by batsman' w='49200' x='800' y='8000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40625' id='18' is-fixed='true' name='Teams and #of matches played by &lt;Parameters.Select Batsman&gt;' w='49200' x='50000' y='8000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='10750' id='17' is-fixed='true' name='Strike Rate For Top 10' w='98400' x='800' y='48625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39625' id='13' is-fixed='true' name='Top bowlers who dismissed &lt;Parameters.Select Batsman&gt;' w='86200' x='800' y='59375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16875' id='14' name='Top bowlers who dismissed &lt;Parameters.Select Batsman&gt;' pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' type-v2='color' w='12200' x='87000' y='59375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{79F52140-8084-447F-9DB7-832D6530682E}' />
    </dashboard>
    <dashboard name='Top 10 Bowlers Performance'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Yuzvendra Chahal' caption='Top 10 Bowlers' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='9.'>
          <calculation class='tableau' formula='9.' />
          <aliases>
            <alias key='1.' value='Lasith Malinga' />
            <alias key='2.' value='Amit Mishra' />
            <alias key='3.' value='Dwayne Bravo' />
            <alias key='4.' value='Piyush Chawla' />
            <alias key='5.' value='Harbhajan Singh' />
            <alias key='6.' value='Ravichandran Ashwin' />
            <alias key='7.' value='Bhuvneshwar Kumar' />
            <alias key='8.' value='Sunil Narine' />
            <alias key='9.' value='Yuzvendra Chahal' />
            <alias key='10.' value='Ravindra Jadeja' />
          </aliases>
          <members>
            <member alias='Lasith Malinga' value='1.' />
            <member alias='Amit Mishra' value='2.' />
            <member alias='Dwayne Bravo' value='3.' />
            <member alias='Piyush Chawla' value='4.' />
            <member alias='Harbhajan Singh' value='5.' />
            <member alias='Ravichandran Ashwin' value='6.' />
            <member alias='Bhuvneshwar Kumar' value='7.' />
            <member alias='Sunil Narine' value='8.' />
            <member alias='Yuzvendra Chahal' value='9.' />
            <member alias='Ravindra Jadeja' value='10.' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88625' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='10375'>
            <zone h='88625' id='5' type-v2='layout-basic' w='98400' x='800' y='10375'>
              <zone h='44313' id='3' name='#of wickets taken' w='62800' x='800' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51000' id='10' name='Franchises and Number of matches played by   &lt;Parameters.Top 10 Bowlers&gt;' w='35600' x='63600' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44312' id='12' name='Top 10 Bowlers Analysis' w='62800' x='800' y='54688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37625' id='13' name='Top 10 Bowlers Analysis' pane-specification-id='1' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' type-v2='color' w='35600' x='63600' y='61375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='14' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='9375' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='100' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='99' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9375' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44313' id='3' is-fixed='true' name='#of wickets taken' w='62800' x='800' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51000' id='10' is-fixed='true' name='Franchises and Number of matches played by   &lt;Parameters.Top 10 Bowlers&gt;' w='35600' x='63600' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44312' id='12' is-fixed='true' name='Top 10 Bowlers Analysis' w='62800' x='800' y='54688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37625' id='13' name='Top 10 Bowlers Analysis' pane-specification-id='1' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' type-v2='color' w='35600' x='63600' y='61375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DFC1176A-2B42-48C3-A744-E4F8EFCD90A6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='58'>
    <window class='dashboard' maximized='true' name='Top 10 Batsmen Performance'>
      <viewpoints>
        <viewpoint name='Runs Scored by batsman'>
          <zoom type='entire-view' />
          <highlight field='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Strike Rate For Top 10' />
        <viewpoint name='Teams and #of matches played by &lt;Parameters.Select Batsman&gt;' />
        <viewpoint name='Top bowlers who dismissed &lt;Parameters.Select Batsman&gt;'>
          <highlight field='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{63041088-0DEE-4DC8-9294-ABF35B4C9624}' />
    </window>
    <window class='dashboard' name='Top 10 Bowlers Performance'>
      <viewpoints>
        <viewpoint name='#of wickets taken'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Franchises and Number of matches played by   &lt;Parameters.Top 10 Bowlers&gt;' />
        <viewpoint name='Top 10 Bowlers Analysis'>
          <highlight>
            <color-one-way>
              <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E7F0801D-22DE-41FA-9228-E898B420A7DA}' />
    </window>
    <window class='dashboard' name='Player Analysis'>
      <viewpoints>
        <viewpoint name='Best Batsman In terms of Average In Overs' />
        <viewpoint name='Best Bowlers In Terms Of Wickets In Overs' />
        <viewpoint name='Best Death Batsmen for team per season' />
        <viewpoint name='Most Economical  Bowlers In Overs' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B04B1124-AF35-40D8-A5BE-6EF04DBC71AB}' />
    </window>
    <window class='dashboard' name='Does Winning Toss Increase Chances Of winning?'>
      <viewpoints>
        <viewpoint name='Sheet 14'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:toss_decision:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Toss outcome vs Match outcome (for each Ground/Venue)'>
          <highlight>
            <color-one-way>
              <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:Calculation_733242334195023872:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Winning Analysis Based On Toss Decision'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B77DDF50-D3AD-4C58-A172-4E9855F16AB4}' />
    </window>
    <window class='worksheet' name='Winning Analysis Based On Toss Decision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' type='filter' />
            <card param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]' type='filter' />
            <card param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[Toss Decision (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[Toss Decision (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[Toss Decision (group)]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:id:ok]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:venue:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:winner:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ADB30E6-0D26-4177-93CD-B87B32185C33}' />
    </window>
    <window class='worksheet' name='PowerPlay Analysis:How many runs from the total score have come from the powerplay? '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_473722405725405184:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman_runs:qk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28B0AA4E-34AD-48EE-910E-30E0994FA648}' />
    </window>
    <window class='worksheet' name='Over by Over Analysis For All Seasons'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FCF8750-D19F-4532-9106-9B68D103C136}' />
    </window>
    <window class='worksheet' name='Judging the average of the all-time IPL Batsman'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:player_of_match:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0546B524-8663-4772-BEF2-553402878234}' />
    </window>
    <window class='worksheet' name='Top 10 Bowlers Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[Bowler (group)]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:player_dismissed:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:result:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CAE2BFD1-F9AB-473F-A219-94F72632E4CB}' />
    </window>
    <window class='worksheet' name='Best Death Batsmen for team per season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]' type='filter' />
            <card mode='dropdown' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:winner:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04EE5603-F2DB-45BA-9DF0-512149ED52CB}' />
    </window>
    <window class='worksheet' name='Strike Rate For Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EED3F4D-3547-4715-AF30-DCA6D3D1C19B}' />
    </window>
    <window class='worksheet' name='Runs Scored by batsman'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBD646B3-C70D-4358-A917-FE27D6311CED}' />
    </window>
    <window class='worksheet' name='Teams and #of matches played by &lt;Parameters.Select Batsman&gt;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_555068674582396928:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE8AA9ED-8688-462F-BB37-EDC27A66BBD8}' />
    </window>
    <window class='worksheet' name='Top bowlers who dismissed &lt;Parameters.Select Batsman&gt;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]' type='size' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_464715207107805185:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:dismissal_kind:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AC786C7-617A-420A-8001-2B99F147EE61}' />
    </window>
    <window class='worksheet' name='#of wickets taken'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:id (matches.csv):ok]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:id:ok]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:player_dismissed:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{888C922C-B59A-4D19-BC53-CFEA8CC7C3E1}' />
    </window>
    <window class='worksheet' name='Franchises and Number of matches played by   &lt;Parameters.Top 10 Bowlers&gt;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:Calculation_907193870151974916:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowler:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:id:ok]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:player_dismissed:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62399620-20D1-409B-8BD7-00F5B0E26224}' />
    </window>
    <window class='worksheet' name='Toss outcome vs Match outcome (for each Ground/Venue)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]' type='filter' />
            <card mode='dropdown' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:Calculation_733242334195023872:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:Calculation_733242334195023872:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:id (matches.csv):ok]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:venue:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:winner:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF6D56A4-86EC-4FB9-96E6-568BD05A4541}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:toss_decision:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:Calculation_733242334195023872:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:city:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:id:ok]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:toss_decision:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:toss_winner:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:venue:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0CE065B8-B306-492C-AE53-A195FCFBAB41}' />
    </window>
    <window class='worksheet' name='Most Economical  Bowlers In Overs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:batting_team:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:batting_team:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB9DB8F8-0E3D-4960-9367-0E558060984C}' />
    </window>
    <window class='worksheet' name='Strike Rate Of Batsmen Against Teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_495395979474903040:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B1A59CD-6150-4CC2-9AFC-CF37B46535D8}' />
    </window>
    <window class='worksheet' name='Average of Batsman Against Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[usr:Calculation_907193870136991747:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{149BE004-22EC-42AE-A336-A1DD56968329}' />
    </window>
    <window class='dashboard' name='Are Batsman Good Against Certain Teams?'>
      <viewpoints>
        <viewpoint name='Average of Batsman Against Team'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Strike Rate Of Batsmen Against Teams'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A0B83412-AA91-4630-ABC4-2EE7D923620A}' />
    </window>
    <window class='worksheet' name='Best Batsman In terms of Average In Overs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[Over (group)]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batsman:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:batting_team:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[none:bowling_team:nk]</field>
            <field>[federated.0kphudx0f8udkw1bmt7y71554wk7].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{276D2449-6A42-4C61-939D-397FC1BE36DE}' />
    </window>
    <window class='worksheet' name='Best Bowlers In Terms Of Wickets In Overs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowler:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:bowling_team:nk]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[none:id (matches.csv):ok]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[over (group)]</field>
            <field>[federated.0t5dlyy0flbxcm1c0hdm90c92iyq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19A803CF-A64A-463C-A2AD-A0E825C9CC00}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='#of wickets taken' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Are Batsman Good Against Certain Teams?' width='192'>
      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
      q0auAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average of Batsman Against Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Best Batsman In terms of Average In Overs' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3Ac2Zag92VmZXmPQsF7gKD3IEg2TRs+NpttnpkZxe7ThKRVbIxWof2z
      Cv3QL+ltxMjGrEL6sQrFSrNaKRQ7sztv3utnmu1IdtOCMAQJ771HAeV9pdEPgGxDNJvNJoli
      d30RjCCqMm+ezKxz77nn3HOuoOu6ToECP1LE7RagQIHtpKAABX7UFBSgwI+aggIU+FFTUIAC
      P2oKClDgR01BAQr8qCkoQIEfNQUFKPCjpqAABX7UFBSgwI+aggIU+FFTUIACP2oKCvAc0XUd
      TdO2Wwwgv2RRVXW7RXhIQQGeI/n0o9N1PW9+eIqibLcIDzFstwA/dP7mch+9U2vbLQboOjog
      CMJ2S4KuaQhifvS9z10Brv/h/yWQcyCbrOw6eIzGCg9ffwW6rhAJJ3G5nTzN+8nFVhleVdjX
      UL7Znsra3Dj3+0dJ5KCscR8tu2sQv9Z4KrLE7Do0VjgYmFpi/86mp7zLTWKL3Fs1cKjB//Cj
      pfU4o3Pr36/dAs+N564AWYOTty78DCmzzPUb9yn1n0FIZ7A6rKBmSaU0lPQiH3/axytnWyny
      +9HSccxWJ4KWJZnVsJoMpLM59GwKVbZjJs16JI5ksuPzOJCtbmpKvzA10uElOvrmOPnaBdwm
      CAQjCEAmGSUUSSCarBS5nRitXiqNoKspwpEY6DqpRAzJaCKTA7vNRDISQrA4sBognsphtchE
      Q0GSWQ2nuwi7RUZTMqyvh1AjCwQS/m9+GAXyjhc2DhmMVmxGCV2JcOvmPbJAKjrLnc5xwuur
      RCIh5mcXSOU0utuuEs1CLjzPjZ4xMpF1bt+6Qlv7fcKJNLPjQ0zNzNLbdo2JtRRE57naPf7w
      WpGVWTz1B3CbIRKOIpssAMxPDDI5PU1fRxtjyxFiK5N0D05vnqWTii5x+04PmVyQmzd6ULQs
      nZd+Q9vECkp8lfa+cTKpdYb7R5idGufyrbvoaAzc+Yze0Ulm5pfIKvlh8xd4Mp67AsRXJvjj
      +7/mdx/exLNjLw7pawcIElWNu6iqrKWl9Qhey1aDkkYmZ+LUudep8jlwu+yEVpcJrc0xtRx/
      5Ggll8VgktG0FOP9/fz6jx+jajoup5PI+iqBlXnmViNfOScwcY/ffNjF4TOncNhKsRuDJNfn
      kRsOYQissRoM4/V4kA02TIYMyysrzIxPkyHMWtLH2VMnaT20B6vx6zdYIJ957gpgL2ng/Ouv
      YBIFnA7zw8+/7iHZmKLp6LoOm/90XQN9Q0xfeRlmETQlzt3+Jc69/R5vnTmMoD/q2XD4Slif
      nUGQHBw5fYpytxGIcK8vwOnz7/DmmcMYha/21MUNB2ittzE6s4aug99iYWBshZLaBvyWMJPz
      K3iL/QTGu8j4D/PT995lT5mTHCqqKqCjo+kahQoDLxcvxAtkdJZx/jWJq9evoR5rxSOscen3
      f0BS4khFhxAEG8bsPB/88RNaXnsdp0Xiyoe/x6jGSXr3fKUtQZSRsqt8fOkjxNQSYlPVI9dz
      ljRQNXmVv/v7KawmiZypCEEwYcitcPnjjxCTaxgbznztLImGo2cJXvkj4+4L1Na4+PTyFH9+
      oIWEy0j33ThHXzGSiDiZ7vyM4JiVmaUwrRTjs9zmd7+bxymmSZe0PMcnWeBZIzzvsiiapiEI
      IoKgo2n6hhtO19H0zf8jbHh+Nj8TRRH40rGb3+uAKAjouv7w34PvM8sDXFswc6Gl8eF1vzzC
      bFyfr15XEBDYaHfzK0Rx4zydje80Xd/0HOnoOhuuu4ftbsi18Zn2hbyC8NDbpGkaf/U3t7g1
      sPA8H3GB78FzV4DnTS6yyOcdI+w9dpwyl2W7xfkKmqaRTGdB2H6ft6ZpqKqKLMvbLQrZTAaj
      ybTdYgA/AAXIZzRNQ9M0DIbtjzfmkwJkMhlMeaIA2/9mfuCMzwcJJTLbLcaGSahqSIbt91Ll
      cgqynB8/vUelUNJMz6/gK6vAbjKArhFeWSAqOKgucT9yeDIWRjA5sRifbphXs3FiGRm348l6
      BDUTZ2p6jhwy5VU1OE0qq2spfCUenuTVxmJhTGYHRvmrR2tqhpnxCVKqgM3jp6rUiygIRENB
      rC4vhqe0Yn5/a6QwB8hjHn2tiVVu3GlnbGYVAE1J0d51m667g1s2sDQ9wEos99QC5GKzDE6F
      n+hYXclw5/o1Ygro2SiT08toCIjik6+fmJ4YJhzPPvK5kg7RfX8ESRRYHOmgfWAeVdcZH7hP
      Ij/WkBV4Dmw5DpVWVBJeXUVpKicbC2B0VqCnAFQG268xthTFUdrAiSN70JUMY73t9EXDlDQf
      pmVHGUsTvXQPzmLx13Pq2F4WxnsJrodZCoQp332Mw41+ViaHuDswjqImcTe8QWqxn4lMEWsj
      Q+w600pk6B5Dc2vYfTW0th7ALotomkowpbCruhaP3bzhdcmsMTMfwVNsY7j9LmtKkvVgmj0t
      p2nwmxjv6WBgZg1Jt9Fy8VVQs4z13qE9HKW0+ShHd1Zsrk0SsHvLaN65E5obuPLxZeINZeRS
      Ee7dukokmmbvsVPUFckMdt9hfClGcd0eju9vQNr+9WUFnpItB3bJ5qNECrEcV1ifnaGotm7z
      Gx1veRMnTp7EEF1gJZJEVzWc5Tu4cP4U60vz5FJr9E9GOXriBJ74KP1LKSLrq1hKd/LWhZNE
      pheIRwMMzIZ59cK7nDu5FwlQE+t0946z8+RJ/BYjrtJ6jp88gZNVZpZiG3LJZo7vb+Dmp5f4
      4PItArE0uppmNRBFRyMYCFK+6xhvnNjH4uwUqZVhRuIe3v3pT6myKCRzKqg5HOU7eevCKWJz
      Czw6FgCCTJHdSkpRUFWNmj3HONfaxPziMqGFIVaFSt559yK2QA9jwcLw8DLzDZatiL/Cz9Lk
      GDNRM/XFxo2PMyHu3etjZHSUteUgsZyCaLJQ4vMgGwyYDDK5ZICl5SDjo6MkLSX4rSKY7JT5
      3BhMJsySSCqRwu0vx2aUkAyGh0I0H2ql1GlGT4Xo7e9jZGSM5dUIiXQaAB0BX80e3vvFL3hl
      j4+b19rIfimga7a68XntGGQLRoNOKrxGZeMuJEFAkqSNnt5oo9TnxmAyYpGkrSO3ukYsnUKW
      JMx2D163HVk2YjCIJCMhPGXlGCSJxpoiloOpZ/MmCmwL3zi18/hKWJkdQ3Z6eTg9jS6R8zVz
      5OBurAZxyx+P0VaC3SKx59BR9u2owCg96nYzW02szs0QTiRZnJ1/2AuLm2vEc9E1dE8tRw7u
      wWn64jqakmOov5doKoPBYED4Fv+6taiEmcFeUqkYyytBvm2ZmqYqZDJpZgbvkLZU4TI/Kruz
      uIzl8SESyQR3h1apL7OhqQqqpoOuoShqYTnES4T0q1/96ldf+UQAQbbg9bixoOCtasBukpAM
      JryV9ejL/fRNBalr3oHf58VmkrHYXZgNIoJkoKjIT5XfREd7JytJMw21JciSiN3hRDaICIKM
      p7SUYnOWzrt9GH3VVBQX47QbMVjcOEwCBpsHbW2cvolVKhsa8XuLcFiNCKKAnlyn6+59FiIi
      Z860YpVFBIMZr8eOKEg43E4MgCgb8fprsGUX6OiZBE3A19iAxyRjszkxyiKCYMDpdmz0AoLO
      +uwYg+PTCEWNnDzYiEEUEAQBh9ONQRQQZTP+0gpsyhqd94eoOniaBp+FwMwAYd2DS4jRP76M
      17/hkdJ1ndv9c8wFYi/+zRZ4In7QgTAlvsyVz7rQDCJJ3cZbPzmNVX5xUVlN07h2fzovFEDX
      dXRNR5S2PyqtKmpexCPgB64Auq6jZLOouo5kMGKQxKfKOHtaCpHgrSlEgl8QgiAgm0xs/ysv
      kK/8oBUgH/jXl+7RPbay3WIAfGkFbUGOB+SlAsQDM9zp7CWeUXGVNXC8ZR+W72kyLvT2Iu5o
      psz81aE3E13l0qVLCGY3osHK4VfOUOExP5K4H16cIix5qS1xfafrhmNpltYfzVorkB/kpQIM
      9vdTd/hV6vwW4tE4BhRCwThOrxtRyxAK5/C4JCJJ0BJrYC/BLqVZXApgsHkp83vQs3Hm55fR
      DFaqqsrJJhJkwmukEmkcvnJ8LsvGmn8lh71yN+deaSEZmuH63T4q3jhKZH2JQCiJ1e2j1OfG
      7CrCJ1pQcxli8TixcBjN7Ka6rAg1HWdhcQVFNFFeUYZFzo8JXoFvZ/tdAltQ6vcweP8uk3Mr
      GKwOZC1FV9t9MoCqrNLeNg6pRa5cvk7P6AI5JcnAvV5C8QRTg3cZXwoy2XWHmXCC6Po8oSRA
      nJGhKeLxEHfv3CW5RQBXEERMJhnIsTAzTzKdYvB+FyvhFCvTg4wthElHl7j88WesRRMMt91g
      OQOhwALBSILo0igdQwuFOMBLRF6OANW7j2P3zjE2PsTQ8CSvnjmw5XG6qYhTrxxBCE/w4fg0
      LocNJZ1G8YSotxqJrUcpa6zHZdFJYOdg6yFqrGa02FVyKjxYPro00sWv58cxuMo4dfoU6CAJ
      OSYmF1lfCePfleILw8dAzc79HDqwg8XsGrEslBpl1pZGSSTCxEw21P3V+flgCzxCXr6nTCaD
      01/FsZJK7l3/gNWowoOE+Vwmw4PO2+srQZYEVEnCV7mL82cPYUBD1QGtipJcmqneG3RmbFQ8
      5nplzUc43uTjaucUskGAyDijcR8X3jnORMcNst9S3rC3b5BDZy7gUhf4qG3tWyPOBfKHvFSA
      uaF2eqdCCAI4fLXs8jlIOTJ88NvfYbNoKIZGEESkzWWYkquSGuMov3//fYwmO3tajiAsjdI3
      s4KmCRxotiBGpIcTW9EgPYwHCIKIQTLgKKnn/AkDH1++xrmz+9BXr3Hp0jhKLElTlYAoSkii
      sHndDctRkCREATw2A9c+/QCHRSCllj0ygS6Qv/ygA2HbjaZp/NXf3ub2wPx2i1LgGygowHOk
      EAnemnyKBOelF6hAgRfF9ndNP3D6JlcJRLY/Z+BBnSRJ2v4YhaIoeTEqwjYqQC4dZnxincY9
      Dd+6VicdXSMte3A/aThYzTK3uEZZVfnDG5wa7GItoWOwuGhqqt9I+P8+6BorgXVK/MWPPezT
      zolCUnwes20m0Np0P30995gOfntCfWR5nPnQlsmLD4kvj9E1PLvxhyDhdNq/cnNDw0MU+ctw
      CGFu3u79SibZU6GrDAyNfM9GCmw32zMCqClm5nMcf3UfM5NzNHnrSc7d49pYglx0GYu3CmM2
      SCgtceLMWXQlw/DdG4x3JPA3HuHk3mome27SNxVAshZz8vhuetra6F1RWJmt4+TxFnqHJzjb
      euiLGzU7KK+oxCz5WVu+SUrVWB25S/foAqLJydGTJwgO3afk0HGKjHD/bgdN1SV0LQmc3V/D
      8mQ/UWMFdR6NjjsdBGJpFpNGXgc62m+y//BJzKlFrk3lOHug7pvvvUBesS0jQDqyRtLupcJb
      Rio8hwpo6Siyfydvv3ue7PIiu46f43CTj1AwDoJE9e4W3n37PKnxfkIauPxVHDh4ED8hJkM6
      R44e4kDrGd4+/xoeo0oo8tUklFwqwuzMNCP991HdVdgMYPdWsG//AaqKdEbHAlSVGekbWkLP
      BlgLGzAKWUKxDfs9k4qTSOeYG+rF1nicn777Nk2lDgAi4dBG8E3NEIolX/DTLPB92JYRYG1+
      lLGBJSJL46wtBpk5dgo/4HK7kaQsVpsdi1kmJ8uIOgiSAavFjGQwUmwzkFRTjN3txVZeSSYX
      R02o4Hj8NbVchuXJPiZCZn7x08MYlDgD/UMY3B60VI6kkMRWsRt1tIMV2Yhv5z5kYfFrrSjE
      oyIVhzwIQu5hQKzAy8sLf4O6lmZhReVnv/wP+fnP/4Rf/uIYkyPfEijSNKKRIMtzY0xmTBTL
      CVKKk5rqCgxaDk0Hg9FEPBRgPRQmt4V9b3L6OfbaO7yx205n9yCpZIIYZmqrKzChogKiaKbR
      rXJlMkOT3wqyCeIhVlYWGBufRcWAy6Mz2DfB2uoi8ysbBb1kNNbWAoyMjpJI588OiAW+nUeT
      4p83ShbF4qG8yI4AGCxuZHK4vV5MVgc2o4jRZMbldiEbDFisNmwWE4GladaiGkdPHMMu27HL
      UcZmVilv3E1ZcRFebxGmbIjp5TBFJWU4bBY8ri+GBaPJhMvlwVNSiU1PkLMUU27LMjq1TFFt
      E1U+L067GYcty0zAxp4GP4LZiU0NMrkQoaKhiTJfEaUVVWQDU8wFczQ3N1LkduBzWRkbm8Li
      q6a6ohSvY6NKdSEpPv8pRIK/RHJllD981svpd39Bue37D46aptExNM9SMPEMpPt+bMQB9Lww
      2xRFxZCvSfG53NPX+SzwVfTNDT/yIehTWAqxNY+8GUVRKAwKzw6j0bjdIhR4DNvfNf3A+d/f
      76R9aGm7xdjkwYZQ202+yJFnChAd+CP/7P+4TqXXgrtqJ//Jn/9DPOavHpNdG+Kv/uW/w7Pr
      FP/4T8/x5TpXkekhOgMZzrUc/MZr/N//3T9iKFmN3Wqi+fjb/OnxUv6337XzX/7yve8srxYY
      4sMZOxePVn3j60xnFOKpx0exC2wfeaUAWjbJsV/85/xnr21EUnU1w1jPPcYWQlTtOsKucgMf
      /pt/xYr1MK80VDz04WZiq3R23GV1YZVc1S4y8XVWQwJVVR7Wp8cRypvwbloi5uJq/tkv/znF
      hnV+/X/9exb3/5RIfGOSmksEuH2rE8HXxMmDjejJddrbu0gbfbQcPYhFi9B1p5OE5OHYiaM4
      LW4aKh0Iepb+9lvMhnX2Hj1Gtc++DU+vwNOw/S6BrzHZd4erV6/ScX+UZDzKciRNsc/J3d+/
      z4Ii43bb8JVWUux2bGR1qTF++zd/R8zgxG03oesQXhzm2rUxQGP40/cZ26IqiapkyGHkQQEH
      LZfmk0ufYPSUkBj+hE96V2i7eonVrAWrliaYSDJ48zdMpGzY5RyBYAJtoZN/37VMdOQKl8dS
      +NwmlgOhF/m4CnxP8moEABAECUmSEEURHY3w3Aj3xhcJzI6xK/oXNDVXM2s+yO4Gz8YJa6NE
      Sk/yH5w9RGS8h5vLj9+PKzjVx7/47/9bvG4vx8+/h3/TKZJLrXP98geYS0dBiVFkXuR8hZf7
      neM4DuzHYTIhFJWx0jZCmXMfjQ4zRDfONXsrUQOfsVi0l7019jyycAt8G3mnAHV7Wzh7dsME
      mrj7Caq/lf/6z5q58m/+G9St9qKQZJLRVbKKSioRI6sYEQQBTVdQlSyhSJwvL1j21u3jF7/8
      55Q9sFJiG8sdBMlIaXMrf/FP/ylmIUsiKyJpDfyj3RqD1/7A5W4L7x0+xT/ZAcNdn/LJZ0b+
      wY7NNhx1/MVf1BGc6+aD31zjP/4vfobteT2gAs+UvFIA0WjDYf5CJF9JGbMfvc//OngbawpO
      GEAyO7CbvmS5+XZx2NzG//yXd/C4PVQcOYWzuIzE3P/J//gv7mAI5njzS4fbHJ6vbmkkSngc
      dmSLh9f2lvBX/8NfIls9nPv5L3Gvd/C7q93kJBcX/qyUxaFbvH/lPhnJzpt/8joI67itBtLr
      U/zbv7vEakJj/6n3yA8Pd4En4ZFAWCqVKsQBniF/famXjuGCG/SrUugIeSAHbKEA6XQa7Vvq
      4BR4coxGYyES/DXyOhJsNpu3Oq7AU/CgKkSB/GX7u6YfOJ3DCyyub3+STCEpfmvyQ4pvIb46
      xWBAoGVP7YblqCe5e+MeNS3H8X3nuukKizOLFFVWk1mbI2EsosxjRVNzzC4sU1tdBYCeDjEd
      FPAa4qQMHoqtGpMrMZpqyr/T1W70zBaS4vOYvAuEbUUiOMtITz8raR3QSc31c39oipXE0ySf
      5JgYGCalgtVTjNexYYsK6Mz2DxDedLWujPUTyGjY3MV4HWZEo4WKkqJndk8F8oOXQgEQTdQ0
      FDM3tYquawyMx9jXXIQALA91MbiwkZk12HGZ5XiO4dvt3O9r44PrPWTDc3zw+9/x/vu/pWNg
      fiN3d5OlyT6mVjfME0GS2V1jYmg2jg5MBhLU+x0sjw0wHYgipEPcvj8CaobBzmu8//5vef+P
      V4hk4e6ta4TTCugZ7t2+TSRb8KK9LLwcCgA4iiqJr8+iqWkigpkiw4YbTcmkyCgb3XY6GUfR
      ILq+SFKu4Pwr+5HMLpp2NNFYX8v8WB+ZLwXTcpkkmYf5kwLu+l2ExgYht05C9eC0GMil0xvt
      ayrxZBoEA8XlNexoasKnzTOymqPWZ2RoNkw2OE/I4MMh54eLr8C389IogGxx4lVjzMyNYS3d
      +dhjzdYimpurkSWd+cH7rKR0jGYbgp5EfYxTRjL5MClBliaHsdU1I4uP/pCzyTD9g2MIshG7
      zUwimaaoYS/ZhVHGZ9eoqSlli9MK5CkvjQIgGKhr9HD96hRNjV/Y4marmfWleSZG+5lYjGwe
      +2A7VJ1EPIPNbkdQEiTSj3dJCoLErlIDH3SH2VFh3zJUo6pZVGSsJplodHMxkMFBmUNhdDmO
      31NYCfoy8VJ4gVxlTZgNRmzyTk6/7sMng3nnAVSHAad7LzXKGAnVwskzr+GxSNj37MQKgERz
      6zEGByZQPWW8cbYYs8HIzkP7sRrAULMbr2z94kKCQNnuo5xwRPGYNrxL/vodeE0O1Nwasixj
      dvrZtyPGYihB8/ELCPaNuEmJ18qCsQS78eXpUwoUkuKfCCW+xrVrN7DVt3B8V+Uj34dmB7h2
      f5HT585SZP0iBVLTNHonllmLpF+kuFtSiANsTUEBniOF/QG2Jq+XQhR49uRDH6Pr+sN/202+
      yAEFBXju/C//rq0QCc5jtn3Glostc+m3v+G3v/0tf//bTwlmFfrv3WYt/mxKDGqpaT66OoCm
      Q2q+j7/+298TTmuQXefK5Q62yh8LzMwQVbbKvinwQ2PbR4C1yR4ce97grSYnSjaLKEvMqzmW
      Z0YYj6Wo3bWHEofM0vQo00th3BWN7K71E11ZIabGmZ8JUNKwhxq/g1R4mcHhKSzFNexqKEcE
      BFMFQvYqmr6b+UCKhnIX8UQSoxJCdDuRlQyTY4MshTJUNO6mwpTgykcfYd2xk/rKRpprXIwO
      DBJVjDTv3o3HLDA3McT8eobGPfvxO02sLs8SD4ZYTcCufbtxmbffzi7wZGz7COCt2816z2Wu
      3+5iPaUiIpCLBllPS1T5TXT3jqEpOdK6TENjHZHBLhYyEBi7R99cguraUsbvdZNIBukdnKOk
      tg4lMMzgzMbyCAQDDlEgpmpEM2maSt0shRMEw1GKPB6UXBrd4KKxvpLBri4Ui5sKn4/qxiYq
      SzwsjvYTE9zUlHpIpzOsTnYzGhCpq/Fx58o1kjr0tH1GRHRTZo5zb3R5ex9oge/EtiuAyVHJ
      2+++SUOZk47LHzEfzSI7feze0UhFRRlmSUTXcgQXpmhru8P47AjrEQA7ew7upKysFq9NJba2
      ysj4IF1tbYzPhUilN+r6CwLU+SRmAgFSWRf+qhJSq0FCkTBujwddybAwNURbWwezI7PEjBac
      Nhsenw+304rHV0xkaYqZlRCSBCtz6+w4sIeyshqa3QqLSbAXV7GrsYaaylK0PJncFXgytl0B
      UtEgCc1IZV0TO/zSlrZ/PLJESq7mnXcucqDex1Y5JrLZTFH5Di6881Pee+8iu6sfRIsFSuor
      mGtrRyitxGApxqlOMx804XUZiSxNIlcd5Z23f0K9z4EGSKJGJquhaxpGh59TZ89Q79bpGZnD
      5pBZX4uiaVlWoirO/PDmFXhKtn0OoKRC3L5xk4wCjqIqTpSYWYzaMUhsmC82C1a7GzV0iw8/
      mcUhWCmTwWS3Y9jc7t1qd2D2VLDTt8gnf/w9BpubQy2t2DaqlCO6axETXVSV2xGQcDtkFkU/
      NgnEonJCt27zyZwDwepABmr21nHl6oes1R1gR4lKd/cwad1A88FWqtzFtN28we96NMoaDlBs
      gGW7Y2PZhGTCYdn2R1rgO1AIhD1HNE3jrz/o5t7YynaLAuRPMrqu6wjC9ssBBQV4rhQiwVtT
      iAT/iMjkFNJb7dn0gtE3FcCgbH9/l83myGn5MQK8RAqgP9zlBAREUXjqYVTXdXRNQ/+e7TwJ
      //I3nYVIcB7z0iiAmk1x5/NPWUuDls3R2HqefVXOp2hJY6TzMwbmoxgkE80tx9lZ7n3m8hZ4
      OXhpFCAdXyYmVvLeu4dB35jO6UqS/nv3WI0pNOw9TK3fxPzEAsHwIuGMjZ31bgYHJqjYdZTG
      MheCAKnlYSbSft772esYBNDRWJ2ZxFJej11SmZqZoa62ksW5IKK6xjp+Kuw5VEFmfmaJhr07
      WR6+x0wgSfWuQ+yo8LA4P0l0LcBSVODg0UN4rNtvZxd4MrY9DvCkWByleJjndx9epn9qBUEA
      JZXCWdFEy+GdzNzvIqpkGbnfj6l0B5WGRa70rnPw6CEmBjrRNk3fwFKI8uoy5E3TRxQ0FkeH
      COdA11SGhoeALPeuX2ZsTaCmzENgqpfrHYN4q2sx6llM7iqOtRxk8l4naWCg8yaKq4Y9pXBv
      LF/KIBZ4El6aEUCUrbS8dpFYJMxE3y2uxVtpqcgwfL+PVFYhFImxM9OC1VNGTUUxqZSHMns1
      Locbm1niwdRPNgpks9++0M7qqaLl8G4sksCSZGHP4Raqi21koiuMD3YTTedYmghx8B2wF1fS
      WFWKOZaA2ef7HAo8W16aEUDJxlgNxHF4fDTvrCW6GmJ2Ypraw2d56yevUu7e2Bzj2/BVVhEY
      H2I9kUXJpEikc4iCTk5RSUUCxDeTt0wWC4bNMtKiLGMxbpg1sdUpjDXHeOfiOWqL7Gy/T6XA
      9+GlGQF0XWNmsIP2Oylkm5cTJ05gTZm53vY50w4fFncxRknC5XEgArLFhVs2ggBut+dh+Ed2
      VdK6O0rHZx+SE2wcaG2lckcN16/8AavHT1FxESDh8jgfnmOxuzBsljqxF9eQunmHT+YdmIv9
      GAGX27NRCcJgwWN/aR5pAQqBsOeKpmn8f5/00DcZ2G5R0NnctzgPIrBansgBBRCbrJIAABxC
      SURBVAV4rhQiwVuTT5Hgl2YOUKDA82D7u6YfOJ92TTK5FNluMUDXN0wPcfv7PE1VEfOgPAvk
      oQKszM1g8ZXjMBtYmBjE6G/E/5hF9/PTY/gqmzB/hzuZHOnDVdFMkd34jccEZ2fAX4YeXkWw
      +vA6n27jkL6JlcJSiDxm+7uDrxFaXSaRVYgvj9A/l8Flf7ytuLI095WCt0/C4uw40WTuscfE
      lpeJ5HJEg6tEE4/ferXAy0vejQAAZKO0985x5JVXMQk5Ru+2Mzy/Rk4VaX3jLfzaIn+43IEo
      m0gqGo2HFQbbrjGyHEUXZI6ceQNPpJc7cxALBDj7zjv4ttCj5fG73OmbRdN1aved4mC9g9sf
      XWI1K5FYTXC8eS8GJUH37c/pEbKo1hrePn+Qia7bjCyEUHIqJ976BdPtn7D7lTfwmrLcuNLJ
      gVfP4ixUiH4pyD8FyIb47FI/ltoTeGwyuegCfVNLeH3FZBMBensmKFYWOPPuz/GZJLrvXAUk
      ympqCSvzrK+vMr+wjtuUJaR6+ZOftWxkl22B219FZWmKcCTC9OwUzUZQ617l57u8zHR2oIuA
      ZGX/sT00VNq4d7WTlGCgvLqGUFogvT7FwEyYlkonIwtR9hoX0UrqCuXRXyLyTwGMHl577ySr
      Q+30T/nY6VIwuks5cGAvAmA0W+i8uYjDJG0uYxYgtULn4Ar7DuylZGWMpWwOwW6krr4Wg/R1
      K09HkiRkWaWvsxfXzv1U6XE6RxZQ0gpmux1B2Mib0gEEAYNB2lw3JKAkI/QMTLL3wCEMazo3
      Exk8zc0kPh9lxJGlvqkhD3KuCjwpeTcHAECU2XP4KLGJXgKajSItQu/QOBPj4yyHUuyqsnD5
      6m26u7uYXomDLqDmEizMTTM+Pkd2s5mv/xCnh7vpuHWNkF6C12FE0BRWF+cZHx0hmgZbZTPL
      dy/T3d1N3/gsyhZ5LLogoOWSLMxMMzg2s3Ed2YvXEmA2IOJzW57roynwbMm7QFgqEcdgsiIb
      RNKJKIpoxizmWFldR5NM+P3FmCSNwNISaUw47SbsdiepSIBgPIfDaUc2mLEYFNKYsZm+sH/C
      gQUiafD5S7CZDGSSEVbXopjtToyyiNNuJxEOsB7LYLc7sbvskM2AwYRJFkhGkxgdVtLhdYKx
      DG6XHc1gw22TySTCxBUjXpf1oeJpmsZf/c2tghcoj8k7BfghoWkas8th4ulnU+bxe8mib0al
      pe23erO5HMY8iEhDQQGeK4WlEFuTT0shtv/N/MAJx9Pk8qDOrq5vJsUbnp0CGA0iRS7rtx+Y
      x7w4BdBU4skkmqYjGmSsFvMTrQjUNYVMTsNs+uaoLYCSyyJIMtJ32KFOzWVQBRmj4Zt9AZqq
      oCIgfz10r+ukMxmMZvNjPQn/+oN7P9g5wM5qH//TPzm33WJ8L16cFygyw9/+9hKdnZ1c+/QT
      eqaebImwkk6wsLL2rcdNDXayEH58dPfrzNy/QcfE4+WIzo4yMLf66Be6xsLMHNtv3Rf4PrxQ
      E8hXu4c3Tu9FiS1ztXcevbaIuZF73B+dx1t3gJP7Kpkanaa6qQmZFBOjK5RUOkEQ0XIppubm
      Cc9NsZR1ce6NY5hFWBjppntkkXQuR2sVBGYnwGpicDjA8ePNDNy+yWwox55jp2ksc27po88l
      g3Tcbmc9LXHk9FnKXSZS63PcunOPWDRFecsZ0HJM9HcxNBdj77GT1PosoOnoQCq8wO22e6Ql
      N8dPHfvKPmEF8psXHwfQNdZWljBZHOi6hsFdwcV338MbGGQiIbC+NE0wkSGxNM1cWkVIhple
      XEHLpenv6aH8wGlOV8a5M5EkPHmXvqCVNy9eZHfNRmmTpdFubt6f48CRfRhyWUp2Hue9d84x
      1dv2jQWq9JxKw9FXufhGCz3tbZALceX6IC2vv8Xpw80YJVidHSZqrObN11sY77hDVNOYHpsg
      C2RyIi1nz/P6wSI6e6YKaZIvES90BFge7eL/GfwMU+0Jfn6uAV1JMNXbSXtKJbE8QdOO8zRX
      ueidC1GcDFBdfRj4wvzwVNRT5rZAyoUWVVkMZTm4Zy9Gg/TQrWawODl64Bhui0RqLcjdW72o
      6EyvpzipaiB/SedFAYMoEgstcufeFLquMp8Q0YNzWHccwWWRiRiNiAIEZke4Pw/TQxKiwYHy
      JdsnvDJFz3g7Wi5GzNCAAmy/r6XAk/BCR4DSHUf55X/051SJa4wvRkin18iY6nnvnYvsrvIi
      AK7aneizd5kJyZQU2R7bnlNWmV4JoSpp1kMbm1aLooy8ufhnfXqcqtY3efv8GYodX5glSi6L
      kkuysp6kyG1hcXKFgz+5yPmzrTiNIlhdxOYnySoqkdA6WQUc3lLqmg/x3k/f49XWA3y59M/M
      coizb77D2WN7sRjEwgjwEvHiFMBoo9znQrZ4aD11nOzSBGnJh1tc4IOPr4G3Dq9VRJAcVJVY
      KKppwCoJSCYbfq8bQTJS7PVstGX24nfIlO85jLTYw6VPbyLYfViNIo4iP+bNuyresY9A9ydc
      7RijuqYaw6aHaGmsmw8uXUauPEBdkY2a3XUMXvmI9uEV6morEexVHKjQ+PiDS8wlZbwOM+VN
      B3Cnp/njHz5gYCGyMXRKEhLQXFfBjU8vMbKSo7Lcl6frSwpsRSEQ9jRoCvNTI7QNrfCn77z+
      jYvfNE3j7z8fZGh2/YWKtxX6Zm1VUXh26lnpd/KfXjz0nc/Lp0BYQQGeBk0lsLwANh/FjwkE
      FSLBW5NPCrD9b+ZlRJQoLq/ebikKPAMKCvCc+cPtUUbmgtstBvDNO7Psqinmp6eat0Gi7Sfv
      FSATX+NuRxercYXyhr0c3VP7VJPMwfZPGF5MIIoyVc37ObCjiujiBDFTKSXmOFNLOjsb/fT0
      93Ng334Whocw1zbis3y/oNbY3Dpteb4U4tGkoR8Pea4AKsOdt3E2v8bxEiOLi2uouo6u5sjm
      VETJgFE2bOx+oqmoiooky+iqgqaLmExGHnR4EdXEhbfPYZZy3LjyMYt+P5VltbgEiWRwkeUV
      jZ0NPuYWFti/bz+lTTsQJQlNVdF0DSWnIBqMyLIEukY2k0HTBQyyjEESyWUzqBrIRuOP+gf1
      spHnCiBitohMTE5TX7ybiqpy0DV6Oz5jMaKRSqqcePMnMHOfm6OL2CWd9aSGv8hJPBRi/7lf
      0OjdnPTpOpqmkU6uk1bNWE0GpvtvEXMfpH6LcEP39c+obDmNMNfDjeFFnFaZRMbGm++cYb3/
      Jp3TceymLGmhjgstdi59PojFbKC44SBHm8tf7GMq8NTkuQII7Dh2AetYLx+//3fIpbt46/R+
      qqtrWe4bR4kuMLOWoQYL+0+codkr8PGVIc785BWyU+2MxLKwqQDZ0DwfXfojsmzE66/AahSJ
      PpEMFvafOM3OMh/DbVeJRqOMhk384qdnQVvgwz8so2XT5CQL+/YeoK6y+Hk+kALPmDwfq3UQ
      JKqaD/GzP/05/ugMc/E17txb5tTrP+HU4Xp09cm8uEZvFRffeY/33nmLYkOM+UDs6STSdUTZ
      8JUHZy7Zw8/OH0cIj/PpZ/ce5iQXyH/yfARQGem8yVwMTJJGxOhjn9nAYDpId2cHkZkJnC3H
      nqglJbpC2+2byILCekzhdLOV6FMUbRbNdkr1IJcuX8MuR4hTQWxlkvvD8whkMVs8haoQLxF5
      HgjTUbIZYvEEmi5iczgxyRvJ8omMitViQpQtGHQFXZSQJUimcpitZshlyAkyps1kl1Q8TCKt
      AAJmmwOb2YiSS6OLRgyCSianYzbJpFIpLBYL2XQayWQGJYcmShgNEtl0ClE2Egutk9MF1NQM
      3aM23nq9iXg0Sk4VsDudmOSNtUgvS1L86f3V/Ff/4OQLu14+BcLyXAHyEF1lbvg+90bnkExu
      jp1+BZ9N3rLX1zSN1VCcTB7sE6zp+kYkeIuotNUsU+x+/MLDZ0lBAX4kFJZCbE0+KcD2v5kf
      OMvBOMnvWr33MVjNMpXFT7M/coGt+HYF0DUi4SBGuxeLLKJlkyQ1I/bvUo/8GaGpWeJJBafj
      +1YiUEkmcphtj09ofxb820/7nukcYF+9n7/8x68/s/Z+7Hz7+88luXb1Azp6N8oApubvc2d8
      e9a2ZJKzXL7S+wxainOvfYjvlkJf4IfIE3XjtpJG5OAYwVwNDyw3LRunu/0OC6E0tXuOsq/e
      y8zIPFZbhoElnVf3l3Hj2m3CWYG9LafxC0ECuou6UjeJ9QXW0mY8YojbXQNoRg8nXz2FO7tE
      93SEyPwkgreOk0d3Y5K2TGOnv+064ytxKpsPc7C5EjWxzt3OTtaSGiV1+zi2s4yxnjsMza7j
      q9/P8X116Jkod++0sxKPk1VKQdcILo7TcW8ES1kTrxxqRshGuXPzJmHVSeupVjxSio62OwSS
      AvtaTlDtkejvbGNqNUn1niMcaipnYvg+kbUgCxGdllMnKXMV6oO+LDyRBSCIMkcOV9PVMfEw
      3U9TNap2H+Wt82dJjPcQzKnMDN2jdz7HicO7UHMaO1tf5a1zJ5ju6US0mZjoHyWj6SxODpEz
      2tANDl459xZnD7np7JyGVJDh+QTH3ngTt77Kaij1DRIpFFUf5OLFN0kuDxOOJ+m9007R7lO8
      +cp+VleX0HVwVTTx1tsXMcwNs5LT6Om4iavxGG9fOIvfZkKJrzMwG+P0ufNUiwvcmwzR29VN
      XcvrnD1cyt32fubHRxBLd3HhjRM4TSK6rlPWcIiLb73B2lAvKWBmdBBPUwvnDhYzMLlFCZUC
      ecsTG/JG7w6cqY9Zz2xMwNLRFTrbB9EFkeD6CpUpMNvLOHp8PxZBJxSY4WbvAkYJApEELfLr
      VHpGWF5aZDHp5WSRxNidAcbX4wh6nCQ70ZEpq6nDbpSx2G2IjzioBAwGA3oiTMedNkSjzPJS
      kKr9YbJiOXWlDoRIHEkSULMRetpuk5FkgjOzOBI6CmaqS91IhgiSJJKMrTM90kd4bREEicZ9
      KsMzI8yH4gC4ShsprvUz39nNZ3NQ0XQQiytF5+0uNIOBpdEA+wCrt5TyIgfmmA3xOxTmKrD9
      PPEcUECg5egO7naNoAErSwHqD57m3NnjFG/utSVI0saG0ehMT6xy/M2LvHbiIHbjRmCoprKC
      +909eMr9GHNJ5pMyb168yNHdNTxuyzRNyZLLKaxOTuOoKCO5NIp9zxtcOHeGUrcFsCLmllmO
      pEjEQiRSCunYMsayw1x88zUqPBsmiZqOEQinSEVChFNpLDYnTm8ZZ86/xblXj1PstFDsKmJH
      6+u8/dZPaK7ykVM0dh05xastzczMzpFcW8Cz+wwX3niFIluh/s/LzrePAKJMRYkfBAHJXc+u
      pgkUl5lq7w7abt1h3uyjqnEXdqOEv8K/2aDA7mN7+ezTDzCV1NHc3IAsgdlfgYdBiktLwShy
      oNbBJ5c+oqKpjuZaB4JFosKzsRmd2+vHbN7wWaejS1y/eR+Tv4GTLeUYdQ/Wz6/y6bybiqZm
      nGYrJcf20Xb7MqpkQpLd2Lz1OEZucOnqFLXN+/GYBBpaW7nVdoVxRxFV1WWYnaW8cijK7U8+
      QLT7aT1xjONvnKPtxucMZyX2HD6OS8rS1fE5oayRgy2tuGwK+q1bXJl3UX9wH1agpLQCSQBM
      TiqK8mP3wwJPxosLhKkpBu52sSr6OXOkmS3ntt+D6f4O5qMqajKKsWwXJ/Zsf8qipml80DbK
      +ELombVZ5Xfxp6/ufipZCoGwR3lxCqApBIMRLE4XFuOzjyFkUzFCkTiCwYzH40Z+1hr2FBQi
      wVvz41SAHyEFBdiafFKAPM8HKFDg+fL8FSAyy53hpc0/cgzf7SbyBCHYycEeEl+qv5mJBxmd
      mH/8SZkYfYMT3ynCq6lZJvru8Pvfvc8fP7zCciwL8SXuj6/wpGs4h4f6v7HwboH85vmPzdkY
      yyHz5h8aocAqRRqouTTRaBxNlHG5nBhQSOVAy8QRzU4i66vIoSAZgwGny4GaSxMMhgl7LGgG
      Mx6HFV3NEonG0ZBwupzIRisNtRVI6OQyKaKxJILBhNvlACVNWtHJJJNIZhsOqxlBgGRwjpFl
      gYvvvkcuHiShaWD30lQpIWoKyXQOJZtCFWScTjsiOql4lGRGRTJZ8DishENrJGIR4jo4XK6H
      OQgF8p8XYpzmMilisRiQIbu592hgepihxQh6LoGt/DCt1TE+/Xwe2aCw99hpEpFV1gYHIb6O
      ve4IB8p05kZ6yaSDrC+sceoXP4elcYam1tCzcaSK/ZxqsnHj2hBn32plaXSAmWAKLb6O79B5
      GjK9/Lo7Qr3fSiiS4tQb5/BaJGSzDTXaw+hsDXVlRRSZZFjp4dNpNz/bJ/G737RTXl1MPBKm
      ueV1irV5rnVN4nFbGVqI8xf/8B0ywSW67oExF0Uv3c/rB2tfxGMt8Ax4IV1VYGaI9vZ22tu7
      mA8mAB1HkQ8tGSUUjjAzMwtATLFw7ifnqPKasbvLaDlxijdef4Xw0gIqEjW7j3D29BlONLoJ
      pcHlLkLPxglHQ0xPLPJw0bEu4fV5SMdCROJBpqZW0YFdR89w+vQZmittpDaXKJscpbx54VUS
      8wP88f3fMrGa+kp155LGA5w9c4Yj+xvIxePMjc5z5CcXOP3KSfzOjf7D5C3n1OkzvHb2KKQL
      GcEvEy9kBCjfcZhzJxqADG0ffQZqgs6uMQ6dvYBDDHPl2hgAZRWVj7gvdVUFSdhSU+/evcvO
      1nOUGIN8dH3hoc2upcN0DM5z+vy7WFKjXOr+5lmBruvIVi8tp97gYHycD2+O0fDYeq8Colgw
      cX4obI9/TjDgEJPcvHYFE2mCiv+RQzKJNW5c/ggllWRH62sIPLowzirrdN68illIsZb+UhuS
      ETkb4trVTzHk1sjYW75RlGRkjs+v3EW0WsilkzQdfxMY/4ajJSobSvn097/BYbcws5b8jjde
      IN94/nEATSWnCcgGEdBRFBVRkkBTyGZVRIMBQQBZElG0L8r0KbksiqIibFZ/Ax1N05EkCU3d
      SIIXNJVsLocoGRAQEDIBPm6f463XWzaqxykPfPACBlFHQ0ISBVRVQRAlREFA1/WNa6naZqU5
      GUFXyekCsgiKCgaDiKap6AhkYkGSmDHrCT683sOfvXceRVGQJAkBHUXVMRi+SIovxAEeJZ/i
      AM//zYjSl3YlEr74MUgyZstXX4bhS8toDLKRr25pK/Bgp1LxwW7nkgHzg/+nw9zoGKB+x6GN
      7VcNRixfu7sHzUtf2i1dEARko+mrWxoJ0sO/H4griptnqynu32kjqRk53Hp885gH7QnkwW+9
      wHegEAl+jhRGgK3JpxGgMJsr8KNm27qmbDzIzNI6gmigqKQcj/3Z9QhKLkU6I2Lfok0lm2R5
      cZmsYKK0rBQhHUO0uzE9pitIJaIIRjtmudBf/NDYtjcanOnl/tQaydg6d65eYT6afWa7KyYi
      84xusQO8riRpv/YZM4EIkbVV1uNJ5ga7Wc88vr2FiT5WY4U94X+IbJ9xKhqorGtmf5OHXQ2z
      fHynl/Jzh5gZ7KZvYhlf7W6O7qkjHZyj824fWdlDy4lWXMkprg8FiAdX8Tcc4ujuaoKz/XT1
      ToK1iJbWYzzI01JSEXqG5zh4aC8SEJ3tJ1W0l9cP1fAgc3FYSTN6/zZdq2vUHXiFfbVuhjqu
      MboYxV3ZzPGDzehKlon+dnpCYSr3tHCw3sdEXzsDU6vYihs4fXwfazPjaBKMz6xxuOUYLksh
      MeZlIA/GdAGDrRKLuE5ubYyRkIWTp06irY4ys7JCb980jYdOsKvcTHfPEFoqRNxcxTvvvo0y
      189qIovR5qPllTPs8hsZmZ4DdFLRddrbO/HXNDz0/gRWEpSVe/hy2q6qKjjKmnnr/GmWpoYB
      DU95M2dePYsUnmU1mkJTclj9jVz4yQmW52ZAB4e/ljOvvkZRbJKpmEJsbZr7IwEOHDlS+PG/
      RGy/ewLQtTiZjJHo6iLLKxl6sqsgurAJKaaXl8hsLnIortqJICzg8XgQRZkKr5NYLsXKwH1W
      FRN6IkC2yAalAnPjg5gq62h1mx9ex+6QWI2m0UucD3eOkU12PCVFSFICk0mCTITurm7MThuB
      mVXc+xTMZhtl/iJkOYVJllFzcQa7u9AsDuKBOUqjOi7RzqGWA3gLecIvFds7Aug6ajZJ92ef
      Ub7vCJ7ySoySneOnznBoTz0Wh4dyq4nq/cc4dfwIxU4z6KAoCmomwvBKjGJLjmDcwStnTlFf
      4tpoV5DZcfgUJ6p0rndP8cDR66/fyWrfHRYjG4nxwfgWZVfCcyhlBzh98iiub6h+l82G0Cz1
      nD19giLzZm8viM88zbPA80f61a9+9avtuLCeS9J3v5vx6UVqDp1lV7kT0VJEqTnG7VsdhHUL
      1RWVVFf7Gem6xdBskPLaOizpZa62D7A0v8T+U69S4nRhM4Roa+/FUlJHZWkRHqcNyWChtLYO
      PbSI7CvBJIIg26ircNHTcZuxpRjllRVYZBGL04tRBAQRT0Ujubm7dI+tUtfchL+4CKssYbG5
      McsCmiDhLy5DCY1x5/9v7+5+orjCOI5/52VhFxbBFaxVicXaAgIXpSq1iV408SWhTcOlf6hJ
      b2xNSnhR02KhWqSutrssAXd0O4ywMMw5vVjsRaOhTcnZ2Z7nc7+Z52J+e+ac58ycxed8MHie
      Qu97dLVDR777r0+jQ2OfkdY6FXuH3tTiec1/PEuSJBW9EWjBRlhcvs9cfZgr5/LNLuVA0gh7
      uzQ1wlouADqJibVHWwu8dKKUIo7jVPzrKqVSMwLEcZyKIEJKJsH/huNlaKVppuu6qXgEchwH
      pVQqavE8LxV1QAsGoNU4TjreH1BKpaYWID11NLuA/zvHSc/SUFpqScvNDy04BxDiMKUnikI0
      gQRAWE0mwQZordgoLjK39JyBscuMDvQ13lozZG15nplHFVxcTg6NMzHcb+zaAErtEZSe8Czq
      5NLIGdCaqPob03MP6Tg5zOeffIRv6FwFrRKC1RV+rbXx2dhZGQFM2A3LzDwOmfxykldL31OJ
      TJ5OtsdGpcblm1NMTX1t/OYHWF3+gYePi5SrjbPlkt1NpmcXmbg+SX+8wvyz8NC2wh+ksvIj
      Cz8XWd2vRQJgQLRW5P2RcXzP59PREzytGPyaRLJFubzB3J3bfDe7wFZsfs2jf/gSVy6Okttv
      Xta3A3LHznG03Wfg4jjRk+I//gzlf3Vq8AJXJ8bI+Y0RRwJggEoSstlG6z+bzbGXHN65wQdy
      u7h56xZf3bjGUJ/mm7v3zF37HTSKjL+/FcLL0ebuGRsB/k4CYEB7/gi1FwEA1Y0a3V3ZA35x
      eLTWOK5LJtNG3+kP8ZNNY9d+F9/NsVXffxwK16lne5p2I8ok2IDOE4PEP33LzOvjrFcTrp03
      FwC1EzJ/7wE608lOGFA4NWbs2g0Jv/+yRGm1TGltiwcdDh8PDVJQC9yZnmXnxTojX0xiZgqc
      UFp+RKlSplwKud/pSSPMCK3Z3d4k+OM1+Z5e8tkM5haBNLvbES9rEW4mS+FYD77RjrAiDKpE
      O413qh3Pp9B7HF9tEwQ1vFw3hSM5Q11qRfgyIKo3FiEcVwIgLCdzAGE1CYCwmgRAWE0CIKwm
      ARBWkwAIq0kAhNUkAMJqEgBhNQmAsJoEQFhNAiCsJgEQVpMACKtJAITVJADCahIAYbU/AZKv
      3xrBUxL+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Best Bowlers In Terms Of Wickets In Overs' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Best Death Batsmen for team per season' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Does Winning Toss Increase Chances Of winning?' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Franchises and Number of matches played by   &lt;Parameters.Top 10 Bowlers&gt;' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Judging the average of the all-time IPL Batsman' width='192'>
      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
      KtQ1kQBCXfv/LJHocnNfbNAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Most Economical  Bowlers In Overs' width='192'>
      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
      5TRdO8kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Over by Over Analysis For All Seasons' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d5Tc13Xn+fmFyrGrc04AGjkTADPFTAWSoiiNJNvjbM16Zlb22uPxzB6P
      vOtzdj1r7x4f71q212vLlq1gWZG0RAVSFEmQBAEiZzTQOVZ3dXfl8Atv/yhEokOFXwc0+nMO
      D9HVVe+97n739967797vlYQQgjXWuEuRl3sAa6yxnKwZwBp3NWsGsMZdzZoBrHFXs2YAa9zV
      rBnAGnc1awawxl3NmgGscVezZgBr3NWoyz2ANQpHCIEwTTRNw9B1hBDIsozN4UBRFAAkSVrm
      Ud5ZrBnACieXyxIJjzM9OUlsZopkIoFpGLe9z+F04vMHCYQqqa6rx+v3rxlDAUhrsUArDyEE
      0ekpBnuvMDE6imHoxTUgSXh9fhpbWmloaUO12RZnoKuANQNYQQghSCbiXD53hsnxMaz40zhd
      LtrWd9HY0oZ8dZu0xg3WDGCFIISg//Ilei5dwNCLfOIXQLCyis07duPx+Sxv+05mzQBWAEII
      zp88znB/76L2o6oqW3bfQ019w6L2cyexZgDLjGmaXDh9guG+xZ3815Akia6tO2hq71g7JLN2
      D7CsCCG4dPbUkk3+a31ePHOSkYG+JetzJbNmAMtI3+VLDPZcWfJ+hRBcOHWC6cmJJe97pbFm
      AMvE9OQkV86fXbb+TdPk9NHD5HLZZRvDSmDNAJYBwzA4f/KYJW7OcshmMnSfPb3s41hO1gxg
      GRju6yWZiC/3MAAYHRwgOj213MNYNtZCIWZB13VmpqeJx2JoWg4hBA6HA6/PT0VFBYpa+q9N
      1zT6Ll+0cLTlIYSg5+J5dh24/670Cq0ZAPn98OjwMBfOnuHypYuMjYyQy+Vu2xpIkoTNbqe+
      oZGO9evZsm079Y2NRU2c0aFBspmM1T9CWUxNhEnEovgCweUeypJzV98D6LrOqePHOHTwICND
      g5imWdTnJUmiubWVfffez/bdu1EXWBmEEBx+83ViM9PlDHtRaOlYR9e2Hcs9jCXnrjQAIQS9
      ly/zysvfY3hw0JI26xoaeO7FT9LS1j7nipBKJnjntR+vyEOny+3h/sefuuu2QXedAWiaxg9f
      fon33j5Y9BN/ISRJ4sEPPcrjz3x41tVguL+PcyeOWtqnZUgS9z7yOF6/f7lHsqTcVV6geCzG
      3//1X/LuW29aPvkhv7K8+dPX+Pu//iuSicRt34/OWONtGR0f58TpMySSSd4/foLuKxZcpglB
      PDpTfjt3GHeNAURnZvi7v/oivVZMlgXoudzN3/7lXxCPxW55PRW3xvVZFQphGgZulwtVUcjl
      NEvaTcZjC79plXFXGEAmk+ErX/o7xkdHl6zPsZERvvYPXyJzk8cnk05b0raiqgghSGcydK1f
      x9SMNU/uTMaa8d1JrHoDEELw3W98naGB/iXvu6+nh5e+9S/Xt1u6lrOk3YHBQWRFIZPJ0N3T
      y65tWy1pV7NoJbmTWPX3AMffP8Kp48eXrf+TR4+ycfMWtu/ajWla429oa2mhrSX/78pQyJI2
      AYQo/FwkTBNyOiKTy/9fy+cpS7IENhXJZQe7imRb2VNsZY+uTJLJJD/+/r8u6xiEEPzge99l
      w8ZNKKpSfH7vTe3ouo7tan6vEAJN11FkmWwuh8vpJJvLocjy9fcUi6LMPR2EEKAbiKk4ZiSO
      iKYgp8F8Nq0qSG47UsiHXB0At2PFuVlXtQG888bPiEWjyz0MYtEo77z1Jk67g1y2tOjL4ZFR
      rvT18fD99wHQfaWH0bExnE4nQgiqKiuZnpmhraWZ6qqqkvqwOxyzvi6SGczhCGY4CvrtihRz
      ohuIWBoRS2P2hZECbuT6EFJNML9SrABW7RkglUrx3jtvL/cwrvPOm2+gqqWrMzQ1NuDzeACI
      xeP0Dw6STOUPral0mqnpabLZLD19/SVftLnc7lu+Fjkd4+Iw+vvdmCNTxU3+WRDRFMaFoXx7
      U/EVcSG4ag3gzMkTpJLJ5R7GdVLJJAP9fSV/vrd/gP7BIcbDExiGwb49u6mqDCHLMk6HI+8a
      FQKX01lyH9digYQQmBNR9KPdmKNT829zSiGVxTjVh3lp+PrZYblYlTfBQgj+7q++yJVLl5Z7
      KLdQVV3F1s2bytoHz0Sj+Lze60pwVqEoKg8++QyqzYbZO445sETZYh4n6uZmJE/phlsOq3IF
      SKdSDPUvvdtzIWamZzBmUXUrhmAgYPnkB/AFAqiqinFhaOkmP0Ayg36iFxFfnjuIVWkAE+Ew
      2RIPmzcTqqqivXMdTpeL9V0baWhqKqs9XdcR0sr8ldc3tWBcHEaML0M4hKajn1weI1iZf40y
      GRsZtqSdmelpZEUmk04zORFGsmDy2l3uhd+0xNjtDqqy6vJM/mvoBvqZ/vy9whKyKg0gapXr
      UwgURSEQrMDnDzA6PFR+k0gEQ5UWDM466j0hlLHldxeT1TAuDCEsujAshFVpAKnk7ZGYpVBZ
      XU02m0WWJSRZIlBRUXabmXSa9Vu2WTA6a7BJCo3mylmVxEwSc2hyyfpblRdhpmFNqPPE+Pj1
      f09PWRPKbJoGgYoQja1tDJfhFrWKTncNdlaWaK7ZH0auCSA57Yve16pcAWz28n5xNyezOF0u
      VFVFVVWcLlf+NaezZFemqtqQJIn1m7ctu1BtTUU1teoKFMs1TMz+iSW5KFuVBuAtY2JV1dTQ
      tXkLALIsU1lVRdfmLfiDQVrb22lpa6eptZW2jo6yxmaz29m2Z9+yaff7AgG6Qs2sjICE2zHH
      ZyC7+NGpq9IAQpWlHzInw+HrMfzXwpiFEGTSaTxeL6pNZbCvr+TL0VDljTgdXyDIzn33liWz
      Ugout4cdu/ahTKeWtN+iME3MscUXD1iVBlDf0Igsl/aj1dU3UFNbSzAUwuf343K7EcIkWBEi
      nUqRTqXp3NBFLlu8u06SJOobG295LVhZxa4D92OzLf5+F/JGt+f+B3GkDbDorLRYmBPRRd8G
      rcpDcKiyEp/fT7SETKmx0RHGRkdwezykU6lb0hpHhvIKEqW6QytClQQ/4EmSJImKyiq23bOf
      00feQ7MoaWY2ahoa2bR9F3aHA71n6TwtJZPKQjoH7tmjVK1gVa4Aqs3Ghk2by2ojlUxa/vRZ
      v3HjnNpBldU17Hv4Uapq6yztE/Jhzpt27GLbnn3YHQ6EYSLiK3j7cw0BIrq4AY2r0gAAduze
      s9xDuI1de++Z9/tuj4ed++9j170PWHJZZrPZaOlYx32PPklTW8eNbWFWg6x1ZZhGIxO8/Pbr
      aLrON3/2Y870dFvWtogtbnjEqtwCAbS2t9PU0sLQwMByDwWAlrY2mlpaFnyfJElU1dRSWV3D
      zFSEkf4+IhPjBcspyrKMvyJEbUMjdY3Nsya5WB1uUBWowOVwktPyGWmJtHWri0gvrnz7qjUA
      RVF4+LEn+MqX/na5hwLAw489XtTB/NrZoKKyCkPXScRjxKMzJGIx0qkE2XSUVGwYQ4tjd9jx
      VzRQ3dBFqLYVl9s7/z1FztoifKYwSWez5HSdfZu2cfSidXUPxCK7QletAQBs2rqVzvUbuNK9
      vHkB6zduZNPW0sMfFFUlUBFCleOkJ98hMfQayelehMhPZB1IjcLYeRlvsIPq5geoX/cMgapN
      s7YnNGsNYGJmipqKEFktx0wizoM79lrX+CJ7qlZlQszNTE6E+Yv/808tCY8uBZfbzb/7/G9R
      XVNbchup2BDd7/8Foz0/QpgFTl5JpqrxAF37fxt/Zdct3zIGJzCvjJU8niXFpmC7vzyHxnys
      2kPwNaqqa3juk/+m5HuBcpAVhede/GTJk18Ik6GL3+Od73yGkcvfL3zyAwiTyaF3ePd7v0DP
      yb9HmDcl4ljwuxBCkLxJ6GsqFmV8OoJuGIxPTWKYJuHpCFOxMqNMFzl5ftUbAMCO3bt59Kmn
      l7zfx558im07d5X0WWEaXDryf3P6zS+gZUufRKae4eJ7/xdnDv4RppHfT0u28oPfhifDfPvN
      n+THKgSvH3uPmXiMkclxBsNjvHfuFK++f4h4qjw35mLrCt0VBiBJEo88/gSPPfXMkvX32FPP
      8MgTT5YcNHf5+N/Qc+LvoAixqvkYuvBtzr373/NfWBBl2VRdS0Nl9fWvOxubOdF9AZ/by2R0
      ms1tnbTXN5Z/IF7kiNDVeQg2TdA0MAyQJJBlZLudR596Cq/Pyw++9100bXG8Cza7nQ8/+zz7
      7ruv5Mkf7n+Dy8f+CqvlGAbPfQN/aAPN614ARS7rgNkzMsTFwT5a6xtx2OzMJOI47HYOnT2J
      JElMxaLE00k8VyNoS2Wxk+VXxyFY1yEyCcPDEB6HaBS0XN4QIL/ntdmhogKqqhkSgu+8+iqj
      Y9aK5dY1NPD0i8/iqXGT1JMIYeJS3QTsFXhVH4q88PNGy8Z465svkE2GLR3bNVS7jwc+8S+o
      F5KQLL9UUyKdQpZk3GXIscyHsrUVuWrxahbcuQYgBGQycP4cXOmGIqXHc04nRyYjvDE8TCJX
      3sWQ7JSp3BUitC3EtD6JIW5XfgjYK2j3rWdn5T5Cjuo5V4fu97949em/eDRt/ASbG38Dc3CF
      xwOpCur+LkvOLHNxZxqArsHJk3D+LJQ5eXPAsZzG0ViMkbGxguN/JEmitrEeqVOQbUohFbhV
      lZDYGNzGQ/VP4rXd+mTTsnHe+pfnyKYWd2IqqosHn/ln1Isro1TrXEjVftQtrYvax511BhAC
      JsLw1hv5bY4F2IEDdhv71q1j5uMvcCUSYXR4iPD4ONFrOj5SPq7G5/NTU1dLU3MrVS3VvBX7
      MWOZ4aKSSgSC8zOnGEz08kzLJ2jx3kisiYy8V/TkN03BxLRGdYUNuUCXoaGnCUfepcGz15Jt
      0GIh15afg70Qd44BCAE9V+Dtt/J7fouRZ6YJvfcuoQcfhv0HQJLyEoGmiUTep3+NaG6ab/Z8
      mZlcpOT+Enqc7/Z9lY+0vEinfyMAkeFDRbdzpjuJwy5T4VexF+Eznxx6h+YdT2FctEZCxnI8
      DqSQd9G7uXPcoBfPw5s/W5TJf51cDl5/DXp7gPw2R1GUWyZ/1sjycv/Xy5r819DMHD8Y+Bbh
      dP4wHp0o3mU4HdPJaYKRcHFbwejkeaTaALiWJhGnWJSWGqQluLxc+QZw7cn/7jv5fy82ppk3
      tDkqyrw1+mPG09Z5j3JmllcGvoVu5EjHR4r+fGOtg1TawOsu7qCo5+JouThKh/X5B+UiBdxI
      NYEl6WvlG8D0VH7bs5RnddOEt96ED1zjT6THOD19zPLuJrNhTk68i1lMqMNV1rW42L/DT1VF
      ccn1QhiYRhapyo9UvTSTrSAUGWV9w5IV0ljZBqDrcPCt/KXWUpPN5I3gpsT49yfewZzFxWkF
      o5nRJa6eIiNJan6bt75hxWyF5I46JG95l2dF9bdkPZXCxQswuYRKxR9kfAyuXAZANzW6Y+cK
      /uhEf4RL7/aQSRYWhdqbuIKhLPwUH4/k6BvOe25ymsnxcwl6hzKEIzl6hzLEEjpHTseZnJ7/
      oaGodlR7/pAp2VWUzS352+FlRG4IITdYV/OsEFauFyibgZMnlnsUcPwYtLUzlOlHMws/aE6P
      RkECRS1sUuXMLHGHA88CyVQuh8xoOAuNTlRFYmOHi/M9KUIBF6MTOXRD4HUrjEdy826LnN56
      FPVGtpjkdaJsa8U43b8sahFSbRB5XQMAuVSWxGSM5FScTCyFntUwTRNFVbC7HbgCHrzVATwV
      XmS1vEuylWsAvb2wEurWJuLQ18tEYHzh995E6/Ym0vEMY1cmaN7cUNBncoEaPNPzH4S9nht/
      cE0XnL2cYudGL5IESJDNmYQCKuOR+VeAyoZ9t3wtSRJS0Avb2jDODVieNTYfUn2IVMDN6Bun
      CV8aJjY+g75AJpgkSdg9Dqo666ld30DdpmZsJQTOrUwDEAIuXVjuUdzgSjexrcU9FRPTSaaG
      Zmjb2VzwZ1wNu5H6z1zP9PogQggu96dJZwUXe1NUBFSEgMGxDLohSGdMOpudDI3naG2YT0pE
      orbtsVm/Iwc9SLs6Mc4PImKLqxwhgEnDoO/ts0z2jhelCi2EIJvIMHyyl+GTvdg9Thq2trL+
      oS24Ap6Cz1MrMxQiGoVv/8vSen7mQ1X54X4bZ7OLm1q5pWInoVOvEBl+b1H78YbWc//Hv4as
      zP3EFKaJ2R/OxwtZLFcuhCAaT3Pu0jAz09YoeV9DVhXa93fR9ej2glaElbkCjI2WPfk1wyCj
      aficTqaTSSquVlgsCV3HMZmERdaRtctO1u3+d0SGD2N9ZbobdO78NWTFjjBS6PHz6LGzmJkh
      zGwEYaRAkpFUL7KjBqWxCWmmFilRgSTKPyQbNoXLPWP0XBpelDoApm5w5e1zjJ4bYPuz+6nd
      0Djv+1emAUTKDwY72t9PKptja2MDL588xa8++EBZ7flj+rwGMHJpnFg4zsYH1qFldU7+6CzN
      WxpIxzNoWR1flZfI4DTekJvW7bOXWgrYK6io2kXD+o8y0v1yWeOdi8qme6lp3EVm6OtoU4cQ
      xixPYAEil8XIRTA4D7KE5A2gartRza2QK9Jdq8pIQS8Zh43jr51gagmiUFPTCd77x5/S9egO
      Njy8dc5b5ZVnAELAdPmiqDuamjjaP0CN309LqHzXWn3OC8xdI6BhQy2JSD79TwiBO+AiNplg
      angGd8CF3WlDy2rzPvXq3I1Ikszm+/4z0YnTJGf6yh73zThcIbo2PUiq+38Do5j9vUDIM2iO
      n2LYz+Co+ASyaMury6VyeemSazWEZRlsCpLLjuR25m91A24SM0kO/cNrpCze8sw7alNw4dUT
      pKNJtn9036weo5VpANnyIxTf7+une3ycOr+fKxMTdITDdNbUlNxenRTCpURIG7fnuAohCPdO
      Eu6dpHFTHcIUOL1O0vE0viovEhCPJPFVesmmZ/dueFQfNa56AGwOP3uf/iKHv//rpOPWBKup
      qp1N69cjzfysrHbMXJh0+P/FUfcxHBs/WtBnEpMx3v3Sq6QXWeZwLvqPdGPqBjtfuO82cYSV
      dwg2TfjmN/Lux5VEMMgbB/y8P3l79XkhBFpWxzRMktMpgrV+DN1AteefL7pmYHOo5NIaNqc6
      q0LFlopdPN388VteS8WGOPbj3yI+Vd7h2+nys7GzA4/Ft7326sdxNH5q3uKBmViKg//fj0hG
      lv/vuf7hrWx+cvctr63Mm+CVWLVBkthddQC7fLt7UZIk7E4bTo+DyqYKFJuC3WVHVmRkRcbu
      zFeFcbjtc8qztPvW3/aa29/E/o99idYtn5nXYzP3kBUa1j3Dzp0PWT75AXITr5Ib//6cSUSm
      YXLiu4dWxOQH6H7zLCNnbw1yVP7wD//wD61o/NovQWg6uUiM3FSc3FQMI5UBUyBffRoW5J/t
      vgTp4i/BLo2PMx6LUe3zEc9k+NmFi6RzGn2TES6MjlHr9/PTCxfwOhx4i81hDVbg2LgdGZn+
      xJWixzYfbd51PFD32Ky/G0V1UN3yILXtj2EaORIzvYgF4pFkxU5168Nse+gL1IUciPgpS8d7
      M0byMqp3HbKj+rbv9R66QM+7K+g+B5i8MkbTjvbrLtKyzgBCCHKTURLdQyQvD5MeDKNNzW7t
      kqrgrK/E1VqLr6sFz7oGZPssV/WSBF4flFCULuhycX40r3jmdTioDfiJJBNEU2lMIfjx2XN4
      HA4Ms4Sr/qtu1N3V9zKSGuByzJo/rN8W5Mnm5xasQex117Cp7Wk6HXVEel8jmQqTUmRynkqw
      e1EdXjyBdoI126hs3I/dGcRI9ZG8+Kol45wTYZAe+Ee8G/8bknLjoZKaSXD+J8cXt+8SyKWy
      nP3hUfZ86kEkSSrNAExNJ3FxkMhbp0j1jiIKiB0RukF6MEx6MMzUwdMoXhf+7R1U3r8NZ90H
      vDTBijnj8ecj4L5R7lMzDBoCAfonIwghCLpdTMQT7Gtv40hfH43FljwN5t+vSApPN7/Ad/u+
      ylCyr+gx3oxX9fFc22fw2eYORxZaGu3UN8id+CoiPgrCJAgEIe+v11VsOz6Mfce/QbLfyKAS
      wiQz8i1g8eN6RC5MbuptHNWPXe1bcPG1k+hLGE5RDCNn+uk4sJFQa01xWyBhCpKXhxn8p58Q
      efNk/mlf4hla5HQygxNMHz5PbiqGq6UGxXF1n6ob+SSYYtoTgvf7+plOJomm0jhtdk4PD9NV
      V4fX6cQwBY9s7OJwbx+7WlpwF1tJcucuuFrgTpVVNga3ktDiTGaKixG6RpWjkScaPoNbqcwH
      zUm3bw/NZITMK/8Z7eTXIRvj9ssxAbkExsAhjLHTKC0HrhuBmR4kO/LdWT6zOJiZMezVjyJJ
      EslInFMvH17SgtdFISCXzNC4va1wL5CRyTHyrTeJHluccADF46Tu2fup2NuVT038+lcWN/2x
      GFwu+OSn4QPVXYQQ9MQv8uboj5nKFna5Y5M8BNiPW2wio+WfHw5Voj3kYmeDB/vV6FGhpUm/
      /FsY/bd7neZCadyD6/kvItk9ZIa/SS78w8J/Rgtwr/9PqN4uTn//CD3vnF/SvotFkiUe+Q8f
      K2wLlBmJMPDlH5GbKL7mVqEYyQzDX3uNVO8o9c8/gNzUDH29i9ZfUbS0Xp/8U6kIp4aPcyXS
      zWh0mJyRw213kxQJTJtOVbAKSRHXtYEkJNyqhxpXPY2uLkYjTUTTCjdfQ2V0wflwismkxiOd
      Adx2Be3EV4ua/ADG8FFy738J+73/Hj1e2gR87+Q4x89N8vPPbsDrKS7LTI+eBHsno+dWRlGS
      +RCmYORM38IGkLgyzODf/yjvzVkCpg+dQ4slaX5kM0pfH0u1hM+JJCE2dDEWHealM9/mUP9B
      svrcSS4jI2H2tR7g6S0fJeAM4lAc2BUHimTjjStRovNUPJlIahweiPNgk0zuxFdLGq526huo
      Wz+KmS1N/nzP1mpymln05AcwUgMkhiZJzyzPhVexjJzun9sAhBCkekcZ+NIrmOnFq1w4G4lz
      /QzqBi21lchTy6teZjQ28tPI+3zt2JfJ6As/BLJ6hreu/IwTQ0f51QO/yT0tB5AkiYmExlB0
      4eywwWiWcOYM3kRp0ogiPYXW+yqYpdVDuNAzw6bO0vR4zFyE8NVKmncC8Yno3Bdh2nScgX/4
      0ZJP/mskLg0x0ptc1ue/KUt8zTzDlw7/TUGT/2bi2Th//uaf8INzLwEwEssWFFVsChgeGWKu
      lS+WNnj1QoL3+uaO5TFGjxY11pvZuj5EVUWJOp9mhkhf8coWy8msBmBqOoP/9BOMxPJmZM0M
      xZhavGPHvAgEryh9/CD8NqVuw0xh8rVjX+ZQ39ukcoW7I1PG3HcCPqdMa8iGXZn7QlFkYnN+
      bzExdJ142BrFvms4fS5adnciKzJ1m5rx1QYtbX/W3/TkT4+T7i/NvWc142M6WbH0MXt99gzf
      EOV7Mkxh8LeH/pKUVniEq1Oe21iGZ3T6Ijk6quZ248rOwqNfh8eTTF/dmqWzOgffHyUyk+H9
      02HePx1mcjrNwaOjZHMLq2FoaYGhWXvvkImnSUdTOLwuVIeKJ2RtUsZtBpCdmGHyjRWQjH4V
      0xCMpb0I7yJno9yE8Pv5RmAEDWskUJK5BO/1vVRQiJME1FffHlZwjaBbpjFom3dFUep2g1TY
      Q6N/OM7oRP7Qqmkm27pCnDg/yelLU1SFXBw/N0l1yMWl3oWXYt1wYprWhpe5gx4C9fn4KmEK
      y7MEbxtt+EdHMBe5NGWxxHsnSG/aDf4lEHAKBBjYv5lT0xctbfZi+CAu28Ix+LU+G/Vd+5Gc
      sy/1XofC5non9YE5vDR2L7aOp5DUwh4YHc3+fPgJecfHkdMTPLi3nl96oYvzl6ex2xRGwkls
      hahbKA2WO+1SM0kuHzxHYjLG8Kk+xi4MWdr+LT9VLhIldsraQC+rmDh8GfHMR6B2EaX8Ghrh
      o89xJHIGYfFfUjOy2OWL+J1zy3gEnAoHWv0o7hC2rZ8oqR/b5meRfPWovo0LvlcIwelLEfqH
      4xw/N8ngaBJJgoHRBG8eGcXvs1NT6ULXTUIFHIxtwa0ljXk5uWWdnD58oaC4nuUgcWkQLWNg
      f/oZOHUy/59hkUqbzZ4Pddi8BRSF7glrn/7XGIt383N7nuDESILBmSw5I29kigSNbp17ag08
      xjSS7sW+5xfRBw9hjhcumCtXrse+/3P5IK/gPWhT7877fkmSeOL+vGpFTjOw2xS2kj8/rGu5
      sdoW5BaVHdgqtgPll1+VJAlPpY/EZP4w7/C5cPndREemrr/ur6sgl8qSKVO54roBCMNcsU9/
      yAfTxc72UvXQDti1B9o74cSxvJJzqftCSYL2Dti95/r2SgjBWKxwV96Btgc4P3aGaGbhPfJY
      bBSvQ+H+Nj8pzSQai2KOHMWX6MEXDyOPXd16SgqSpwbX5o+QziYwZxYODJRDnTg/8qfI7koA
      VN8mZEddwRdi9jKrsNhCB5A8fmSbgqmV92CyuR346yquG0DN+gbiYzPXX88k0iiqgr8maJ0B
      5CajZMPL5HMskPj5/rwBAASD8MijsGdvXkKxvx+iBY4/WAFt7bBhQz70+iYM0yCtF+b+rfc3
      ksjGCqr9BZDW8n8sCYFn/DCe3tfAmOWeRRiQGEUG3C07ybr8aJFeyM2ST2v3YNv4Uez3/ub1
      yQ8gyTbsdR8h0/+3BY2tLGQnjppnQHWi2lRyZRpALplBu3b/JEnoGQ1JkTENAy2dRVYUtKyG
      bEHppOt/uWSPtRcYssOWP0zLErJNteRgnRmawMxpt+YR+Pywdx/s3guJRL6CzMwMJBM3guns
      dnC7IVABNdXg8c5ZLFqRFdQCJ7QqK1S6q9AMnakCKrvYFBuYBlx6GUYLU5mWZAVHzTrs7Q+g
      u6oxJ7sR2RiSw4dc1YXacgAp0DhrPoGtYh9a5CBGYnG2dNdw1H0M2VEFgK8mSKSvPBe6K+jB
      4XXiqwlg6ibpWBLVbsPucuTdofYETr8bLVXabffNXP9LZ8aKT0CZs9GAB++6JoD/16AAAB9c
      SURBVGaOXsTdWofichA/11d2u0Y6Ry4Sw1lfefs3ZRn8/vx/NyGEAF1HGEZ+qyTLSKY5p0yG
      JElUeqqZSS/stx+cGWAkOlzwgbnaUw1XflTw5L95TFJqHHtlJ3zov1732iz8OQVXyy+TvPS/
      I3RrL6iuofi2Yq++oTIXaq0u2wDSM0mGZnqRZCm/u5268fu9piphlbrELVsgq9CjSbRYEjXg
      yU9Wq8rdC0Fuag4DuAkjkSBz4iTZCxfI9fVhTM9gptNgGEiqiuz1oNbWYV/XiXPzJhybN99i
      EOurNnBlsrCw79kqQs5FOwKGylB9G3wXKjqgckPBH5EdVbjaP0fqyp+DaW1Ao+xqwtX2q0g3
      rZi1GxrpfuOMJe0vdj6BrzZ4wwD0mLURfNp0HD2aZOrds9grravzqsdn35+bqRSpQ++ROXWa
      9LFjiDmqR4psFjOZRB8Pkzl1iti3v4McCOB5+CEc69fh2rOH+zoe4tVLP0QvoWDFXDgkmX1a
      DJRy9q0CLv8Qgu1QgJT6NVTvBtydv0V25FsYye4y+r+GjK1iH47GTyF/4L4h2FiJrzpAfGJx
      Vhwrad7ZccMATIvT166vKFfzhq3CzNw6sYUQpN49xMw/fQWjhDxiADMaJf7Sy8QB5/ZttPzb
      X2BH4x6ODlqn0flwRQs1VtS8Sk1C5BLUbFnwrUIIdNNEN01wtOLo/G308A/JhX9UcrSoZK/C
      2fgp1MDOWc8dik2l/UAXp14+XFL7S4XN5aB17/obBrAUBcmsQLpJ3cvMZJj+8j+S/OnrlrWf
      OXWa8S/8IR974XHOKCfIGuUftPzOAM+37EOKWKSQEBuc1QCEECSyWY4M9nNubJSeyUkiqSSa
      YSAhYVcVqjxeOvwfYovtHJtcwzjkwrZwkhrAXv0o9qpHkNT5dVabdnVy8fVTZBMrtwRr6551
      2N2OGwYgl6CtfjOqz427vY7YqXyFRd/mVoxUFj2ZwVFbQXogjKejnmx4msxI6RUWlav6NkY8
      weSf/RnZs4VXbSkUkUzh/KeXeXZXJf9SO1KWTpEq2/j1e/89wcj8gXVCCA6eGWRyJsVz93fN
      X/M3eXvVnIHpKb554jhv914hPU9JqfF4nLNj8DKV+FU/99dkeL7DRYU8hdBmrorjKkiKG9le
      heJpR/VvRfF2IcmFzRGbw8a6B7dy9pX3C3r/UmNz2em4L39Tft0AbCEf6YHST+96PIVx0/ZE
      mALZacemKsTP9uHpqMfUDRTXfLr1C2MLejEzGSb+5E/IXbJiPzsHQrD72AzJ7UF+2BTFLCE0
      wq7Y+aX9n2N30z0QPjnveyVJoq7CQ//YzMJOnpvuDlK5HP/0/mFePnu6aLmXmG7jlREbr0/Y
      +IW9z/PRzVtQr+0EJIl8HbHSrL/9QBcDR7stD4+2gg0Pb8MVyK9i1/c9jpry4qxluw3V7US2
      25BUhdxUDEmRQZJw1ocQukF2fKosA5AUGVvAy9Rf/83iTv5r/QEPntb4rLETj724os0V7kp+
      +5H/wsOdeaUE1Pl/btMUSJKE066SXegi6eoBuDcS4Xe++y2+e/pkaVpHV8loGn/z7jv8wSs/
      YCaTQ5JVJEkpq2ifoirseO4AcoElopaKUGs17QduxEldl0UxsxrR46VPKtlpz19S2RRkm4rI
      6WgzCbLj00g2hezYFLLDTjY8jdBLuym0h3y4lDjxl14qeZzFIgF141me+PTvojttjMVG0c25
      txg+h5/Hu57mPz74P9FS0XpjEsWHIDa/0G0yo9FSGyTkW6BKYmUXZ3MevvDKvzJuoYbqeDzO
      kYF+9re24XGUt1IDuINehCmI9K6M3BKby8GBX3gU502/3+uyKEYqw4U/+jJihYoZAfjW1aK8
      /0PM5NInXTt37qTm93+PRDbB2dGTXJ7sZiIxTs7I4VAd1Prq6arZxOa6bThme9pHuuHUP1oy
      lr6mD/N7b58hkS3/gD4bzcEK/vhjz1Nxk9BYqZiGyfFvv83QieVV+JAVmX0//6HbCmZcNwAh
      BANfeoX42b7lGF9BeMUY8sjlZeu/5n/+rzi3lRjya+rw3p9DAUFz85GS3fzH4XpG44urs7+3
      uYUvPP0RFAu8g4ZmcPirPyN8yRqp92KRVYVdL9yXF8L6wLbu+k8nSRKBXbcrFK8UJDOHNNa3
      rGOI/ev3EaXutWUVWh8qq38h4EvjjkWf/ADvDw7ww/PWeNgUm8K+zz5M0452S9orBtVpY88n
      H5h18sMHEmL82zpQA2XU0lpEnFISycKb2VLInD6NESndhUvdrqLCGD7IFSr54czSVXT/8pFD
      REtQ6Z4Nxaay68X72fj4TiSrQmMWwFPp495fepyGra1zHuhvMQBZVah+bPesb1xOFI8Tp7QC
      NOZNk9ShMm6HZQU2vwiBluI/G2jhm9lWjCXUiYlns3z/nDVxPQCyLNP1oe3c/2tP4atevPRW
      SZFpvWc9D37uGULNc+dXwyw5wRX7NuGoX9py9QsR2rcBIzxaegOyjK29DQBbczNqQ2GFq2cj
      c654pQjdNEjlciRzWVJCRt/281C/GxaQRAfy72nYS7jz4xweWXpvyqsXL5C1QKNVCIFpmJi6
      Sai5iof/w0fZ8vQeHN4SNYhmQ4LKthru++Un2PHcARyehdu+LfBdtqk0fPwh+v76pRWRHulq
      qcHfGmRintvNhZAcDmy1tWj9A8hXFZ71sbF8OaYi0fr6ELkc0hzq0kIIcobBwHSE3qkIY/Eo
      0XSanGEgEMiShE1W8DtraPDcR3vyIi1iCvsHFSgUO4TWQ/O94G/m8LkzZEqciKoso8pySZ8f
      i8fon55iQ3Xh9dVMwyQXz5CaiJOeSpKLZ9BSufz5SQCShGyTsbnsbH5wJ5HhCSZ6R0knUiUl
      1at2ldqNzbTuXUdle+2cVXhm/exsL3o6G6j60C4mXi1dYcwKFJeDxk8/in52/lvUhRDpNGYi
      mdf5NK5OghIveYxEAjOZQpnFABLZDO8N9HJ2bITkHNGoAFl0ErksI8D7rMMtmewPObinthJF
      sYHdB95aUG88wc6Mlr4C7mtpQwCnRobmHddcHBscKMgAsrE001cmiA9NkUss4KJNQy6WjxWy
      o9LY1kwul0PTNTRDIzmTmFNjVLEp+GqCBJsqqe6sp7KttqCn/WzMmfpU89Q9ZMPT12N7lhrJ
      ptD42cdw1oaIvlue0pkcCCD7vKi1NXntQcMoPaFe0zAzaRRu3JzrhsH7Q/0c7LmMZhbfbkrI
      vB7ROJaM8sSGzawP3j7ZesuonSwQOFVbPiq0BC5P3h57dL1tIchMJZk4O0J8uIzytgLsNjt2
      mx1Jkencu4lgZzWGrqNnNEzTRLEp2FyO6xdZ5dxUX2NOA5BkmabPPMagZhA/X3y1lnKQFJmG
      Fx7Ct6kVYM7Y/kIxo1FS7x6yYmgAiOyN8cykU/zruVMMzpRf2ziaSfOt08fY2dDE4+s3oV7N
      HdAMg3AZN75CQFbXsSlKSfv5cHz2vvV0jvFTQ0T7Ji1NXhGGSeTCKNM9Yaq3NBJaX4usLE5I
      xbzJr7LdRvMvPMnQP/+U2MmlUYyQbCpNn3kU//bO6xYuqUsvjTgfkt2OEIKJZIJvnjxKNGOd
      hqoQguPDg0QzGZ7dsgOXzUZO1zHLUEQ71F/eLWwyd+t2RghBaiLO0LtX0FOLJ55s5gzGjw+Q
      GJmhYV87disPzFdZ0Kxkh43mn3uC6if3WpfaOAf2qgDt/8NzBHasu2V5u3ZwLQbJ7cbz0IPX
      v7a1teHadw9qfT2uvXtQqqpwbt+Gc/u24hpWFCSnk+l0in8+ccTSyX8zPZEJvnfmBLphLHeF
      BG6OBxdCMHVpnL6fXljUyX8zyfEYvT85R3LCeld4QeuKpMjUPHkP7b/5PM6GKssHIakKofu3
      0vH5T+Burb3t+2rt7a8thEilMKZvbEuMmWlkVz62RRgGit+PmUxhJlNgKzy9UPH70Rw2vnXq
      2KLF4lyjd2qSH148i9tuRyliv9sQCBB05ffJXruDnY1NhNweFEmiq6YWn8PBjsamG6HPC+C5
      WrtNCEH49BBjx/ot1+hcCD2j0f/6BRKj1kr3FLy3kCQJT3s9Hf/jC0SPdzPx+nFyZeoISaqC
      d2MLNY/vwdlUPeehxt7SnC9RVMT+VbLZkL0+JLcbNA3JZkefnEB2u9BHRlHr62882Io4EKsN
      9bw+0MtkcvHDEQBOjw7TWVlNtddX8DnDqdpwKCoz6TRpXWMiEafe76ch4Mdtc+BQVXomJ2gL
      Vc57wL1GvS+Q3/KdHWby7PLp/wvDZOCtblof7sJTa02eedGba9mmUrFvE4FdG4if6yV6/DKJ
      S4OF6/5IErYKH4EdHQT3bsRRW7HgaV4JBrE1NaH19RU+UEUhNzCA7HIhVQQx4wn0cBgjMoVa
      U03m9Gnka8Wyi/COjNfVcnp0aYO6Xuu+QH0gULABRFJJKq6tdkKgygpuux2vw0HI7aEvEsG4
      mn9QCJ1V1cQGppg4vTzBbDcjDJPBg920P7EZh3+BsPECKPl0KdsUAjvWEdixDiObIz0QJjM8
      QWZ8Gm0mgZnJ5bPCbCqK24m9OoCztgJXax2O6kDROcjue/YSLcIARCaDPjz7H0wfy9+oFhtW
      LYAj1cGyDqSlEM9mKOaGqD1UiU1RcKgqk8kEIbeHwelpxuIx6nx+MrrGpto6ThVoyF2eCkYO
      r5CChYCR0xl65wrtj29CVstThyu4TGqx3NysFf5abWyMsd/7/bJdouUQqa/lRx95AmHBz1Ms
      umHyXl9/UcYnUb5aeb3Xz38K7cCYWd5qQbNRtame2p0lxFXdxKLlq0mSdP0/K7DV1eHau8eS
      tkqlb9f2ZZn8AKoi0xAoLoDMiifbLqViRU5+gMilMTIz5YnjrqyEzQUIvPjinDE4i42to52x
      jray2jBNk3IW3G0NDZYkqBSKR7GxT5RWMXIpEIZg4sxwWb/TO8oAbA31+J97dsn7lew2lJ//
      LDPZ0nVuMskk595+l7MH3ym5DadN5cObFhbEsopnQx14Sj8mLgmxwSmysdJXqDvKAAD8z34M
      x8auJe0z8KlPEa8pPBpyNiRZRgKSM6XLhMQyGT69ey9NwcV/Ku9rbmW/ff5Y+pXCdHdpNZXh
      DjQAyWaj6rc+j625aUn68z7+GL5nni77xtfmcOD0eqlsLD0XQTcNQPBfn3gKv9P6sIBrtIcq
      +dy2fWjxlavsdjPRgUjJRTnuOAOA/L1A1e/8Dmpj48JvLgPvY49S8Uu/iKQo5IzykkJkWaZz
      1w7W7d5ZchumEGiGQVuokj946sMEFsEIWitC/LenP4w0eWdMfgAjq5OaLC1M4o40AABbXS21
      X/gDnDt2WN+4qhL45ItU/OqvXA/Ek8rRR7SQa161LXX1/B/PvUB7aH6p+GLY09zCH3/seWq8
      PpLjy1Nsu1QSY6VtLe9YA4B8XE717/0uwc9+BslV/q0g5FMma/7L7+N/4eO3XNY5ioxIFUIw
      2tOLcTV8Iz41xZUTJ9GyWYYvXWZqdIzI8Ah9Z84WrDShSBK2m+TVm4MV/Onzn+DFHbuKHt/N
      BFwufv3e+/nC0x8h4HJh5HRyc8jQl0MyncQwDIYnRglPTZTlvfkg6UhpWlF3tAEASIqC/9mP
      Uf/f/xjv448jlahoplRUEPy5z1L7R/8Lzi2bb7u/KFYkytA0pkZG0a9e3Kk2O75QiP6z5wj3
      DwDg8vkQpkkmVdhksykKHvutP5/LZuNXDtzHn338kzy1cTOeItzEQZeLz+zeyxdf/DQf377z
      enCcnsph6tamw07Fpnnl3VcRgGEYHL1gbTH2XCJTkmTNyvZxFYFaU03o136FwCc+TvLg26SP
      Hyd3+cq8N8eyz4dz+zbc+/fj3LkDeZ7JU+UpThtUtdvxVd4QF0hGo2RTKQJVVfgqKpgcHMId
      DOAJBnF5C5OiCbjct6wAN9MaCvH5hz/EL+8/wInhIc6OjtITmWQimSB99XfgdTio9fnpqqll
      a30DW+rqcc4SCZtdhMNvyF9BY3U9qqLgdDjY0LLOsktSAFMzMHIGqrO4Z/qqMYBrKBUV+D/2
      UXwf/QjoOtrQMPpEGDOeQOg6ksuJEghgq6tHqa4qOCbJbbNT4/UVnJmVSaaITUwiAYpqI5dJ
      o+c0QnV1jFy5gr+6iujEBFmbjVBdHap94ZDs1oqF1Tr8ThcPda7noc71CJGvXnZtqyFJ+ZPM
      QhPPyFqvvzQ+FaZvdIDG6gam49NsX2dtUW1TNzE0A9VZeGg7LGIs0GrkYE83b/UWJ80ohMjn
      s5ZVGikf1/PZ3ftpKcAIymXywijjxwcWvR+r6XxmG85gcVvVO/4MsJRsqq1HLnLZliSp7MkP
      UOX10RiYW8JemCaGrmNoGrqWQ9c0DEO39KC50illS7XqtkCLSaXHy7qqGi5NLL1A1b7mtlvi
      gExDZ2Kgh/H+biYH+4hFxknFZtBzWcyrZWDtThdufwW+UDXVLR3UtW+gsrEVWZ7fIBW7NdMi
      p+U4fuk0+7fkgxiPXTzJTDzKPZt3c67nAvds3s3J7jNIEuxYv628M4EEkrJmAIvOw50b6J2a
      RCtVVqUEarw+ttQ1IIRgemyIC+/9jP4zR0nH5/F9G5DWcqTjUSLDffSdPgKAJxiibds9rN9z
      P6H65lk/Wuw+ei5yukY2d+NAvWvDdt47my+blDM0BIJN7V28d+ZI2X3JilJSbsCaARRJlcfL
      fW2dvHGlsDrC5aLIMk91bWai/zInX3uJkSsXECVoD10jOTPF2bd+xPl3XqN50w52Pf4cFXVN
      tzx97d7yi2MAeF0ebOoNY4pEpwgFQvjcXmyKDQQcu3CCXV07yvYIKQ61pJVrzQBKYH9LO4Mz
      U/SUIVZVcF91DfT+5DtcPvZO6dLss2AaOv1njjJ4/gQb7nmIPU+/iONqGqXqsqM41LK9QeNT
      E6QyaboHr2CaJkFfgM6GNiamJ0mmk/SM9GGYBpeHeti1YXtZRuAIuEpSnV7zApVIRtP46vHD
      jMcXL2SgLhXHdfo9UtHS6h8Xgy9UzcOf+Rw1LZ0A9P30/B0VDlG7o5mqzcUHGq4ZwE2Yhk4u
      GScbmyGXjKNn0xha/hJJkmVUuwOb24vDG8DhD5KTFL5z+jgDMxZPUCHwDl7BfekEkoVP/YVQ
      VBv3vfBvWbf7fiIXRhk/MbhkfZdLx1NbcYWKr21x12+BTEMnNTVBfHSA5MQoerawsARJUXH6
      gjxaVccxReZ0ZNKSFES7rFA9dAXtwrElD78zdI2D3/wSei5Hx9Z7GT85aE1e5SJj9zlxBEqL
      BbtrDUCYBtHhPqZ6LpBLFr/UC0MnPTNJemaSdYpCwObipFCIlTFtOyurqB3p48qZw8sWeypM
      k0MvfQVJknFX15AKr4DCJAsQbK8qWTv0rtsCCSFIhEcInz+OlrL2j2sCEy4//W4/o8lkQQoO
      EtAcDHGgrQNldIDXv/KXZXl5rEKWFe59+lfQR8q/xFtMJEVmw3M7UR2luW7vKgMwdY3x88eJ
      DvUsqrSf6nTj3biLcWTGYlEiqSQpLYdm6NjkfERnhdtNY6CC1ooQXoeTRCTMS//PH5FLL30J
      2LlweQNs7foEsrE8QgSFULmxjtqdLSV7kO6aLZCWTjJ87CCZJfCo6JkU0VPv0rJ5D9u7bg+t
      no2Lh99YUZMfIJ2I0jd4kPb6R5AKKee0xChOG1Ub68tyn668n2oRyCai9B96bUkm/zWEaTJ+
      5giRKwuXGo1PTXDundeWYFTFMxHuJqmVnnS+mNTtbEZ1lbc6rXoD0NJJho68gb5MT9fJS6fm
      NQIhBCde/d51d+vKQzA8cQSbx5rwCKsItFURaCtfqXxVG4CpawwfO4i2zFuLiUuniI8Pzfq9
      xPQkPScPL/GIimNmYhiqMsjqypguzgo39Xvmrv1bDCvjJ1oEhBCEL5xY0m3PPINh9NR75FK3
      S6pfOvIWhl56Bcylov/SEZofWL/sRmDzOGh5qMuyiNVVawDJyVFmBpemrFMhmFqO8TNHbonn
      MXT9epTmSmf40hkkt0nT/ctnBA6/i7YPbcTmts4rtSoNwDR0wuePL3kVk4VITo4RH78RXjA9
      NkhsculzC0rBNHRGus/hawjSavEkLARPrZ/WRzdi91mrhbQqDSA2MkAusTIDuSa7z16/6Bq+
      dPaOytga7j4DgLvKR8dTW/E2zJ2hZhWSLFG9tZGWh7uwlenxmY1VZwBCmAW5HpeLXCJKfDxf
      mCIyYn35WU8wL5TlragiWFu6DONsTA71YV5NBFKdNloe2kDTvZ2Lthq4qry0P76Zmm1Ni1Ym
      ddUZQCoStjzEwWpmBvJnk5lw6dXfZ0NRbTRu2IIky4Tqm/FWFK56UQjxqUn0m9y1kiQRaKui
      88Pbqd3ZYtn2xFXlpfmB9bQ/thlXZXFyNMWy6m6Co8Mrp5TPXKQiY2STcZIWe6gMXSM2GUYi
      X5hEtTuQZQXDopBqYRqkYtPYnbdGXio2hapN9YQ21JIKx4kOREiORdEKLaMqSTj8Trz1QQKt
      lTgr3JZqBs3HqjIA0zRIRVbmreUHiQ7f2E5Yhc3pwhMMEaxrJJfNoKgqpsWBddnU3HcqsiLj
      rQ/grQ9gGia5RIbsTIpsLIOWymFqBkIIZEVGsavY3HYcQTfOgAvVZS8po6tcVpUBaMkEeqa8
      kjlLRTw8AsLaZBctk+bKsdILcBTUR4FFQmRFxhlw4wwUp9Oz1KwqA8jECisjWii9Q6OMT0Zo
      a6znfE8/zfU1rGuxpi5BNjZ9J+Sa3IZsgcbRSmJVHYK1pLWH3+b6GkwhCE/P0FhbTc+gdUWi
      TUO35J5CkhXatu1FVvLPMl+omob1W3D5gzRt3E6wtoGqpnaaN263ZPKqdmsUI1YKq8sACkxn
      LJScppHKZGhrqCOVzuDzWLecK7KMolixAAsyifh1b091SyeyLBOoqiU2MUagup6p0YG8WJYF
      Ic0e/8otmlcKq8oATItjaianZqitDGGYJi6ng/3bN1vWtiRJeAPlTyZhmrccdLVsmqmxIXQt
      h8PtRZgmte0bGO+7XHbMkd3pxlGkSvZKZ1UZgNWb6paGOrZt6KTC76OrvQXZ4hKlwdrySzzZ
      nC5Um51gTT1VTW2MdJ/D469genQQWVEYungaPZejurmt7C1QoKYeRV1ZYdHlsqoOwZIFe1wh
      BOlsFvfV+luJVArTFPg8bhKpNF63i3Qmi8vpKNtX3bB+C71njpbVhpZJM3L51pvvicEeAMb7
      uvNfD1gTFFjd3L5k/vmlYlWtAFYc0HqHRjl49BQAuZzGO8fPMBNPEEum+MYrr5FIpfneT99C
      L9OHL8kKDeu3oNpWbr7tB2nZtGu5h2A5q2oFUF3FCyN9kI7mBsYmIwBMx+PkNI3zV/qIJZPY
      bCrpTNYSV6jqcOKtqKK6pZPRK+fLbm+xcXkD1HZsWO5hWM6qWgEcvkDZbVzsHaB3eJTB0XFs
      qopNVfG4XTz/2ENsW9+JoshcGRzmUl95qmkOXwAkiQ33PFj2mJeCdXvus8hrtbJYVbIopq7R
      /dp3EBaEGMzE4vi9HssPvteoWr+NqvVb0XM5vvNnf0B8BYdwKDYbz3/+fyVQXbfcQ7GcVbUC
      SIqKK1h+ojRA0O9btMkP4KmuB/LF9LY99Myi9WMFHTsOrMrJD6vNACQJX33Lcg9jQWxuL86b
      LpQ23PMgFXXWhFhYjd3lYfcTzy/3MBaNVWUAAL7aJqQVvlf1N7TdEqcvKwpbH3xqGUc0N3uf
      /gSe4OIX5lsuVp0BqA4ngca25R7GnMiKSrC547bXO3YeoL5j4zKMaG5aNu9iwz0PLfcwFpVV
      ZwAAofaNSAsUglsuAk0d2GZx1yqqykOf/g28IWvOMOUSrG3ggRd/edVFf36QVWkAdo+PiraV
      57NWHE4q180dT+QJVPDkL/02Tq9/CUc1yziClTz+i5/H6fEt6ziWglVpAACV67Zg9yzvRPog
      NRt3oTrmL+QQrG3g6V/7XbxXk9uXmkBNPU//2u/gr6xZlv6XmlVrAIpqo377/hWzFfI3tOFv
      aC3ovaH6Zp7+jd+jepazwmJS19HFM7/+ewSuumjvBlbVRdhszAz1MHbqvWUdgzNYSfO+DxUd
      Sanlshz/yXc5e/DHllaI/CCyorLlwSfZ/eTHV+Vt73ysegMQQjDdf4nwueMsR8Erhy9A0z2P
      YHOWlkwjhCA8cJnDL3/9epSndUg0rN/E3qc/SWWjNWKzdxqr3gAgP4lm+rsJXzi+qE/SD+Kq
      qKZh533YXOVnkpmGTv/Z41w49DpjvRfL+jlkRaWuo4ttDz9DQ+cmS7WD7jTuCgOAvBEkJ0YY
      PXloSbT4/Y1t1G3Zi2xxAokQgpnwCL0nDzN44STTY8P5/OIFUFQbFfXNNG/cTvv2ewhUl1dZ
      ZbVw1xjANbR0krGz75MMW5fgfjOKzUHN5l0EGtsXpf2bEUKQScSYGhsiHgmTmImgZdIYho6i
      2rA73XiDlfiragnW1OOyIFp2tXHXGQBcXQ3CI0xePmNZ/QBZUQm2rKOyczPKKlNOWM3clQZw
      DWGa1+sIJCfHEQVsJW5Fwu7x4m9oI9DcgepwrW0r7jDuagO4GT2bITUVJhUZJxOdIpeMX5Uu
      vPHrkSQZxeHA6avAGazEW12Pwxe8qw+RdzprBjAHQghMXbshtSLJKDb7qo+NudtYM4A17mrW
      1u417mrWDGCNu5o1A1jjrmbNANa4q1kzgDXuatYMYI27mv8f41qse9LXGSsAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Player Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PowerPlay Analysis:How many runs from the total score have come from the powerplay? ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Runs Scored by batsman' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='123'>
      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
    </thumbnail>
    <thumbnail height='107' name='Strike Rate For Top 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Strike Rate Of Batsmen Against Teams' width='192'>
      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
      9R1n/33X97v9Xb4WRwqAL5gg7Mlj+xKMBDUWsxWuXJlFVR81oWkaygGD6b+Ioii7BoKrPdaz
      t77nQfX91cPueqXP+l4Hle9bf5+vf6/9K31u/756pfdB9bvXf4IBQFE4f2l252E8PXKkpxHi
      tMlVIOFqEgDhahIA4WoSAOFqEgDhahIA4WoSAOFqEgDhahIA4WoSAOFqEgDhahIA4WoSAOFq
      EgDhahIA4WoSAOFqRw6AY7XJ5Uu0W3WWVrMyU7x4Ih1xggyHh/ML1E2VUt4kkwyTLdYZT0eO
      tzshTtiRAqDXiqzny7R0g+nJMSKRCI1KW2aKl5nij7G+t+3f9/51+fodKQCBaJrXv5FiPbuB
      VzG5t7jJ7NVraJ/Oji4zxctM8f3Xm1+w9JfXd/vyHX2OMEVhfPzRDPLDY1+yrBBnlFwFEq4m
      ARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQ
      riYBEK525HmC15YXwRclGfawXqhy+eI0Pc8MKsQpO9oewHFIDZ+jUtxiNZtjNOElu1XdmSTb
      cZyeJ3r+bKLmx/U9N7W7/gi3qdhd33P57nX3Wd93/0ecaPqo/Tt91+/d9v7+fk50omyA1aWH
      TF64TC67gs/nwzZ2D4jvd6r73uvps37v+nsf1N5XPXvqe7wpwL76Ab/+e7ffPkKAd9X3uv3O
      3vruXv8jBcAydXTDJJ/Pk05EeLBS5JmrV9A+PQbSNA21x5m+VUXta6b4/TO99zfTeM8zte+b
      qby/md57HlS/t77vmdb7ff37mym+7/dPO8E9gMcX5isvvrDzOCmj4sUTSq4CCVeTAAhXkwAI
      V5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFfrOwBmW2ersH0cvQgx
      cH0HYGF+gXa9wOZ28zj6EWKg+g6A6vGRyaRpN1vH0Y8QA9V3ACIBjbvzq6SGh46jHyEG6ujT
      pH7q3NRFzk0dRytCDJ7iHOX2A4f4bKZ4VVVp6m2aervr2mDARzjg26nXjQ5No9N1vd/rIRx8
      XG90TJp69/U+j7arvm1aNHqo92oqkc/Vdyybeqv77fdoKtHP1Vu2Ta3V/fo1VSEa9O08bpsW
      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
    </thumbnail>
    <thumbnail height='192' name='Teams and #of matches played by &lt;Parameters.Select Batsman&gt;' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Batsmen Performance' width='192'>
      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
      7S8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Bowlers Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Bowlers Performance' width='192'>
      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
      1/q23ERJSZ0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top bowlers who dismissed &lt;Parameters.Select Batsman&gt;' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dV3NcaZrg9/8x6X3Cew+CAAESoC1vuiZ6Z7Wr3ZDu9kqK0I2+hD7GXuhS
      EQqFNkIK7c7uTPd0dbHoPTzhTcIkEmmQ3h+nC3CqGlWFaqKqiQQrzy+CEQQyT+ZzDvLJ8/pX
      MAzDwGSqU2KtAzCZaslMAFNdMxPAdEIul6t1COfKTADTCcVisdYhnCszAUx1zUwAU10zE8BU
      18wEMNU1MwFMdc1MAFNdMxPAVNfkv/whl8vVXTuw6aR66wgTzMFwpr8UjUZpaWmpdRjn5meL
      QAebc/zT3Zf8XIpkYhGShTK5RJhc9fvfx3eX+G9/eoJuGGAoPPwv/yczuzlS0QNSxeqJ10jt
      LrCf/VXncaGFtlbJFZXvfk6GI5RrGI/pe/Kpjxgqh/EibkmjqBvYyklWtvZJJDO0tbUSDYcZ
      mvoQm64hKHnu/uG/Ug0McevWLbqb3CiaiLWaJ13VceYj4PRQUXRUi4oVgYPNRVb3kgyOXcNe
      zrO5Ms9GqcDUnVtUEvvkSwU0RwuO0iFre3G6L00w0B48x0vzY+loiLnlHXouX8WjxJlf36el
      5xKXejzs7pbo6wuwtXlAb08ra6/niKQrdA9cRi0V2Hg9Ta4qMDE2wDd/+K9Y+4a5fu06HUF3
      Tc/ph5TX/x+5//t/r3UY5+bUBKgW0lRtPqY6FZZ3Mox70yRVJ9fHfDxZiPPlhyO8mDugxZlE
      bBlmfGwIsf9Lun3fv8bQYDMbW3GaOaKtpZEEkIpHcFqb2Nja4dLV27idFspJA1dDJ1ccYebD
      eezhJSpNY1xv8xMLZ2lva2ZuZpqB9q/O4ZKcQi8wsxjmo88+QlU0Smkb7W2tbKzM0dFyjfB+
      hr4+L3u7B7iFNGVXNx+P6Dx+Gqc1oOBuHaRTiHOYgpG+IVq//IzG2p3N6QwNtEqtozg3pxaB
      Ugcb7IZ2eLZ6yP7GMgA+fwBJtuD3e5FtFuS/UnuQA72oR2skiwKNPvuJx27cvEU+vsfr1V0E
      SaKhIYjdZsPAwOYOMtzfhaFW2drdx+HyIoo1rqroFWSHH6ss43RIrK9vYXe5sVlFdF0/8VSl
      WiHY0IgoSccX2GKnye/BYrMhmVWuC+XUO8DBkc6/+Xf/Cqco8Pr5Y3K6jEUWEQQJi0UGRCxW
      CVm2IIgirsYWHj36Z8RbH9HV6EKSZQRRot0pcuAIYJWzWAwB2WJFFAW2VhdJ5FW8rUOIkhVJ
      AEQZqyRisVgRBQEBAa2UZWtzi7Ja4w+OHKDJvsTXf/6GzsFRRL3C1uYW2aKKJHkpp1/yzd19
      8oqTYGsnD578iU2Hjir2I8sWRBEMUUKSRFp7fDz547dM3bxx4YpAltF/j/vT/7nWYZwbsxXo
      HShnE2zuxTGqRyiuYSaHm2sd0lurt1ag0yvBpl/M6vTSFKygCk20tFzIkr7pDTMB3gFRttLc
      1lHrMExvwRwKcQZn7iU1DNKZzKkP69UShbL6K6My/RpmApzByurS2Q4wdKbn5k99uJreYzNa
      X0MPLhqzCHQGhaMI9+5+TVF38sXHU7x68A1FQ8LdMkSbGEPqnCK++AeMhtt0yHHK/i4ADK3E
      q6cvSBfLBLtGGGmEb18sY1Ez+Edr2LfxEzbCSf40F611GOfGTIAzcDW0cfPGbdZnXhI7WIXW
      Kf7uSivf3r+Pf6iDvdg+hr0bLR8mIav0dDrZAkqxEJvxHE1eK/GDKGpa48vf/x4Sa6yVhFqf
      1gmpXJmFraNah3FuzAQ4A0PX0dQKiWyBoa4+yvtRlIqbiirgDTSQmH1A05WPkCLzRJUmLtuO
      S5gWhwNfQyeffzhGJlsgsjZHPFfGkc2giherlejmSDv/5rPJWodxbsw6wBm0+Ow8ePCUlqFx
      Ghq6GO2QefR0jskbNxBtXjq7eulq8tDR3UNHRxuSINDX04PF183VDgv3HjwmU9G5NHWdw4Vn
      7OYstAUdtT6tumZ2hJlOqOuOMHNCjMmcEGOqa/V2Bzi1DpCLrPOPf/yab775lpWdKKVklIPU
      3/7bIRIKUVS1X/UaycMdkkWVSi7O8kb4bxTZj21ubZ7tAEPn9crKqQ8rmQi7icKvjMr0a5ya
      AGq1xODkx3zx+ceE1hZQSnkOD3Z49WqGdFEhE41R0g0q+TTpfIFoNA5AOhajUCkR2Q8x8/IV
      iXwVQ1fYXJpncX0PHTg62OLFyxmS+SrZVJL90BozC6tUtSrR6BFoFba2d9F0nWQsTrVa4vXs
      K+ZXtlB0g8TREanDEAdHeQCKuRSlqsLsqwWaO1pIxKOoukE+c0S+rBI/3OP17Ct2DmIsz8+w
      dXAEb2J6NbdESdHIJY5IpaNs7SdOvViJw13mp1+yc5jCMAxShzu8eDVLtqyQOYpSUiEVCZHI
      K1TyKTLFKtHYm+sS3eHl9Dy5soJh6IRW5ng1PU08Vz9j7y+iU5tBdbXMzJP7hOw6zT1jQIlk
      tspkX5DVtS28mSjBhgak2D6HYjO53RX8TUGW1tYZH+tncWWPGzdGWJxfoL9JoigHkfM7LG9B
      fOuAsWuXMLQqqAWKNOMnzk4sT2T9NR6pj+npOQLNQdZ39plw9OBpaiMX2WU74ie2+gR7wxBX
      Ro9bULRynif/9A9c+vBLGhwyT2dWmPA1EQ9vYTSOsrswz+jULV7cf8zkJx8TWt6gq3EM0R2k
      sRhncSOMP7XJjiXA7Stjp16sSllhaGyQpekZ3LbLzC4fcv1qD0+fvmSsw0ax4iC5vYJgr9Jo
      L+DsGD6+loVDFrbT9Lc7ePXyNQMBhZSjk4FunfDF6gbg29kQ//D8Ua3DODenJoAo25n84FP6
      /Rr3779CvdxBV083Pq+M5eiHPYUCfW0uVlfWkf0dyKJEW2cXAX8TDssW8cgBcaOIx2al2+/H
      35dnc30Nd3MfFtlNX3crWqRKCoM2h8hKLMPtiV7WtvaxOvykYwdsRzJo2SM83m4srmamrl76
      7vYl2d3c/vgDtre3qHb9uF3dFWikucFPMNhAY9BPzGohn4qzvb2PTS+Qd9oISk6uXb+G52ca
      hh1eH0Gfn9aAh0Iygq2lD3+wGZu0TrCxh4PQClbvJfRynHRRoM11PAmomE5wGI9iwUtjUxvh
      1CE3xtpQYznEC9YRdqmrkebm+qkD/MwdoMrK/CvSHgHV4kD6weP+BhvzT19AMkzjeAsNHX08
      +od/5s7f/TvgZF2hvbuP2MYRosOKqFeJZwoIQKFYxP+D123tCvLq0SGj//5DFv7Tf2L0X/8H
      KvuzCKKE8C+fFVH8UdnN6mlhoifHq8VN3BaYfvmcZCzMlcbRnzw/tVJGR0AURTBAEESEv9Ir
      ouSOePb0MdmyyMcjI2zdf8STtAvsDdi9AY7WHzD45WWk0BareheTby6as6kTnxxGFEQEUaSv
      yc7dbx/h1pJY+i5WR1hbg5trdVQJPrUVSFerFEoVEATsdieSYKAjIImgajqyKFAslhBlGYvF
      iiwKVCoVLDYbgmGg6QayLKEoCrIsUSmVUA0Bp8OBqpSpKjp2pxN0DVGSQNcxBAERg0pVw2a3
      Ui2XsNgcCIZKsVhGsliQZRlD17FYLN/FqmkqCBKiAIqiIIkCpXIF2WLBYrGiayoWi4xSVZEt
      MpqqIckipWIRQbIgyRKSYSBYLD/bM1itlKgqGla7A6skoipVylUVu9OJLEKlXEG22kBX0AwJ
      qyxSVVWsFgtqtUK5qmC1O7BIwvF7ixIWqw1Zujj9kfXWCnQiAarVKoqi/NzzTb9xyWSSYLC2
      q2+cpxNFIMMwMLsF6lu9fQZOJIDNZsNmswGgayqVqoIgStisFgTh3VTWVKWKomoIooTVakF8
      R+9TS5qmIYriO7uGf0uFQgG3+2JN1H+XTq0EH2294u5qnlaPgD3Yx83xPt7Fn2/m6V1Kghsq
      BdzdV5gaan8H71JbG2uLtHRexu+xAhBeXsF7eQRPjeP6KUY5jRYzh0ODZGVk4gYT3V7mHn5D
      aAc0q59m44AXexa+vNHC4nKGNl+Z+fU9JHuAyUvNhPNWRrr8LL3eJGBVWU9mqOQqjN/6EDm7
      x+vNMLKnmQ+vjyIKArK7gTvjU+TDKyxnK2T2X7MW15BsXpqtOdZ249h8rVzr87CbtnO538/s
      7CrdzXZmlkKINi93PriJQ373366h5VdsHmToHJ7AVQ6zupvAGWjn+ngzK0t5Jq62MTu9xtjl
      Ll4+f0VJ0/C3juBSS8y+fIyi6YyNj/Hk8QOskeiFXBlO3fgzxfn/WOswzs1bND8IBHxWRLuT
      w3CMw1gBu5EhvrONEWzE5nBilUQSO0vkrI0k90MUc0nKhgWtUKFv4gZ3xvpI57JMv3qOquvs
      Li6SVI6HP6i5GPe+vcv0eoSWBj+VfIqKrYmrIz04nS4kAdbXVxFsfpLRHQqHG1QdQTY2o9z+
      /Esmex0sn8cEDjXNTkLiiy8+Z7A9iMPpRhIhtLlCsVIhmy0BOplMjvjeOo2XbvPZJ+Pk43mQ
      bIxeu8X18R7yBYmRviE+/PKzC/fhr0d/dUKMWimwe2RwfayJ8MYaWcFNd6OFmY0jPvmdzOKj
      bcbvfIz/xT+j6nZ6/CJzS9v0XLmJvj6PzSojiCKCATZvE3c++wJBqSBbjhvJZU8zn41PIVZi
      PJoP42uy0N7QhiTCwuoWdz76FOXBfQSLg0a7wpPlI2592M9abBNV01EUBVE+h2ZEUQJdRcfA
      0Kssruzz4aef8OzRPQwDdF1DKZeoqDqCcFyZVKsVdABRxCrLoIoIgCgYKIqOIQsXrl4g2P2I
      TZdqHca5OTUBbHYnO3PPSO14uHT1Og5RpLPBQc7eRbNfI5TScYgyrc0eXj15gsvqoUWGxuEB
      Xv1hljsemaTfjywKyHYnHt1K46U+Ht/7FruvmZtTY0gCuCWF+/fuIooyQ1cmsalR9OOiMm1B
      F0+fvkS0e5BEkfauLhJKErfVxvBILzOP7yO7GrhxPfDur5To4VKPkwf3HtB9aZzWBitPnr5E
      tHuxWoM4hGWeTmfwBP00dnYSevGCqEVDFzrxePxYZBFsLty6Fc9YL0/vP8SYuk57wPXuYz8D
      efB3uD76D7UO49z8bYdDayVePnyIe/AWIx2+v/7836hiKsKz6SVUpULv1U8YaruI1d2fVtcd
      YeaEGFMul8PjeX8S9tcyJ8SYTqi3O8CptcdiOko8+9fHqlfzScLxNIaho+vHuRQ/iPDD9c5K
      yX1mVkIcP8NgY+El+4n8j15vd3cXtDI7OxH0Hz36fkoexShXv5/0o2sa5rfOxXBqJbiQPCAi
      22ny2jB0lWQiQdWQaW5uQCsXSKSyuP2NuGxOghaJ3aUnrKc8TE0MENnbQ7fLCIaVpqAXQRAo
      xmPs7uYYHOzBTY7N7RANUietHpH4URqby0fA52Jze5Purg4aGgOgq+TzefKFEt5gE06rSCZ1
      RKGi4wsEsIkaiUQKi9NL0O9+Jx11f0mtlognUngCjViNCol0DpcviNcpUSzquFwWCvkyLped
      XDpJrqzi9QeIxyK4yzqSRabB7+HZP/4B/82b9DU04bJb/vobnyMtPE15/mmtwzg3b7UukFot
      ED1MoFcSxCtXMfbmwN9CURVpkVKsFXx4yiXKJYlyRUUpJNkNuyjsR5j4uy8IysdNnt3dQfb2
      U7SoOzT0DwKQTcZJZoqkNzcYvf7R8RsqGV7O7nPnaiv3772id6CdtZ0EV7psLO5k8DuqhA7a
      uNwhc5QukNla59LkxzS4fjho+29J5dXTJ7gaW1EkB5ZSnHRJZWNrh+vX+5iZTvPxJ728fDHH
      5Fgr06tRmoMCa1sZ2lx5Qvs6Vj1Ltu0S5WqFYq6A4m94h/H+MnpqG2Xx/6l1GOfmrRrQlWKW
      8GGE2NERh5E0TS0NZFJHFEvfjxxtaeukvauP9iYfFlcj4+NjDLQEUf6iiuFp6CSb2GcnrdAX
      PJ4skk7FODyIED48JF+q/uCdRTr7LzE6ehWnVCSdTjEycZ3hwW5EzSCTih8fG4mSK77jqYXV
      FBVLO1dGR+lu8XMUixCJHLJ/cED1B3Oas8k4gxO3uHSpF0nVweZmbHSMocFuBF2mtbGZ/pEh
      /C7bu43Z9FedfgfQNZLxKAdyBaEYw9cxREDZZrusYchu+vv8rG0f0Of2AiBZLWTiByTbTu/d
      FG0u/FqEsDjAoHj8oTlK5RkcGkJ7ncP4KyVjp8PB9sYaASlJlRaO0jkGhodg6a8f+6tZ/cjl
      RXb2XNidTtIFg0tD/eRzc4CVciFOaFMlWawy7m5ieX0ZxVeg/BMjfpwugb2tMPb2ZtwXrAgk
      tU9ha/rfah3GuTm1FahaSLG5ewhY6Rvs5HBnB5vXj83mwWrkCUeTNHf04rGoFDUZj10isrcD
      ria8FnD6vFSzOQS3G5sooBRyqDYXlDJUBCdui0pRlbHqeXYP0/gDfrw+P6V8loDPTSpbweux
      USqpuN0OstkMdllgN3xIqRCnSDdXB1zsRZL4ggE8Xj8O67ssAoFazrG9E6GhvRtLNcVhuoLP
      5yEYCHAU2aGgW/G6XPhcErt7EarKEYlcC1NXmrDaXKBXUDQJu6yxvb1PQ2c3fufFugvUWyvQ
      iQS46GPBK/kkM7MLaBYfk9cncJ7HEIhfQCllmJmeoyI4mbw5hdtyMeP8KfF4nKamplqHcW5+
      1BFWKpVqGY+pxsyOMFNdq7ci0KmV4OT2DF/PHxJ0CDT2XaXPC5o7SPBtWy6qKWY3c1y73P39
      7wyDo/01Xi3vYrHamBy/TCilcG3wDJNgyoc8WS7zwWTv2x9TY1sbyzS2DeB1HY/yS+zu4+ru
      5GKuC21g6L9upb73yakJoBkwMvkhE90+Hjx8gOLqQTQM1tfXGRwa4mh3E8MXpJCt0tvVwvr6
      Kl0tQV7NLmLxtjN1uZHU4R4P41v4Oy8x1t8GWpnFzRifffUVNlGAfIT4QYgH4TWaekcZbnXw
      4sU0FdHJtclrHO5vMzTYx/SzGS5fv072MITba6NcUakWU8xMz1MVXedWzj462GBhdZ/ukat4
      lBiLmwc0dg5yuc9HKFRicDDI+toeA31tLM3PEc9V6Oi7jFEusrYwTUGB8bFBvv3TP2HtG76Q
      E2KUxf+XvDkhBtAVQhvLzL16huRuIXMUI1dW0TNRonmFjf0YNr1ILJ4GIBwOE4/sIbrbGO5p
      O34J0c6tD25TODxAA7RqFdHhPP7wvyFY3Nz54CZHh2EMwBtoQC4mWNuPU4pFSaaT5DNxdhI5
      wgcprJY3xwoiPn8QuRJhJZR6V9fne1qe+ZU4H33yMe0BF6LFTmNDgK2VOQqVAoeRFKBxEI4S
      31tFDwzwyQdDREJHYGgEuy4x1h8glhbMCTEXyOkJIEgEG1vo6B3m1sTQd7/uGuhjf+kVsq8N
      +c1kjn+pRrT3j9Hf6uT17HPSFXD7A1gtElZJxgAkqxWtWKCiHbc2GYDHH8AiSciyzOHWBqrd
      R0dHE5qi0t3pZW5pn4Grk6Q2V8Hmxvrm8x/dXUexBejoaEUpn8P6moaCbPMgSxI2m8jaWoim
      1nZ8bhu6rr+5DsdPVZUqvoAfQXqzgJdsI+h1IVutSP8yGurCtrgJdfXv1CKQZHXQ5GykseG4
      RcBisyNLIk5/M9n4Sy4NT2B1aBQTM3x7L0LJsJOJ7vJ6bQ9EBw5Zwm6zAAI2u+347WQH40Ot
      fPv1n7Da7UyOX8Zu5XjxLZsVp9vCwvIacaOEt68dd3MPpZmH+G9f52D5Of62CRCyOO0WbHYH
      B6srJMQq3u6eM/yBfyE5QKt7hT9/c5fOwVGsYpXlpWWyRQ1J8qHkpvn2Xpii7qahrYeHj//M
      ll1DFQewWm2IogCSBYtFoqE/yON/vsfkzRsX7i5gufI/4Pnd/1rrMM7NmVuBjg42WdnLcevm
      Nd6j5u1zVcrGWN08QK9mkBrHuDpwsZY//Dn11gp05gQo5TPosvPCjWK8SHRNJZNOowkWggEf
      f1HlufDqLQHOvEukw12/Ux3flijJBBren2/9emYWYs4gk0mf7QDD4CiZPPVhrVIgVzLXYq0l
      MwHOYG199WwHGDpzi69PfVjJhNmO/XhWnOn8mBtln0HhKMK9u1+TV2188cl1Xt67S0WUcTT2
      0SEnkDpuEFv4b+iNd+iU41QCx61ThlrgxdNXZEtl/O3DjDQZ3Hu1hlXN4B/9qsZnddLq3hH/
      8OLd7bN20ZgJcAauhjZu3rjN+uxLEgdrSJ03+LuxFr69f5/gcCc78V0Edz8UDziSNHp7nGwD
      pdgO24kcTV4r6fgRSzmFr/7V7zHia6xdsB1iCqUqe7FsrcM4N2YCnIGh62hqhVg6z0j3IKW9
      A5Syg7Ii4AkESby6T/PVj5EP5jhQWxi1HpcwLS43Hn8bn30yTjqdJ7axQCRdwpVOocgXq7I8
      NdzG339yrdZhnBuzDnAGbQEXDx4+o2t0kmCgg4k+J4+eL3Lrzm1Eq5fegSF6mrx09g3Q192O
      JAgM9vdj8XZxc8DNgwdPKGgiIzdukVx+QbjsoqvRWevTqmvmcGjTCXXdD2CuDGfK5f72m6Ff
      ZOYdwHTCy7VVDvUfLmv223VqJTgTXuHe3C5uu4X+sev0tnh/5mUUQtuH9PZ1ff+bXJT9go2+
      1h9uhPrzdtY2aBsexHqmoyCzv8GL/QJf3bn6o8c21tcYHBr+2eMj2yECfb3Yf+Y584uLTIz0
      s7abYri/44wRvh8Oc1kexA9rHca5OTUBqpUSvVduc6Xdxv0n0/Q03mD19TypiszVq6NkEmla
      25rJpeKITjdWmxUwONhaZueoyuVuL9FInOjWMn1j12h2wfzMLBWLn2tXRsglDkmmomQ1N5Nj
      A1RyCeYXVokelWjuayeWV0jv79A+OERoeZ6C4WZycoxcMkoqekBGd3P1yhD/sjHM1kEMd0Uh
      pUBAqrAwPUPVFmRibIij+AGF9BGO1kG6PBolaxO2cpRE1UlnwMJRQUO0WZHRSUQiRCJhRF8n
      owPtJ1abSyQSYHQT3Q+ROtyhc+QqHr2A6Aki5KMcaR46GyRiRxqtzT/3hWG6KE5vBTJ08tk0
      R7EIFqcfXVVwBlpp84rMr+yws7VKVVPYWFvHEHXWV0NkwhuEchaujfaDrpPOVxi/MsT62jpa
      tYK/rQevlmY1HGdnZRGpoQ9nJkq0mOfl7DKXJ2/SHnRDJcuD+w+xt/ZiMRR8TZ00OvIsrB4S
      WllADPbiEVIcHh1P4DeqaUqGh7GRVra2oqRCy+QdbfR1NKCrBrl0hu7LE6T2VqmqJdbXw+zs
      77G+ukYmESGVq7C9uk4VjeW5RZoHRlGjG6RPGaWgGjLjk1fZePWEYj7OejjN/sYqq9v75PbX
      iKvmQMH3xc/MCNOI7q3zh7szTEyMkE/F2NnZI55Mky8WGelwsbAeRrEFcL+ZpZLNF2lrbcHh
      8uKwSrR1dOGyO7BYZVKH++yGD0hlk+QKVSyOAO3NPtxOJ6qi4PQF8Dpt2N5sgN0xOEZXk5dc
      4oDQ7j6JdJ5ivoDs9tPe6MPhciO8qb4cHe6xv7vJs/ktdrc38HYN49dSLC2vkqso+JtaCbhd
      OB0WLO42tMIOVd1DkxPCiSSBxu/3xfUEmgn63LidNk6rHTm9fpx2J80+K3JTF/mDHYr2Btpt
      RZZ2ywy0XszZvqYfOz0BJAsDYzf5H//+Fi8ePiNfqVIsFimVyhgG+HtGOZi5S2NH73fFhJa2
      drYXn/Pw8TPSxZMTqzVVoVgoUipXfvTBkm021HSEbx88ZvMgAXC8rdKb4wqlIuVy5afXfjN0
      DiNpvvjv/i1fffV7hoIGewcxjjI5SuUyqnbyKEGyYs0dUXb56WuxsLhv0Og8y4JaArlYiPv3
      7xLV/AScHoTSFoK9lYDLQqxi4DR7V94bp7YCGbqOIQiIgvDdPreaqoIgIorCdz+LkowgGGia
      gSQJ6JqGpoMsixiGgCiAbhgIAqiqhiCIiKIIGAiiCLoOgoBh6GiajigeP24YIIrHv1dVDUEU
      v9tDWDjehAsEAQHQdR1BlBAEvpueqGsaCCKSJGEYx6+r6zqCIB6veiCIx3HrBrIkoWsagiRi
      6MdxGW+e+5dbeGmahiSKaJqGbhhIsowoCOiaCqKEYBjoBkjS+5sBf5yd5mWqfrZJNZtBTSfU
      W0fY+/tVZTL9DZgJcA5URflu9xzTxWKOBj0HmxtLtHRexu857t7bXXiNf3yMi9hTYBQSqPt7
      tQ7j3JgJcAYbC88IxfJ0Dk3gLO2zvp/E5m3h5tVWlhbzTE618erFChNj3Tx9+pIqBt6mS3j1
      Aq+eP0LTVEbHx3n+/DHWeOJCrgynbt+jVEcrw5kJ8LbUFAcZB7/78haGYZA8SCOJKfZ21rly
      OUihUAYM8vki8f1N2q98TG8gw+PHKbxNTq7dmEKsHBDPy4z0DdH65WdcrJkA9clMgLclWjDU
      Eqquo2sVXq8d8OEnH/H4wbcYBui6RrVUoKRoCIIVRVFQyuXj3TIFAUkUv2u2FUWdalXHsAjH
      TboXiOBsRGqfrHUY58ZsBj2D+P4ar9cP6B6ZwEhssp9RsdltTIyPsfLyMUXJid3h59qldmZe
      TVORNZRKOyODLnzBNlBS5Ep2PFKap3PbjExepz3gqvVpnVBvzaBmArwDxVSEZ9NLqEqV/qlP
      GWi+WB/yn2MmgKmu1VsCmP0Aprp2aiU4sbPEy9UDZDQGJj+mr+nnbuNvJsQ0ydzfKPDpteNN
      sO//5/+DwNS/Y7zLwZOHM9z66DbSKXW+2MEOrsYuXNbfXk6ury7S3DGMz33cDxDd2sbd38eF
      LBhpFfTi6avZ/dacmgDxgwi94zcZbvUiCjpbKyu0D42Q3XuN2DxMdGWWTKGA5GnnxtUeSqUK
      GBKqpn/3Gu72QXKhRSrtN9BUFV0tMf/qBemSwcjUbSzFCIlkHsUWxE8eByKLs0/J5ysYrhZu
      TQyxszrHTixL/+Upen52Vtq7dxhaZnnrkO6Rq7grh7zePsTf2sv4cJDNjSIjI8wEMyMAABaz
      SURBVE0sL4UYHmxnfmaGdEmhuWsEuVpiae4FZcXgypVLPLj7NdbQBd0hZvm/UqijfoBTv24H
      rl4nH5rjj3/8mnhOIRmPoRqQT0UpKDrpTJWpDz7GWT2ipGnEoj81glBiuLeB1VD0+EdBxOVy
      Y5OLLCzskI3tkzS8jPa3k05GqaqQzha5dvsjLGqaQjbC3Os9bBaBp89fvqNL8Ja0HCuhHJ98
      9imdjR4sdicup4Ot1QWKlRKJeBbQiEUTxHfXsLaN8smHIxztp0EQ6BwcZ+JSM8msuUPMRXLq
      HUCQnUzd/gQ1v83DuW288GZosooE2J1ubLKMxSL+7B7tgbZ+Qi+eUFAkivFtjowgVyaCvHiZ
      Q2py09/WjvQX64fbnC7sFhlZltE1hUBbP1ev9TNe8+qKhiTbjodrCxpLKzuM35iiWn6Grh/v
      9qJrKpphoGkqTqcLwygfHypZ8DjtULYgwpsh3AaGwIXrB0Cygr1+VgA/NQGioWVW9xKAwOXr
      H1IN53h6/x4oVcYlAaf7eEEnu9ONhIjH6wbJgtf1/bRyl9uNIFkZ7O3gcOEQq9NP/nCBhYIV
      m6cdq93A8qZS4HR5kUVwudxvfnbh8LbjER7x9FmCpq5BJoa6fhTnuZH8dDVscvebb+kaHsPj
      MJiZnqWsilhkP0J5jvuPougWL40d3Tx5ep9dm4Yi9GJ3OJEkASw27DaZpuEWnnx9n4kbN+gI
      XqyagOXyv8Xz+f9S6zDOjdkM+g6UMlHmXm+hKXn8PTcY6w3UOqS3Vm/NoOZQiHfA7mnk6jU3
      OhJOx88ttGKqNTMB3gFBlHA4L1bRxvTTal2zfK8cHZ1xrqxhEI3FTn1YK2dJF6q/MirTr2Em
      wBlsbq1TLpWoqhqGYaApVUqlEppuHPdzGKApVVTdeLM4gMbrleNdZTS1SqlURnvTYlStlMnF
      dtlJFGp8VvXNLAKdQTEVZW5ummRO49OPp3j54CGS04Fub6bLnkZomyK++E8YwZt0WBKoDX0A
      GEqOly8WUDUFi7+TSw06T1cOcKopHIPtNT6rkxa3Y/xf97drHca5MRPgDFzBVm7euM3G7CsS
      B+vInVN8NNrMvQcPaOjqZDseQnQPopUPSSoqfb0ONoFifJdQNEWTz0Y1k2OlWOGLLz5Dv4A7
      xBgGKKr+15/4G2EmwBnoqkIhn+EglWO8d4TyTIhcu0BZlfAEGkg8+4a2G58j78+wp7Yy9mZc
      k83jx+Nr4vbtUfKFCpndZbYPU7iTcRTHxZoXNt7fzFcfjNc6jHNj9gOcweHOKqFIhu7hUdoD
      LpKREGv7KS6Pj+NzyOxtbRHs7IF8nJTmorPRQyQao621hVRkm9WdON1Dl2kL2FianUV0+mnu
      7KHBbav1qX2n3voBzAQwnVBvCWC2ApnqmlkHMJ2wnUpyPxapdRjnxkyAM5ienWXqyhBL20eM
      DnXXOpx3IlHI89LcIcb0U9LpNBga8XCIR5FtOi5dw08RwdeIkAkT13z0NUtE4gYdbfUzpPh9
      ZtYBfgFDcnLzgw/YX3hBuZJiI5wiHNomtHdAZnedtGgOgHtfmAnwCzjcHqyyhaDHiqWxi+LB
      DmV7A632MkvhKv3NF6dZ0/TzzAQ4A1GSAIF8dJs///lPJMQGAg43UnUH0dlOo8vKkSLguFid
      u6afYfYDmE748/wsc9l0rcM4N2YCmE4wO8JMpjpiNoOeg0qljCzbjifG/2I6pWIVu9OOcOL/
      b69QyON0uvmphSh0TaGqCuiFAtW9/V8R5/vFTIBzENpaPbFDTGhmjsDkVc7WU6CwvLDGxO0J
      5BP/f3vTr57z4cdf/uTqfKXCIaGwBfvsc5T//F/OFNn7zEyAt2awMv2I/WSF9sFxXKU9Ng5S
      yM4G7lzvZH42y81bnTx98pqpiR4ePXqBLoEzOExQyPP8yQN0TeHyxFVeTj/Hmkp/tzJc5nCT
      l4shqorIp7//kNmv71K12qioNr788jqzDx+RVzUKVRcTb6LJHe3x4NsjFFx88ek1Zh4+IFvR
      8bT206IlsF26SX7+TyQC17jiz3NQOt4M3NAqzDx/RjJforlvkj5/macvV1Ep09J9k3rrwTDr
      AG9LTRErBfjqq98x2tuE3eFCEkUi4RClqkKlogAGlXKF+P4Wfde/5PPPJlGzFbC5ufXBJ9y5
      cYlqxfKDleEMJIsdm1VCSW0Rzhg4fB188vnn9HksJKN72Lqv8OWXn9IR+H4lOU9DF598/gWX
      ghU217egZYSv/u532PL7eFr8hDb2KVgaIBPlcD9GsMUPQCG9x+ZOEkG0EAqts797wPXPfscn
      H1zDWpsrW1NmArwt0YZeyVBVVcrlIitbMT786AOafHYMQ0DTVSr5LIWqiiRJFAsFKoU8yk+8
      lCRqVCrH84oBNlc2GLnxIcNdAVT15HMFWaSQzaMqFQrlyne/NwwDQ1dJpCv4fE6KmTSqUqZQ
      FXA09VPYn8fqacYpVIhWRRrsx+UeSbLR2NXPZ59/xqc3J8BQKZSqlHI5fvDWdcEsAr0t0cW1
      sXaePHxEz8hVets9PH0xT7C1C7utkaBjg5fLFTq72mnqbiUyPcNsVEUUWgkEm7BZRRC8+EU7
      nskxnj1+hHDtOu0BJz39Xcy9eEbQ20mTQ0ZtbUQEAq0teBvbaY7O8vhFjMbW9jffWBI+p8bD
      ew/oGLhKa0sDWn6JB49eMjB6FYdsobuzBX9LK3aPym7JiQh0dHTh9LXTE0hw/95DekYm6L80
      yvT0MySvn45WJ1p3F+5//fc1vdTnyewHeAeK6QjPXy2hqipDNz+lJ+iodUhvrd76AU4kQC6X
      o1gs1jIeU43lcjk8Hk+twzg35h3AdEK93QFOrQSnD7eI5Y6rcHtr65R+wYun9vbIan+5xIZB
      dG+Do1wFw9DY3dqkov10/qX398n8sEb4nooehilVvj+XSrGIVsN4TN87tRKcTx5SFNtp9lhI
      7IfxDvdRiiWIJVIEm5vJJKL42vpo9lo52NmmYDjo7+2gmIywe5imvaeffDxOUdIJ53X6+3uw
      ySI+t4OXq5tMDXiJ5gW6UNhe26Qquejv7UIyqmxvbnKwEWagsRkjFSYcy9DW3Y/NKCE5fFhF
      jUyuSMB/vpNOqsUMm9thmrr6cOo5tvfjNLR30+y3kk4rBIMOjo6yNAR9xA52iWcqtHZ0kk4l
      KORLVA2Z3s5G7v2Xf8A9dpXLvf0EPRer5V0LPaL46I+1DuPcnKEVqMiLp0tcudbDw0dPuXVr
      ipXX8whdAdKKDUvlkNUdSG5uMDA6RKVSAUokUlWa1Azbhx5GOhuxB9oJGts8nktx5+MP0CpZ
      BIcXMXXI5qETNbyEpXkAjzMB6JQqGg0NAebn5rjc7iYla3Tak2wlvVw/1wRQeP70Fb0jI+iq
      Qr5cJtgYZHt5HvfUAEuv03z8SS+L8ytMXGpg7aBCf7vIwvwebZ48ScWBR4ixE3XidXkItjTh
      sF28Rjg9f4i286jWYZybU4tAoihi6MfFE/3NE4MtHbS3NONvaqWzrQ2HFaJ7W6ytr7IXy2K3
      Oenp9rOxsUk8lQMcDA730dbcCN/d9AVGR7vB1oxbFskno6yurLCxtUE8VaSAhUu9HTQGvKCp
      hDaXWXq9zFY4RnNHB/FwmI3NGEODre/62pxUTaM72ulsb6c56Ca8tcbS0jJb4QiKerJAU8im
      6R0eo6WlEUk3wOZmsK+XltYmRF3E43LT0NyEw3rxEqDenPoX8Dd3sDTznGrUTcrqO3VHw5aO
      LmJqlia/G4dNJ5cQ8XudZLJZ/Ke9uCAgCce5l8/l8QSbkOQyKuAyKryYXSAXCjPU34eiCzQ3
      N3KQLiHYfHilBLFKkGvn/dmxBnCoi8zNKwSaWylWDFpamkhnsgiCnWL6NXOzGRKFKtf87UzP
      PefIU6FM849eyhuQWZp+zZXhAYLui1UEkns+wtF/pdZhnJvTW4EMg0IuTb6s4g82YJOhXFax
      2WRK5SpOh51yuYzNZiWXTlHRBPwBP2opR65YxRcIImoKgs2GqKmohoDV8uZTqysUKwZOhxVD
      UzhKprHY7NjsdqyizlEyg9XmwOVxUSlkKVbBbrficTlRygWqWHHZLed4mY5pSplkKofL50dU
      S+RKKnaHDafDSTGbpGpI2Kw2rEKVWKqIUQ4TSjZxe6IVyWIFQ0XTRSyiztFRGpc/cOHuAvXW
      CnQiAVRVRdPM9olfSy3nmJuZpSz5uHljHKv4/syRTCQSNDZerPVK36UTCVAqld5UXk31Kp1O
      4/efWnj9zTlx/3U4HDgc70+3velvr1Kp1G8C/KWZR/fov/UpPovAs3v3uHLzGkdZje7W4Nne
      oVrg+fION8eHeHLvHqMffonfVl+DUFeX52npGsHvPh5wHFnfwDM0yIXcJlspomfMGWF0dQbZ
      D6fwdQqUJT9WtUShKpI/3ODlRhytmOfynU+x5/eYX9nF4m5iYrCBw6KVwXYvayshBi4PIwMG
      BrvLr/APXMdWiLCRsNHf5GJpe5+hBoknKzGUcoGAz0s2k+XS1EfYCrssrO/j8Ldy/doAG4tr
      ZAolRq9N4nWcfwUYILyxwOpugq7hCdzVCMuhGN6mLq6ONLK+VmB0rJnFhS1GhjuYfTVNtqLR
      2DGCTS2xOPOMiqJzZfwyj+7fxboX/m5CzEWirP4Thfn/WOswzs2pX8W+xnbS8X3iG+s0XxpB
      rxZI5Uoo5Tz+zst8fmeA3b0MVpsTq1UmujlPzuInurNNOZ8mp/Dd1Lv4zjJP1tIMdfrRKgXS
      +TKGrpJMZdBKGdwdo0wOtqA7m7l9c4ijSAqr3YnVIrG/uUiqqLC9ucflq9fw1OjDj5ZhI1zl
      s88/o7fFh93hwiKJbKwuUqiUSSbzgM5RIkV8bx1X9zU+/egy6UgGBJn+kWtcG20nnRN/MCHG
      VEun3gEsTj9OdZnpiMHvhq1oyePfC6KIw2ZHkmUEFJaXthi5fhu/mEfRnXR6DBZXt2kZnvpu
      wnZTz2U+bRJ5Mr3BZAcYuo6mVlHfjAOyO+yIFQm73YogaYhovH69ycSdOzhnHqJqOk3t3fic
      tZ2zJLzpuxBEjYXlHW5+9AHiswfHk1MMHU2poug6hq5jtVrRtRwGgCTjtNugLCMCgmCgaQaG
      CMJPzVCvIcHiRPC01TqMc3N6I7Qg0dbmIxeVkQQBw+LA55KQ7RpOiwiiDZ/LgtVwMPP8GVZD
      pkGC5pEBXv3jLNdvvvmmFiV8bjfe9h660zNkpQ7Kh/M8iVmxepuQ7BZckoBFcOHWbEiShssl
      YFNtvHz6HEGQ6JYlvL4a77sr+ehrFbn37T26hq/Q4JF49uwFqmHDYgkgqws8fHaE7PTS2NHF
      s2ePCVs1VKEbp9ONLAtgdeBwWGi51MGTb+5z5foNOoIXaz9h+dLf4/70f6p1GOfmbzscWisz
      8/Qx1q5rjHWfsbL8G1JMR3g5u4qmlGgd+ZDLXe/PStF13RH2qxkGmqYjSuKFu7WfJ8Mw3nQo
      CkiS9JPr8FxU9ZYAf9t+eEFAkqW/6Uu+jwRBQJYv1hCHt5WrlMkfJWodxrl5P/9KNRKOROho
      aSCWLNLc+NvsLFqJx3iwVD87xNRXj9SvtLq6ClqZrdA+mXSaiqKhVquouo5WLVOuqhiGRqX6
      25jJVg/MO8AvkI0fsCmUOMqqjLbbyXr6sYWfs6J38+WAwWKymRvD9dsI8D4x7wC/gK+1h6mp
      G3R7VOTmNo7Ch2TlIO1ynvXNFL19gVqHaHpLZgL8AmqlSDJxyEEGfL4W9PwagiWIzymzV9Bo
      sLxHzT51ziwCncGVsTGQnPS0uNgJx5n84A52UeDKyASCrwO3kUcO6mdastxUW+a6QKYTtvf3
      sXnrZ2Es8w5gOsFpsdDifX96rn8tsw5gqmtmEegchLbXaGjpw+M8HiCYihziaGs942YUVVYW
      dxi6MoR04v9vb2b6BROTN0/ZISZKJCYjvn6K7WH9rAtkFoHOIBvfZfb1Nt2Xr+FV48yt7dHa
      O8Jwt5v9vTI9vQG2tw7o6Wll/fUckVSZ7sFRlGKezaUZslWBq6P9/Pkf/wFr3/B3E2JK2RjT
      s0tI3jZuXh0gvLFN7CiK6O1k8nI3sZ01lrb3KSluBq8MAQbpWJgnDw8ItA8z2tfCYWiV1Z0E
      Q+OTWPIJnJ09FPdWKLq6aHNWSBVt5PM5MHTCW8ush9OMT93Eb1N5PTtHNJOiqWMKTy6HEgrV
      +lKfG7MI9Lb0Iq/md7nz8Yc0e23oopWuzg5CK7Pky3n29o4Ald2dMIndZYr2Tj6608/eRgzU
      Ks7mfi53u4mk+NGEGMMQaG7rpLq7wF5RZXfngMGrt5GO9klmDliJ63z22Uc0eb6fr21INq7f
      +Zjq/gIH0TArUY2PP7zO9sI0hpJgI5zl8OCAnd0Djva2KMvHu9eXs1Feb8Zpa3Lz6PELQivz
      uLrGuHN9tC6/Dc0EeFt6GdkRwCpbcDpkNte3EC1WJElA1/UTT1UqFRqamxCl4wkwWB00B7xY
      bHakH5U4DfY3N6gg4vVAsQhOTxC3Q8ZutVHOF2hoaUIURaS/WF7FZndhkSUCPgf5bAGXP4Bk
      teO2G9g7hkivL0CwG5eRJZzSaPdb3sSWwxAd2J1+bkyOUqnqNAQ8iJJUl8239Zj0v4wcoNH2
      mq///A2dg6OgldkJ7ZArKYiil1LqBd/c3SdbdRBo7ebB4z+x6dRRxX4kST4eEi1KSKJIS5eX
      J3/8lqmbxxNiZNFge3cH0kV6RQHZclyylywynpYO1u8+5O62jar2/eQZpRDj3jdfg7WBz670
      8vLBQ/689xpXcx8euxeUCC7PBEEtzYrhxiqAxWLB5e/EYWywvlGgsXOQ7pYgT775Eza7QWPH
      JILVgmjuD2D6Ncq5BKFwEqOSoGQfZOrSj5dHvKjM+QCmX83q8OJzF1G9gwy3vT8f/npkJsA7
      IMpW2jq7ax2G6S2YleAzyOfzZzvAMMhks6c+rCslihVz7kAtmQlwBssrr892gKHzanbu1Ier
      qT02DnO/MirTr2EWgc6gcBTh3t2vKeHi84+mmH7wDQVdxNs6TIsYQ+6YIv76DxgNt+mQ45R8
      nQAYWonpZy9JFco0dI8w0gjfPl9CVjP4R7+q8VmdtHWQ4u5ivNZhnBszAc7A1dDGzRu3WZ95
      QSy8gtEyyd9daeXb+/fwD3WyF9tHs3Wi5/aJyyrdHU62gFIsxGYsS6PXSnQvgpLS+eL3v4fE
      Gmuli9X6Hs8UebFiToo3/YR/WdHuKFdksKuZSjiOUnFTUUW8gSCJ2Uc0jn2AfLhIVGng8ptF
      gGW7A19jF59/MEo2VyS8OkciX8aRy6IKF2st/tuXO/jvP5+qdRjnxqwDnEGz18b9B09o7B+j
      oaGLS60CD5/Ocm3qOqLNR3tHF93NXtq7umhvb0cSBHq7u7H6u7nSKnLvwWNSJZWRyUkO5p8R
      yoi0Bszl6GvJ7AgznVDXHWG5XI5isVirWEwXQC5XX61S5h3AdEK93QHMOoCprpkJYKprZgKY
      6pqZAKYfMwwKmSPCkTjab7yKaCaA6UcqhQTPXr0mGVlnevm3vWOkmQCmH8lFd2gducH45B3K
      yZ1ah/NOmQlg+hFD17FYLSCIiNJv+yPy2z470y/i8DcQ3Q1Rzh6gGL/trVzNBDD9iKuhl3Z7
      jmfz+1yfGq11OO+U2RNsOsHsCTaZ6oiZAKa6ZiaAqa6ZCWCqa2YCmOqamQCmumYmgKmumQlg
      qmtmApjqmpkAprpmJoCprpkJYKprZgKY6pqZAKa69v8DIkmAfD15CtsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='107' name='Toss outcome vs Match outcome (for each Ground/Venue)' width='192'>
      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
      1gzppxAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Winning Analysis Based On Toss Decision' width='192'>
      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
      3T5yAj50LYXL40PFQNMVAn7Pu/rAurot2Da6lkL1+rB0HbfXh21o2C4fbsUmret4PCqjgyPg
      Umjdv4uaVZ+l2p8mkdRQ3F5yAr7Lc2gvrct2+fCqJgnNJhDwogCaphGJRCgtLSWd1nB7fKiK
      ja5p4PahWmniSQ2Xx0eO34ttmegWeN0qum7g9XqxjDS6reLCIJlM4/L6UBXw+3xYRpp4IoXb
      F8DnstFMhYDPQzKRwBe41M9Xt9+2SaXT+LxeFEXB0DVM24XXo5JKxNFNhUBuLh6XgmUkOLR7
      H7XL11AWULBNg1g8ier24lbB4/NhaGncft/VN7mX+sCDW7XRNJNAwIeiKMqUCUA2jIyM4PP5
      yM3NzVoNH7wPTDpa9nGsfZiKmQtomjcD9yTnjL87ANky+e1PcuitXZgVjSxtqPqDzuLcMACp
      VOqWzRMNh8NZ7fxoNIrH4yEQCNz8zhmSzT7QdZ1YLEZhYWFW2ofsbn8wGFSuGwrqun7LJiob
      hoGmTfA0ZQZc2U51AqcoMyWbfWAYRtafg2y3f10AQqHQLWs8Ho9TVFR0y9q7kWwPgbLZB1d2
      vGw+B9neB6bEB2FCZEsGT4PatB/ZydH2ISzbwls8i7X3LJbEiSklo58DVDcso3aBD5etsfWl
      rYyxmOwOeIS4VgYDoOB2QU/nWQb6B1BrZlJw8wcJcUtldkRi2+i6geLyoCej6Bn6oTMhPqgM
      BsDCsN3UzW5k6bJllCZ66ZZfRRVTTAaHQGlO7NlO+2gMbBslUMnD2TvbKMQNZTAAfpbc+yBL
      MteAEH8wOSspHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAc
      TQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0C
      IBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAc
      TQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0C
      IBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAc
      TQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0C
      IBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAc
      TQIwxXV0dPD444/z05/+lLNnz9Lc3HzdfS5evMjPf/7za5aFw2E2btx4q8q8bbmzXYD4/WKx
      GC+//DLl5eWsWLGCsrIySkpKAOjt7aW3t5e5c+diGAYjIyMAJJNJTp8+zcDAAIODg9ks/7Yg
      AZjCdF1neHiYnJwchoeHCYfDRKNRli1bxosvvkhpaSnpdJq6ujoAbNvmqaeewu/3Y5omlmVl
      eQumPhkCTWGFhYU0NTWxevVqVq5ciaIoAOzdu5eWlhYOHjzIli1bME0TgHg8jmmarFu3jrVr
      15KXl5fN8m8LcgS4DVmWxbp161ixYgVwaTh0Zblt29ks7bYjAbgNrV69mu9+97vs27ePhoYG
      Fi5cCEAoFCKdTvPEE09gGAb5+flZrnTqU+wsvmR0d3dTU1OTreYZGRnB5/ORm5ubtRpu1gfJ
      ZBJVVfH5fGiahmVZ+P1+xsfHGR8fp6ioCK/XSyKRIBQKkUqlGB4exu/34/f733fbNE0jEolQ
      WlqaiU2bkGzuA4qiKBk9Aoz0nOFQyxmiSYPC6Y2sWXqnvOmYpEAgcPVvn8939e+8vLxrxvih
      UAgAv99PVVXVrSvwNpfR/VG3PSxZ9Uk+++iDWB1nGctkY0J8ABk9ApTV3IFtW8SGutGC+eRy
      6VTdu0dd2TxVd6WWbJ8uvKb99DgYWuYaCxSBcul1b0pu/y2W0QDYtkn3if0c7dVZuWYlPsCy
      7aun7SzLwjCMTJbwvkzTxDCMrNbw3j7Qt/4t1tlNGWvPu+53KLnTADAMI+vPQbbbz2gA+k43
      054u4eEHZ+O6vExVVVRVvfq31+vNZAnvy+124/F4slrDe/vAVFUy+Xro8XpQL7dn2zYul2tK
      bf+tlsEAJDl19AxaaR17dw2gKCGWrFxETuYaFGLSMhgAL8s+tZakfunwpigespdzIW4sgwFw
      kVdUjHwYL6YyOS0vHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxN
      AiAcTQIgHE0CIBxNAiAcbcLzAfRElGNHmomkrl3uCxWxaNFigjLbRdyGJhwAy9S42NdF++kW
      uj31NJR5wYrRFfZz54LFBDNZpRAZMuEA+EIlPPyFP+H8mz+htfzLPDI/hGKneHX90yTTgD+D
      VQqRIZOeElnRuIyn//kJYsub0AfO0GtMZ1Xg5o8TYiqadAByKhbz13+Vx7kL/VDzSR66s54C
      TyZKEyLzJhwAM52ir7eb1OVrGE0rqwBgfGyYvNwqfK73ebAQU9TEzwLFR9j2+m/oiVy7PFh2
      B1/60mOUyAV/xG1owgHwF1byx9/4ViZrEeKWkw/ChKNN+AiQCLez4/QQ9ep5hmd+maUVmSxL
      iFtjwgFweVycbd5Jnz1Aqr+S2KVf68QbLGLhggXkyifB4jY04SGQr6CKz6+9D6/LA6aOrl/+
      ZxjIz7KJ29XEPwdQ3FTfuZjPl5aTdOWj6EkUt49QKBe3vJMQt6lJfxDm9dr89HuP06N70eMJ
      lj76VR67dx4uJRPlCZFZkw5A94HXqPrst/irxUUo5ji/eWo9vcvmURvKRHlCZNakBy++nFy6
      Tp8mlkwy1NdOOO7CK782LG5Tk951yxc9zOwzz/KDJ7ficodY/egXKJUvw4nb1KQDoPryWftH
      X+d+TcPl9uJ2u5Dhv7hdTXoIpCejpEwVvz+Ax62SisUwsvsrm0J8YJMKgG3btO36Bc19FpZl
      YVk6u157jr54psoTIrMmNQTqOPAq61/dQ2JPnP0hwBhnlDv4mC9D1QmRYZMKQMnMJdyzooNo
      1QPUF4MvWERVRQk+mRAjblP/H/gpGp/fkAjjAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
